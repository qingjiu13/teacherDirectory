{"version":3,"file":"AI.js","sources":["pages/AI/AI.uvue","../../HBuilderX/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvQUkvQUkudXZ1ZQ"],"sourcesContent":["<template>\r\n\t<view class=\"page-container\" @click=\"onPageClick\">\r\n\t\t<!-- 新增导航栏和侧边栏 -->\r\n\t\t<view class=\"nav-sidebar-container\">\r\n\t\t\t<!-- 侧边栏遮罩层 -->\r\n\t\t\t<view class=\"sidebar-mask\" v-if=\"sidebarVisible\" @click=\"closeSidebar\" :style=\"{opacity: sidebarVisible ? 0.5 : 0}\"></view>\r\n\t\t\t\r\n\t\t\t<!-- 历史记录侧边栏 -->\r\n\t\t\t<view class=\"history-sidebar\" :class=\"{visible: sidebarVisible}\">\r\n\t\t\t\t<view class=\"sidebar-header\">\r\n\t\t\t\t\t<text class=\"sidebar-title\">历史记录</text>\r\n\t\t\t\t</view>\r\n\t\t\t\t<scroll-view class=\"history-list\" scroll-y=\"true\">\r\n\t\t\t\t\t<view class=\"empty-history\" v-if=\"historyChats.length === 0\">\r\n\t\t\t\t\t\t<text>暂无历史记录</text>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t\t<view v-else>\r\n\t\t\t\t\t\t<view \r\n\t\t\t\t\t\t\tv-for=\"(item, index) in historyChats\" \r\n\t\t\t\t\t\t\t:key=\"index\" \r\n\t\t\t\t\t\t\tclass=\"history-item\"\r\n\t\t\t\t\t\t\t:class=\"{'active': currentChatId === item.id}\"\r\n\t\t\t\t\t\t\t@click=\"loadChatHistory(item.id)\">\r\n\t\t\t\t\t\t\t<view class=\"history-item-content\">\r\n\t\t\t\t\t\t\t\t<text class=\"history-title\">{{item.title || '对话 ' + (index + 1)}}</text>\r\n\t\t\t\t\t\t\t\t<text class=\"history-time\">{{formatTime(item.updatedAt || item.createdAt)}}</text>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t<view class=\"history-delete\" @click.stop=\"deleteChatHistory(item.id, $event)\">\r\n\t\t\t\t\t\t\t\t<text class=\"delete-icon\">×</text>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</scroll-view>\r\n\t\t\t</view>\r\n\t\t\t\r\n\t\t\t<!-- 主内容包装器（包含导航栏和主内容） -->\r\n\t\t\t<view class=\"main-wrapper\" :class=\"{shifted: sidebarVisible}\">\r\n\t\t\t\t<!-- 顶部导航栏 -->\r\n\t\t\t\t<view class=\"nav-bar\">\r\n\t\t\t\t\t<view class=\"nav-left\">\r\n\t\t\t\t\t\t<view class=\"history-btn\" @click.stop=\"toggleSidebar\">\r\n\t\t\t\t\t\t\t<text class=\"iconfont\">&#xe67c;</text>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t\t<view class=\"nav-title\">\r\n\t\t\t\t\t\t<text>研师录AI</text>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t\t<view class=\"nav-right\">\r\n\t\t\t\t\t\t<view class=\"new-chat-btn\" @click.stop=\"startNewChat\">\r\n\t\t\t\t\t\t\t<text>新对话</text>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\t\t\t\t\r\n\t\t\t\t<!-- 主内容区域 -->\r\n\t\t\t\t<view class=\"main-content\">\r\n\t\t\t\t\t<!-- 筛选区域 -->\r\n\t\t\t\t\t<view class=\"filter-section\" @click.stop>\r\n\t\t\t\t\t\t<!-- 第一行：学校 -->\r\n\t\t\t\t\t\t<view class=\"filter-row\">\r\n\t\t\t\t\t\t\t<view class=\"filter-item full-width\">\r\n\t\t\t\t\t\t\t\t<text class=\"filter-label\">所在学校：</text>\r\n\t\t\t\t\t\t\t\t<view class=\"choice-wrapper\">\r\n\r\n\t\t\t\t\t\t\t\t\t<choice-selected \r\n\t\t\t\t\t\t\t\t\t\t:defaultText=\"'请选择学校'\" \r\n\t\t\t\t\t\t\t\t\t\t:choiceIndex=\"schoolIndex\" \r\n\t\t\t\t\t\t\t\t\t\t:choiceList=\"schoolList\"\r\n\t\t\t\t\t\t\t\t\t\tmode=\"search\"\r\n\t\t\t\t\t\t\t\t\t\t:searchPlaceholder=\"'搜索学校'\"\r\n\t\t\t\t\t\t\t\t\t\t@onChoiceClick=\"onSchoolClick\"\r\n\t\t\t\t\t\t\t\t\t\t@search-input=\"onSchoolSearch\"\r\n\t\t\t\t\t\t\t\t\t\tref=\"schoolDropdown\">\r\n\t\t\t\t\t\t\t\t\t</choice-selected>\r\n\r\n\t\t\t\t\t\t\t\t\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<!-- 第二行：专业 -->\r\n\t\t\t\t\t\t<view class=\"filter-row\">\r\n\t\t\t\t\t\t\t<view class=\"filter-item full-width\">\r\n\t\t\t\t\t\t\t\t<text class=\"filter-label\">专业：</text>\r\n\t\t\t\t\t\t\t\t<view class=\"choice-wrapper\">\r\n\t\t\t\t\t\t\t\t\t<choice-selected \r\n\t\t\t\t\t\t\t\t\t\t:defaultText=\"'请选择专业'\" \r\n\t\t\t\t\t\t\t\t\t\t:choiceIndex=\"majorIndex\" \r\n\t\t\t\t\t\t\t\t\t\t:choiceList=\"majorList\"\r\n\t\t\t\t\t\t\t\t\t\t@onChoiceClick=\"onMajorClick\"\r\n\t\t\t\t\t\t\t\t\t\tref=\"majorDropdown\">\r\n\t\t\t\t\t\t\t\t\t</choice-selected>\r\n\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<!-- 消息区域 -->\r\n\t\t\t\t\t<view class=\"message-section\">\r\n\t\t\t\t\t\t<scroll-view \r\n\t\t\t\t\t\t\tscroll-y=\"true\" \r\n\t\t\t\t\t\t\tclass=\"message-scroll\" \r\n\t\t\t\t\t\t\t:scroll-into-view=\"autoScrollId\"\r\n\t\t\t\t\t\t\t@scrolltoupper=\"onScrollToUpper\"\r\n\t\t\t\t\t\t\t@scroll=\"onScroll\"\r\n\t\t\t\t\t\t\tref=\"messageScroll\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<view v-if=\"messages.length === 0\" class=\"empty-message\">\r\n\t\t\t\t\t\t\t\t<text>您可以开始提问了...</text>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<view v-else class=\"message-list\">\r\n\t\t\t\t\t\t\t\t<view v-for=\"(msg, index) in messages\" \r\n\t\t\t\t\t\t\t\t\t:key=\"index\" \r\n\t\t\t\t\t\t\t\t\t:id=\"'msg-' + index\"\r\n\t\t\t\t\t\t\t\t\tclass=\"message-item\" \r\n\t\t\t\t\t\t\t\t\t:class=\"[msg.type, {'streaming': msg.streaming}]\">\r\n\t\t\t\t\t\t\t\t\t<view class=\"message-header\" v-if=\"msg.type === 'ai'\">\r\n\t\t\t\t\t\t\t\t\t\t<text class=\"ai-title\">研师录AI</text>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t<view class=\"message-content\">\r\n\t\t\t\t\t\t\t\t\t\t<text>{{msg.content}}</text>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t<view class=\"message-status\" v-if=\"msg.status === 'sending'\">\r\n\t\t\t\t\t\t\t\t\t\t<text class=\"sending-dots\">...</text>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t<view class=\"message-status\" v-if=\"msg.status === 'error'\">\r\n\t\t\t\t\t\t\t\t\t\t<text class=\"error-text\">发送失败</text>\r\n\t\t\t\t\t\t\t\t\t\t<view class=\"retry-btn\" @click=\"retryMessage(index)\">\r\n\t\t\t\t\t\t\t\t\t\t\t<text>重试</text>\r\n\t\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t</scroll-view>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<!-- 功能模式区域 - 移到消息区域下方 -->\r\n\t\t\t\t\t<view class=\"function-section\">\r\n\t\t\t\t\t\t<view class=\"function-list\">\r\n\t\t\t\t\t\t\t<view class=\"function-item\" \r\n\t\t\t\t\t\t\t\t:class=\"{active: currentMode === 'general'}\" \r\n\t\t\t\t\t\t\t\t@click=\"switchMode('general')\">\r\n\t\t\t\t\t\t\t\t<text class=\"function-item-text\">通用</text>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t<view class=\"function-item\" \r\n\t\t\t\t\t\t\t\t:class=\"{active: currentMode === 'school'}\" \r\n\t\t\t\t\t\t\t\t@click=\"switchMode('school')\">\r\n\t\t\t\t\t\t\t\t<text class=\"function-item-text\">择校</text>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t<view class=\"function-item\" \r\n\t\t\t\t\t\t\t\t:class=\"{active: currentMode === 'career'}\" \r\n\t\t\t\t\t\t\t\t@click=\"switchMode('career')\">\r\n\t\t\t\t\t\t\t\t<text class=\"function-item-text\">职业规划</text>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<!-- 输入区域 -->\r\n\t\t\t\t\t<view class=\"input-section\">\r\n\t\t\t\t\t\t<input class=\"message-input\" \r\n\t\t\t\t\t\t\tv-model=\"inputValue\" \r\n\t\t\t\t\t\t\tplaceholder=\"请输入您的问题...\" \r\n\t\t\t\t\t\t\t:disabled=\"isProcessing\"\r\n\t\t\t\t\t\t\t@confirm=\"sendMessage\" />\r\n\t\t\t\t\t\t<button class=\"send-button\" @click=\"sendMessage\" :disabled=\"isProcessing || !inputValue.trim()\">\r\n\t\t\t\t\t\t\t<text>{{isProcessing ? '请稍候' : '发送'}}</text>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t\t\r\n\t\t<!-- 加载提示 -->\r\n\t\t<view class=\"loading-mask\" v-if=\"isFullLoading\">\r\n\t\t\t<view class=\"loading-content\">\r\n\t\t\t\t<text>{{loadingText}}</text>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t</view>\r\n</template>\r\n\r\n<script lang=\"uts\">\r\n\timport choiceSelected from '../../components/combobox/combobox'\r\n\timport { services } from '../../store'\r\n\timport store from '../../store'\r\n\t\r\n\t// 消息类型常量\r\n\tconst MESSAGE_TYPE = {\r\n\t\tUSER: 'user',\r\n\t\tAI: 'ai',\r\n\t\tSYSTEM: 'system'\r\n\t}\r\n\t\r\n\t// 消息状态常量\r\n\tconst MESSAGE_STATUS = {\r\n\t\tSENDING: 'sending',\r\n\t\tSENT: 'sent',\r\n\t\tERROR: 'error'\r\n\t}\r\n\t\r\n\t// 对话模式常量\r\n\tconst CHAT_MODE = {\r\n\t\tGENERAL: 'general',\r\n\t\tSCHOOL: 'school',\r\n\t\tCAREER: 'career'\r\n\t}\r\n\t\r\n\texport default {\r\n\t\tcomponents: {\r\n\t\t\tchoiceSelected\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\t// 从Vuex中获取状态\r\n\t\t\ttestResult() {\r\n\t\t\t\treturn store.getters['aiChat/testResult'];\r\n\t\t\t},\r\n\t\t\tisTesting() {\r\n\t\t\t\treturn store.getters['aiChat/isTesting'];\r\n\t\t\t},\r\n\t\t\tisLoading() {\r\n\t\t\t\treturn store.getters['aiChat/isLoading'];\r\n\t\t\t},\r\n\t\t\t// 新增计算属性，从Vuex获取历史会话\r\n\t\t\thistoryChats() {\r\n\t\t\t\treturn store.getters['aiChat/historyChats'] || [];\r\n\t\t\t}\r\n\t\t},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\t// 用户基本信息\r\n\t\t\t\tuserInfo: {\r\n\t\t\t\t\tschool: '',\r\n\t\t\t\t\tmajor: ''\r\n\t\t\t\t},\r\n\t\t\t\t\r\n\t\t\t\t// 消息相关\r\n\t\t\t\tinputValue: '',\r\n\t\t\t\tmessages: [],\r\n\t\t\t\tisProcessing: false, // 是否正在处理消息\r\n\t\t\t\tisFullLoading: false, // 是否显示全屏加载\r\n\t\t\t\tloadingText: '正在加载...',\r\n\t\t\t\tautoScrollId: '', // 用于自动滚动的ID\r\n\t\t\t\t\r\n\t\t\t\t// 对话模式\r\n\t\t\t\tcurrentMode: CHAT_MODE.GENERAL,\r\n\t\t\t\t\r\n\t\t\t\t// 学校和专业选择相关\r\n\t\t\t\tschoolIndex: -1,\r\n\t\t\t\tmajorIndex: -1,\r\n\t\t\t\tschoolList: [\r\n\t\t\t\t\t{ choiceItemId: \"bjdx\", choiceItemContent: \"北京大学\" },\r\n\t\t\t\t\t{ choiceItemId: \"qhdx\", choiceItemContent: \"清华大学\" },\r\n\t\t\t\t\t{ choiceItemId: \"fddx\", choiceItemContent: \"复旦大学\" },\r\n\t\t\t\t\t{ choiceItemId: \"zjdx\", choiceItemContent: \"浙江大学\" },\r\n\t\t\t\t\t{ choiceItemId: \"njdx\", choiceItemContent: \"南京大学\" },\r\n\t\t\t\t\t{ choiceItemId: \"scdx\", choiceItemContent: \"四川大学\" },\r\n\t\t\t\t\t{ choiceItemId: \"whdx\", choiceItemContent: \"武汉大学\" },\r\n\t\t\t\t\t{ choiceItemId: \"zsdx\", choiceItemContent: \"中山大学\" },\r\n\t\t\t\t\t{ choiceItemId: \"xjtu\", choiceItemContent: \"西安交通大学\" },\r\n\t\t\t\t\t{ choiceItemId: \"hust\", choiceItemContent: \"华中科技大学\" },\r\n\t\t\t\t\t{ choiceItemId: \"hit\", choiceItemContent: \"哈尔滨工业大学\" },\r\n\t\t\t\t\t{ choiceItemId: \"sjtu\", choiceItemContent: \"上海交通大学\" }\r\n\t\t\t\t],\r\n\t\t\t\tmajorList: [\r\n\t\t\t\t\t{ choiceItemId: \"jsjkx\", choiceItemContent: \"计算机科学\" },\r\n\t\t\t\t\t{ choiceItemId: \"rjgc\", choiceItemContent: \"软件工程\" },\r\n\t\t\t\t\t{ choiceItemId: \"sx\", choiceItemContent: \"数学\" },\r\n\t\t\t\t\t{ choiceItemId: \"wl\", choiceItemContent: \"物理\" },\r\n\t\t\t\t\t{ choiceItemId: \"hx\", choiceItemContent: \"化学\" },\r\n\t\t\t\t\t{ choiceItemId: \"sw\", choiceItemContent: \"生物\" },\r\n\t\t\t\t\t{ choiceItemId: \"jdxy\", choiceItemContent: \"机电工程\" },\r\n\t\t\t\t\t{ choiceItemId: \"dqxy\", choiceItemContent: \"电气工程\" },\r\n\t\t\t\t\t{ choiceItemId: \"jzxy\", choiceItemContent: \"建筑学\" },\r\n\t\t\t\t\t{ choiceItemId: \"lyxy\", choiceItemContent: \"临床医学\" },\r\n\t\t\t\t\t{ choiceItemId: \"yyxy\", choiceItemContent: \"药学\" },\r\n\t\t\t\t\t{ choiceItemId: \"glxy\", choiceItemContent: \"管理学\" },\r\n\t\t\t\t\t{ choiceItemId: \"jjxy\", choiceItemContent: \"经济学\" },\r\n\t\t\t\t\t{ choiceItemId: \"flxy\", choiceItemContent: \"法学\" }\r\n\t\t\t\t],\r\n\t\t\t\t\r\n\t\t\t\t// 滚动相关\r\n\t\t\t\tisAutoScrollEnabled: true,\r\n\t\t\t\t\r\n\t\t\t\t// 当前会话的请求控制器\r\n\t\t\t\tcurrentController: null,\r\n\t\t\t\t\r\n\t\t\t\t// 自定义的上下文信息\r\n\t\t\t\tcontextInfo: {},\r\n\t\t\t\t\r\n\t\t\t\t// 新增导航栏和侧边栏相关\r\n\t\t\t\tsidebarVisible: false,\r\n\t\t\t\tchatHistory: [],\r\n\t\t\t\tcurrentChatId: null // 当前会话ID\r\n\t\t\t}\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\t// 监听historyChats变化，更新本地的chatHistory\r\n\t\t\thistoryChats: {\r\n\t\t\t\thandler(newVal) {\r\n\t\t\t\t\tif (newVal && newVal.length) {\r\n\t\t\t\t\t\tthis.chatHistory = newVal.map(chat => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: chat.id,\r\n\t\t\t\t\t\t\t\ttitle: chat.title || chat.messages[0]?.content.substring(0, 20) || '新对话',\r\n\t\t\t\t\t\t\t\ttime: this.formatTime(chat.createdAt || new Date()),\r\n\t\t\t\t\t\t\t\tmessages: chat.messages\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\timmediate: true\r\n\t\t\t}\r\n\t\t},\r\n\t\tonLoad() {\r\n\t\t\t/**\r\n\t\t\t * @description 页面加载时的处理逻辑\r\n\t\t\t */\r\n\t\t\t// 尝试获取用户信息并初始化\r\n\t\t\tthis.getUserInfo();\r\n\t\t\t\r\n\t\t\t// 添加欢迎消息\r\n\t\t\tthis.addSystemMessage('欢迎使用研师录AI助手，请选择您的所在学校和专业，然后开始提问');\r\n\t\t\t\r\n\t\t\t// 加载历史会话\r\n\t\t\tthis.loadChatHistoryFromStorage();\r\n\t\t},\r\n\t\tonShow() {\r\n\t\t\t// 页面显示时刷新历史记录\r\n\t\t\tthis.loadChatHistoryFromStorage();\r\n\t\t},\r\n\t\tonUnload() {\r\n\t\t\t// 页面卸载时中断所有未完成的请求\r\n\t\t\tthis.abortCurrentRequest();\r\n\t\t},\r\n\t\tonReady() {\r\n\t\t\t// 页面渲染完成\r\n\t\t\t// 解决在某些平台上可能因为异步操作导致的定位问题\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.updateLayout();\r\n\t\t\t}, 300);\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t/**\r\n\t\t\t * @description 处理页面点击事件，用于关闭所有打开的下拉框\r\n\t\t\t */\r\n\t\t\tonPageClick() {\r\n\t\t\t\t// 获取所有的下拉框组件实例\r\n\t\t\t\tif (this.$refs && this.$refs.schoolDropdown) {\r\n\t\t\t\t\tthis.$refs.schoolDropdown.closeDropdown && this.$refs.schoolDropdown.closeDropdown();\r\n\t\t\t\t}\r\n\t\t\t\tif (this.$refs && this.$refs.majorDropdown) {\r\n\t\t\t\t\tthis.$refs.majorDropdown.closeDropdown && this.$refs.majorDropdown.closeDropdown();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * @description 更新布局，解决可能的定位问题\r\n\t\t\t */\r\n\t\t\tupdateLayout() {\r\n\t\t\t\t// 微信小程序环境下特殊处理\r\n\r\n\t\t\t\t// 这里可以添加特定于微信小程序的布局调整\r\n\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * @description 获取用户信息\r\n\t\t\t */\r\n\t\t\tgetUserInfo() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst userInfo = uni.getStorageSync('userInfo');\r\n\t\t\t\t\tif (userInfo) {\r\n\t\t\t\t\t\tconst parsedInfo = JSON.parse(userInfo);\r\n\t\t\t\t\t\tthis.userInfo = parsedInfo;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// 根据保存的用户信息设置选择框的索引\r\n\t\t\t\t\t\tif (this.userInfo.school) {\r\n\t\t\t\t\t\t\tconst schoolIndex = this.schoolList.findIndex(\r\n\t\t\t\t\t\t\t\titem => item.choiceItemContent === this.userInfo.school\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tif (schoolIndex !== -1) {\r\n\t\t\t\t\t\t\t\tthis.schoolIndex = schoolIndex;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (this.userInfo.major) {\r\n\t\t\t\t\t\t\tconst majorIndex = this.majorList.findIndex(\r\n\t\t\t\t\t\t\t\titem => item.choiceItemContent === this.userInfo.major\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tif (majorIndex !== -1) {\r\n\t\t\t\t\t\t\t\tthis.majorIndex = majorIndex;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tuni.__f__('error','at pages/AI/AI.uvue:409','获取用户信息失败:', e);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * @description 保存用户信息\r\n\t\t\t */\r\n\t\t\tsaveUserInfo() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tuni.setStorageSync('userInfo', JSON.stringify(this.userInfo));\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tuni.__f__('error','at pages/AI/AI.uvue:420','保存用户信息失败:', e);\r\n\t\t\t\t\tthis.showToast('保存用户信息失败，可能影响后续对话');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * @description 学校选择事件处理\r\n\t\t\t * @param {Number} position - 选择的索引位置\r\n\t\t\t */\r\n\t\t\tonSchoolClick(position) {\r\n\t\t\t\tthis.schoolIndex = position;\r\n\t\t\t\tthis.userInfo.school = this.schoolList[position].choiceItemContent;\r\n\t\t\t\tthis.saveUserInfo();\r\n\t\t\t\t// 更新对话上下文\r\n\t\t\t\tthis.updateContextInfo();\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * @description 专业选择事件处理\r\n\t\t\t * @param {Number} position - 选择的索引位置\r\n\t\t\t */\r\n\t\t\tonMajorClick(position) {\r\n\t\t\t\tthis.majorIndex = position;\r\n\t\t\t\tthis.userInfo.major = this.majorList[position].choiceItemContent;\r\n\t\t\t\tthis.saveUserInfo();\r\n\t\t\t\t// 更新对话上下文\r\n\t\t\t\tthis.updateContextInfo();\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * @description 处理学校搜索输入\r\n\t\t\t * @param {String} keyword - 搜索关键词\r\n\t\t\t */\r\n\t\t\tonSchoolSearch(keyword) {\r\n\t\t\t\tuni.__f__('log','at pages/AI/AI.uvue:454','学校搜索:', keyword);\r\n\t\t\t\t// 这里可以实现动态学校搜索逻辑，例如从服务器获取匹配的学校\r\n\t\t\t\t// 简单实现：如果需要从服务器获取，可以在这里添加API调用\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * @description 切换对话模式\r\n\t\t\t * @param {String} mode - 对话模式\r\n\t\t\t */\r\n\t\t\tswitchMode(mode) {\r\n\t\t\t\tif (this.currentMode === mode) return;\r\n\t\t\t\t\r\n\t\t\t\tthis.currentMode = mode;\r\n\t\t\t\t\r\n\t\t\t\t// 更新对话上下文\r\n\t\t\t\tthis.updateContextInfo();\r\n\t\t\t\t\r\n\t\t\t\t// 添加系统消息\r\n\t\t\t\tlet modeName = '通用';\r\n\t\t\t\tif (mode === CHAT_MODE.SCHOOL) {\r\n\t\t\t\t\tmodeName = '择校';\r\n\t\t\t\t} else if (mode === CHAT_MODE.CAREER) {\r\n\t\t\t\t\tmodeName = '职业规划';\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.addSystemMessage(`已切换到${modeName}模式`);\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * @description 更新对话上下文信息\r\n\t\t\t */\r\n\t\t\tupdateContextInfo() {\r\n\t\t\t\tthis.contextInfo = {\r\n\t\t\t\t\tmode: this.currentMode,\r\n\t\t\t\t\tuserSchool: this.userInfo.school || '',\r\n\t\t\t\t\tuserMajor: this.userInfo.major || ''\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * @description 添加系统消息\r\n\t\t\t * @param {String} content - 消息内容\r\n\t\t\t */\r\n\t\t\taddSystemMessage(content) {\r\n\t\t\t\tthis.messages.push({\r\n\t\t\t\t\ttype: MESSAGE_TYPE.SYSTEM,\r\n\t\t\t\t\tcontent: content,\r\n\t\t\t\t\tstatus: MESSAGE_STATUS.SENT\r\n\t\t\t\t});\r\n\t\t\t\tthis.scrollToBottom();\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * @description 开始新对话\r\n\t\t\t */\r\n\t\t\tstartNewChat() {\r\n\t\t\t\t// 1. 清空当前会话内容\r\n\t\t\t\tthis.messages = [];\r\n\t\t\t\t\r\n\t\t\t\t// 2. 更新当前会话ID\r\n\t\t\t\tthis.currentChatId = 'chat_' + Date.now();\r\n\t\t\t\tstore.dispatch('aiChat/setCurrentChat', this.currentChatId);\r\n\t\t\t\t\r\n\t\t\t\t// 3. 添加欢迎消息\r\n\t\t\t\tthis.addSystemMessage('开始新对话，请输入您的问题');\r\n\t\t\t\t\r\n\t\t\t\t// 4. 关闭侧边栏\r\n\t\t\t\tthis.closeSidebar();\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * @description 发送消息 (修改以支持保存历史记录)\r\n\t\t\t */\r\n\t\t\tasync sendMessage() {\r\n\t\t\t\tif (!this.inputValue.trim() || this.isProcessing) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// 获取输入内容并清空输入框\r\n\t\t\t\tconst messageContent = this.inputValue.trim();\r\n\t\t\t\tthis.inputValue = '';\r\n\t\t\t\t\r\n\t\t\t\t// 添加用户消息\r\n\t\t\t\tconst userMessageIndex = this.messages.length;\r\n\t\t\t\tthis.messages.push({\r\n\t\t\t\t\ttype: MESSAGE_TYPE.USER,\r\n\t\t\t\t\tcontent: messageContent,\r\n\t\t\t\t\tstatus: MESSAGE_STATUS.SENT\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t// 添加AI消息（初始为加载状态）\r\n\t\t\t\tconst aiMessageIndex = this.messages.length;\r\n\t\t\t\tthis.messages.push({\r\n\t\t\t\t\ttype: MESSAGE_TYPE.AI,\r\n\t\t\t\t\tcontent: '',\r\n\t\t\t\t\tstatus: MESSAGE_STATUS.SENDING,\r\n\t\t\t\t\tstreaming: false // 改为false，不使用流式传输\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tthis.scrollToBottom();\r\n\t\t\t\tthis.isProcessing = true;\r\n\t\t\t\t\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// 确保上下文信息是最新的\r\n\t\t\t\t\tthis.updateContextInfo();\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 如果没有当前会话ID，创建一个新的\r\n\t\t\t\t\tif (!this.currentChatId) {\r\n\t\t\t\t\t\tthis.currentChatId = 'chat_' + Date.now();\r\n\t\t\t\t\t\t// 在Vuex中设置当前会话ID\r\n\t\t\t\t\t\tstore.dispatch('aiChat/setCurrentChat', this.currentChatId);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 调用AIQA测试接口，通过Vuex dispatch，传递问题、上下文和会话ID\r\n\t\t\t\t\tconst response = await store.dispatch('aiChat/testAIQA', {\r\n\t\t\t\t\t\tquestion: messageContent,\r\n\t\t\t\t\t\tcontextInfo: this.contextInfo,\r\n\t\t\t\t\t\tchatId: this.currentChatId\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (response.success) {\r\n\t\t\t\t\t\t// 更新AI消息内容\r\n\t\t\t\t\t\tthis.messages[aiMessageIndex].content = response.data;\r\n\t\t\t\t\t\tthis.messages[aiMessageIndex].status = MESSAGE_STATUS.SENT;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// 保存会话记录\r\n\t\t\t\t\t\tthis.saveChatHistory();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// 处理错误 - 优先使用后端返回的错误信息\r\n\t\t\t\t\t\tconst errorMessage = response.error && response.error.message ? \r\n\t\t\t\t\t\t\tresponse.error.message : \r\n\t\t\t\t\t\t\t(response.message || '获取回复失败，请稍后重试');\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.messages[aiMessageIndex].content = errorMessage;\r\n\t\t\t\t\t\tthis.messages[aiMessageIndex].status = MESSAGE_STATUS.ERROR;\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tuni.__f__('error','at pages/AI/AI.uvue:591','发送消息失败:', error);\r\n\t\t\t\t\t// 优先使用完整的错误对象中的信息\r\n\t\t\t\t\tconst errorMessage = (error && error.message) ? error.message : '获取回复失败，请稍后重试';\r\n\t\t\t\t\tthis.messages[aiMessageIndex].content = errorMessage;\r\n\t\t\t\t\tthis.messages[aiMessageIndex].status = MESSAGE_STATUS.ERROR;\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tthis.isProcessing = false;\r\n\t\t\t\t\tthis.messages[aiMessageIndex].streaming = false;\r\n\t\t\t\t\tthis.scrollToBottom();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * @description 重试发送失败的消息\r\n\t\t\t * @param {Number} index - 消息索引\r\n\t\t\t */\r\n\t\t\tasync retryMessage(index) {\r\n\t\t\t\t// 只能重试AI消息\r\n\t\t\t\tif (index < 1 || this.messages[index].type !== MESSAGE_TYPE.AI) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// 获取对应的用户消息\r\n\t\t\t\tconst userMessage = this.messages[index - 1];\r\n\t\t\t\tif (userMessage.type !== MESSAGE_TYPE.USER) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// 更新消息状态\r\n\t\t\t\tthis.updateMessageStatus(index, MESSAGE_STATUS.SENDING);\r\n\t\t\t\tthis.messages[index].content = '';\r\n\t\t\t\tthis.messages[index].streaming = false;\r\n\t\t\t\t\r\n\t\t\t\t// 重新发送消息\r\n\t\t\t\tthis.isProcessing = true;\r\n\t\t\t\t\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// 确保上下文信息是最新的\r\n\t\t\t\t\tthis.updateContextInfo();\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 调用AIQA测试接口，通过Vuex dispatch，传递问题、上下文和会话ID\r\n\t\t\t\t\tconst response = await store.dispatch('aiChat/testAIQA', {\r\n\t\t\t\t\t\tquestion: userMessage.content,\r\n\t\t\t\t\t\tcontextInfo: this.contextInfo,\r\n\t\t\t\t\t\tchatId: this.currentChatId\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (response.success) {\r\n\t\t\t\t\t\t// 更新AI消息内容\r\n\t\t\t\t\t\tthis.messages[index].content = response.data;\r\n\t\t\t\t\t\tthis.updateMessageStatus(index, MESSAGE_STATUS.SENT);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// 保存会话记录\r\n\t\t\t\t\t\tthis.saveChatHistory();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// 处理错误 - 优先使用后端返回的错误信息\r\n\t\t\t\t\t\tconst errorMessage = response.error && response.error.message ? \r\n\t\t\t\t\t\t\tresponse.error.message : \r\n\t\t\t\t\t\t\t(response.message || '获取回复失败，请稍后重试');\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.messages[index].content = errorMessage;\r\n\t\t\t\t\t\tthis.updateMessageStatus(index, MESSAGE_STATUS.ERROR);\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tuni.__f__('error','at pages/AI/AI.uvue:655','重试发送消息失败:', error);\r\n\t\t\t\t\t// 优先使用完整的错误对象中的信息\r\n\t\t\t\t\tconst errorMessage = (error && error.message) ? error.message : '获取回复失败，请稍后重试';\r\n\t\t\t\t\tthis.messages[index].content = errorMessage;\r\n\t\t\t\t\tthis.updateMessageStatus(index, MESSAGE_STATUS.ERROR);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tthis.isProcessing = false;\r\n\t\t\t\t\tthis.messages[index].streaming = false;\r\n\t\t\t\t\tthis.scrollToBottom();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * @description 中断当前请求\r\n\t\t\t */\r\n\t\t\tabortCurrentRequest() {\r\n\t\t\t\tif (this.currentController) {\r\n\r\n\r\n\r\n\t\t\t\t\tthis.currentController = null;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * @description 更新消息状态\r\n\t\t\t * @param {Number} index - 消息索引\r\n\t\t\t * @param {String} status - 新状态\r\n\t\t\t */\r\n\t\t\tupdateMessageStatus(index, status) {\r\n\t\t\t\tif (index >= 0 && index < this.messages.length) {\r\n\t\t\t\t\tthis.messages[index].status = status;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * @description 获取消息历史用于发送到API\r\n\t\t\t * @param {Number} [limit] - 可选，限制历史消息的数量\r\n\t\t\t * @returns {Array} 消息历史数组\r\n\t\t\t */\r\n\t\t\tgetMessageHistory(limit) {\r\n\t\t\t\t// 筛选出有效的对话消息（用户和AI的消息）\r\n\t\t\t\tlet history = this.messages.filter(msg => \r\n\t\t\t\t\tmsg.type === MESSAGE_TYPE.USER || \r\n\t\t\t\t\t(msg.type === MESSAGE_TYPE.AI && msg.status === MESSAGE_STATUS.SENT)\r\n\t\t\t\t);\r\n\t\t\t\t\r\n\t\t\t\t// 如果指定了limit，则只获取最近的limit条消息\r\n\t\t\t\tif (typeof limit === 'number' && limit >= 0 && limit < history.length) {\r\n\t\t\t\t\thistory = history.slice(0, limit);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// 转换为API需要的格式\r\n\t\t\t\treturn history.map(msg => ({\r\n\t\t\t\t\trole: msg.type === MESSAGE_TYPE.USER ? 'user' : 'assistant',\r\n\t\t\t\t\tcontent: msg.content\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * @description 滚动到底部\r\n\t\t\t */\r\n\t\t\tscrollToBottom() {\r\n\t\t\t\tif (!this.isAutoScrollEnabled) return;\r\n\t\t\t\t\r\n\t\t\t\tif (this.messages.length > 0) {\r\n\t\t\t\t\tthis.autoScrollId = 'msg-' + (this.messages.length - 1);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * @description 处理滚动到顶部事件（加载更多历史消息）\r\n\t\t\t */\r\n\t\t\tonScrollToUpper(e) {\r\n\t\t\t\t// 如果需要加载更多历史消息，可以在这里实现\r\n\t\t\t\tuni.__f__('log','at pages/AI/AI.uvue:730','滚动到顶部');\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * @description 处理滚动事件（用于控制是否启用自动滚动）\r\n\t\t\t */\r\n\t\t\tonScroll(e) {\r\n\t\t\t\t// 这里可以实现根据用户滚动位置决定是否启用自动滚动\r\n\t\t\t\t// 例如，当用户手动向上滚动时禁用自动滚动，当滚动到底部时再启用\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * @description 显示提示\r\n\t\t\t * @param {String} message - 提示信息\r\n\t\t\t */\r\n\t\t\tshowToast(message) {\r\n\t\t\t\tuni.showToast({\r\n\t\t\t\t\ttitle: message,\r\n\t\t\t\t\ticon: 'none',\r\n\t\t\t\t\tduration: 2000\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * @description 显示加载提示\r\n\t\t\t * @param {String} [text] - 加载提示文本\r\n\t\t\t */\r\n\t\t\tshowLoading(text = '正在加载...') {\r\n\t\t\t\tthis.loadingText = text;\r\n\t\t\t\tthis.isFullLoading = true;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * @description 隐藏加载提示\r\n\t\t\t */\r\n\t\t\thideLoading() {\r\n\t\t\t\tthis.isFullLoading = false;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t// 新增导航栏和侧边栏相关方法\r\n\t\t\ttoggleSidebar() {\r\n\t\t\t\tthis.sidebarVisible = !this.sidebarVisible;\r\n\t\t\t},\r\n\t\t\tcloseSidebar() {\r\n\t\t\t\tthis.sidebarVisible = false;\r\n\t\t\t},\r\n\t\t\tloadChatHistory(chatId) {\r\n\t\t\t\tif (!chatId) return;\r\n\t\t\t\t\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// 从Vuex加载历史会话\r\n\t\t\t\t\tstore.dispatch('aiChat/loadChat', chatId).then(response => {\r\n\t\t\t\t\t\tif (response.success && response.data) {\r\n\t\t\t\t\t\t\t// 设置当前会话ID\r\n\t\t\t\t\t\t\tthis.currentChatId = chatId;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// 替换当前消息列表\r\n\t\t\t\t\t\t\tthis.messages = JSON.parse(JSON.stringify(response.data.messages));\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// 关闭侧边栏\r\n\t\t\t\t\t\t\tthis.closeSidebar();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// 滚动到底部\r\n\t\t\t\t\t\t\tthis.$nextTick(() => {\r\n\t\t\t\t\t\t\t\tthis.scrollToBottom();\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.showToast('加载历史对话失败: ' + (response.message || '未找到会话'));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tuni.__f__('error','at pages/AI/AI.uvue:801','加载历史对话失败:', error);\r\n\t\t\t\t\tthis.showToast('加载历史对话失败');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * @description 从Vuex加载历史会话\r\n\t\t\t */\r\n\t\t\tloadChatHistoryFromStorage() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// 从Vuex获取历史会话\r\n\t\t\t\t\tstore.dispatch('aiChat/getHistoryChats').then(response => {\r\n\t\t\t\t\t\tif (response.success) {\r\n\t\t\t\t\t\t\tuni.__f__('log','at pages/AI/AI.uvue:813','从Vuex加载历史会话成功');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tuni.__f__('error','at pages/AI/AI.uvue:815','从Vuex加载历史会话失败:', response.message);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tuni.__f__('error','at pages/AI/AI.uvue:819','加载历史会话错误:', error);\r\n\t\t\t\t\tthis.chatHistory = [];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * @description 保存聊天历史到Vuex\r\n\t\t\t */\r\n\t\t\tsaveChatHistory() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (!this.currentChatId || this.messages.length === 0) return;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 寻找第一条用户消息作为标题\r\n\t\t\t\t\tconst firstUserMessage = this.messages.find(msg => msg.type === MESSAGE_TYPE.USER);\r\n\t\t\t\t\tconst title = firstUserMessage ? firstUserMessage.content.substring(0, 20) : '新对话';\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 创建聊天记录对象\r\n\t\t\t\t\tconst chatData = {\r\n\t\t\t\t\t\tid: this.currentChatId,\r\n\t\t\t\t\t\ttitle: title,\r\n\t\t\t\t\t\tmessages: this.messages,\r\n\t\t\t\t\t\tcreatedAt: new Date(),\r\n\t\t\t\t\t\tupdatedAt: new Date()\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 保存到Vuex\r\n\t\t\t\t\tstore.dispatch('aiChat/saveChat', chatData).then(response => {\r\n\t\t\t\t\t\tif (response.success) {\r\n\t\t\t\t\t\t\tuni.__f__('log','at pages/AI/AI.uvue:846','保存聊天历史到Vuex成功');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tuni.__f__('error','at pages/AI/AI.uvue:848','保存聊天历史到Vuex失败:', response.message);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tuni.__f__('error','at pages/AI/AI.uvue:852','保存聊天历史失败:', error);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * @description 删除历史记录\r\n\t\t\t * @param {String} chatId - 历史记录ID\r\n\t\t\t * @param {Event} e - 事件对象，用于阻止冒泡\r\n\t\t\t */\r\n\t\t\tdeleteChatHistory(chatId, e) {\r\n\t\t\t\t// 阻止冒泡，避免触发点击加载历史记录\r\n\t\t\t\te && e.stopPropagation();\r\n\t\t\t\t\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// 使用Vuex删除历史记录\r\n\t\t\t\t\tstore.dispatch('aiChat/deleteChat', chatId).then(response => {\r\n\t\t\t\t\t\tif (response.success) {\r\n\t\t\t\t\t\t\t// 如果删除的是当前会话，则清空当前会话\r\n\t\t\t\t\t\t\tif (this.currentChatId === chatId) {\r\n\t\t\t\t\t\t\t\tthis.startNewChat();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.showToast('删除成功');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.showToast('删除失败: ' + response.message);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tuni.__f__('error','at pages/AI/AI.uvue:878','删除历史记录失败:', error);\r\n\t\t\t\t\tthis.showToast('删除失败');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * @description 格式化时间\r\n\t\t\t * @param {Date|String} time - 时间对象或时间字符串\r\n\t\t\t * @returns {String} 格式化后的时间字符串\r\n\t\t\t */\r\n\t\t\tformatTime(time) {\r\n\t\t\t\tif (!time) return '';\r\n\t\t\t\t\r\n\t\t\t\tconst date = new Date(time);\r\n\t\t\t\tconst year = date.getFullYear();\r\n\t\t\t\tconst month = String(date.getMonth() + 1).padStart(2, '0');\r\n\t\t\t\tconst day = String(date.getDate()).padStart(2, '0');\r\n\t\t\t\tconst hours = String(date.getHours()).padStart(2, '0');\r\n\t\t\t\tconst minutes = String(date.getMinutes()).padStart(2, '0');\r\n\t\t\t\t\r\n\t\t\t\treturn `${year}-${month}-${day} ${hours}:${minutes}`;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\t.page-container {\r\n\t\tposition: relative;\r\n\t\twidth: 100%;\r\n\t\theight: 100vh;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tpadding: 0; /* 移除页面容器的内边距 */\r\n\t\tbox-sizing: border-box;\r\n\t\tbackground-color: #f5f5f5;\r\n\t\toverflow: hidden; /* 防止内容溢出 */\r\n\t}\r\n\t\r\n\t/* 筛选区域 */\r\n\t.filter-section {\r\n\t\twidth: 100%;\r\n\t\tpadding: 20rpx 15rpx;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 0 0 16rpx 16rpx; /* 调整圆角，让顶部与导航栏无缝连接 */\r\n\t\tmargin-bottom: 20rpx;\r\n\t\tbox-shadow: 0 2rpx 10rpx rgba(0, 0, 0, 0.05);\r\n\t\tbox-sizing: border-box;\r\n\t\tmargin-top: 0;\r\n\t\tposition: relative;\r\n\t\tz-index: 10;\r\n\t}\r\n\t\r\n\t.filter-row {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\twidth: 100%;\r\n\t\tmargin-bottom: 20rpx;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\t\r\n\t.filter-row:last-child {\r\n\t\tmargin-bottom: 0;\r\n\t}\r\n\t\r\n\t.filter-item {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\talign-items: center;\r\n\t\tbox-sizing: border-box;\r\n\t\twidth: 100%;\r\n\t}\r\n\t\r\n\t.full-width {\r\n\t\twidth: 100%;\r\n\t}\r\n\t\r\n\t.filter-label {\r\n\t\tfont-size: 28rpx;\r\n\t\tcolor: #333;\r\n\t\twhite-space: nowrap;\r\n\t\tmargin-right: 10rpx;\r\n\t\twidth: 140rpx; /* 改为固定宽度，不用min-width */\r\n\t\tpadding-left: 10rpx;\r\n\t\ttext-align: left;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\t\r\n\t.choice-wrapper {\r\n\t\tflex: 1;\r\n\t\tbox-sizing: border-box;\r\n\t\twidth: calc(100% - 150rpx); /* 考虑标签宽度和间距 */\r\n\t\tpadding-right: 10rpx; /* 防止右侧超出边界 */\r\n\t}\r\n\t\r\n\t.flex-1 {\r\n\t\tflex: 1;\r\n\t}\r\n\t\r\n\t/* 消息区域 */\r\n\t.message-section {\r\n\t\tflex: 1;\r\n\t\twidth: 100%;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 16rpx;\r\n\t\tmargin-bottom: 20rpx;\r\n\t\toverflow: hidden;\r\n\t\tposition: relative;\r\n\t\tbox-shadow: 0 2rpx 10rpx rgba(0, 0, 0, 0.05);\r\n\t}\r\n\t\r\n\t.message-scroll {\r\n\t\theight: 100%;\r\n\t\tpadding: 30rpx;\r\n\t}\r\n\t\r\n\t.empty-message {\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\t\r\n\t.empty-message text {\r\n\t\tcolor: #999;\r\n\t\tfont-size: 28rpx;\r\n\t}\r\n\t\r\n\t.message-list {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t}\r\n\t\r\n\t.message-item {\r\n\t\tmax-width: 90%;\r\n\t\tmargin-bottom: 30rpx;\r\n\t\tposition: relative;\r\n\t\tanimation: fadeIn 0.3s ease-in-out;\r\n\t}\r\n\t\r\n\t@keyframes fadeIn {\r\n\t\tfrom { opacity: 0; transform: translateY(10rpx); }\r\n\t\tto { opacity: 1; transform: translateY(0); }\r\n\t}\r\n\t\r\n\t.message-item.user {\r\n\t\talign-self: flex-end;\r\n\t}\r\n\t\r\n\t.message-item.ai {\r\n\t\talign-self: flex-start;\r\n\t}\r\n\t\r\n\t.message-item.system {\r\n\t\talign-self: center;\r\n\t\tmax-width: 70%;\r\n\t\tmargin: 10rpx 0 30rpx;\r\n\t}\r\n\t\r\n\t.message-content {\r\n\t\tpadding: 20rpx 30rpx;\r\n\t\tborder-radius: 16rpx;\r\n\t\tfont-size: 28rpx;\r\n\t\tline-height: 1.5;\r\n\t\tword-break: break-word;\r\n\t}\r\n\t\r\n\t.message-item.user .message-content {\r\n\t\tbackground-color: #1E90FF;\r\n\t\tcolor: #fff;\r\n\t\tborder-radius: 16rpx 0 16rpx 16rpx;\r\n\t}\r\n\t\r\n\t.message-item.ai .message-content {\r\n\t\tbackground-color: #f0f0f0;\r\n\t\tcolor: #333;\r\n\t\tborder-radius: 0 16rpx 16rpx 16rpx;\r\n\t}\r\n\t\r\n\t.message-item.system .message-content {\r\n\t\tbackground-color: rgba(0, 0, 0, 0.05);\r\n\t\tcolor: #666;\r\n\t\tborder-radius: 30rpx;\r\n\t\tfont-size: 24rpx;\r\n\t}\r\n\t\r\n\t.message-header {\r\n\t\tmargin-bottom: 10rpx;\r\n\t}\r\n\t\r\n\t.ai-title {\r\n\t\tfont-size: 24rpx;\r\n\t\tcolor: #666;\r\n\t\tpadding-left: 10rpx;\r\n\t}\r\n\t\r\n\t.message-status {\r\n\t\tmargin-top: 10rpx;\r\n\t\tfont-size: 24rpx;\r\n\t\tcolor: #999;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\talign-items: center;\r\n\t}\r\n\t\r\n\t.sending-dots {\r\n\t\tanimation: dotsAnimation 1.5s infinite;\r\n\t}\r\n\t\r\n\t@keyframes dotsAnimation {\r\n\t\t0% { opacity: 0.3; }\r\n\t\t50% { opacity: 1; }\r\n\t\t100% { opacity: 0.3; }\r\n\t}\r\n\t\r\n\t.error-text {\r\n\t\tcolor: #ff4d4f;\r\n\t\tmargin-right: 10rpx;\r\n\t}\r\n\t\r\n\t.retry-btn {\r\n\t\tpadding: 5rpx 15rpx;\r\n\t\tbackground-color: #f0f0f0;\r\n\t\tborder-radius: 10rpx;\r\n\t}\r\n\t\r\n\t.retry-btn text {\r\n\t\tcolor: #1E90FF;\r\n\t\tfont-size: 22rpx;\r\n\t}\r\n\t\r\n\t.message-item.streaming .message-content {\r\n\t\tposition: relative;\r\n\t}\r\n\t\r\n\t.message-item.streaming .message-content::after {\r\n\t\tcontent: \"|\";\r\n\t\tdisplay: inline-block;\r\n\t\tcolor: #1E90FF;\r\n\t\tanimation: blink 1s step-end infinite;\r\n\t\tmargin-left: 2rpx;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\t\r\n\t@keyframes blink {\r\n\t\t0%, 100% { opacity: 1; }\r\n\t\t50% { opacity: 0; }\r\n\t}\r\n\t\r\n\t/* 功能区域 - 调整位置到消息区域和输入区域之间 */\r\n\t.function-section {\r\n\t\twidth: 100%;\r\n\t\tpadding: 15rpx;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 16rpx;\r\n\t\tmargin-bottom: 20rpx;\r\n\t\tbox-shadow: 0 2rpx 10rpx rgba(0, 0, 0, 0.05);\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\t\r\n\t.function-list {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tjustify-content: space-around;\r\n\t}\r\n\t\r\n\t.function-item {\r\n\t\tpadding: 15rpx 30rpx;\r\n\t\tborder-radius: 30rpx;\r\n\t\tbackground-color: #f0f0f0;\r\n\t\ttransition: all 0.3s;\r\n\t}\r\n\t\r\n\t.function-item.active {\r\n\t\tbackground-color: #1E90FF;\r\n\t}\r\n\t\r\n\t.function-item-text {\r\n\t\tfont-size: 28rpx;\r\n\t\tcolor: #333;\r\n\t}\r\n\t\r\n\t.function-item.active .function-item-text {\r\n\t\tcolor: #ffffff;\r\n\t}\r\n\t\r\n\t/* 输入区域 */\r\n\t.input-section {\r\n\t\twidth: 100%;\r\n\t\theight: 100rpx;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\talign-items: center;\r\n\t\tpadding: 0 10rpx;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\t\r\n\t.message-input {\r\n\t\tflex: 1;\r\n\t\theight: 80rpx;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder: 2rpx solid #ddd;\r\n\t\tborder-radius: 40rpx;\r\n\t\tpadding: 0 30rpx;\r\n\t\tmargin-right: 20rpx;\r\n\t\tfont-size: 28rpx;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\t\r\n\t.send-button {\r\n\t\twidth: 140rpx;\r\n\t\theight: 80rpx;\r\n\t\tbackground-color: #1E90FF;\r\n\t\tcolor: #fff;\r\n\t\tborder-radius: 40rpx;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tborder: none;\r\n\t\tpadding: 0;\r\n\t\tbox-sizing: border-box;\r\n\t\ttransition: all 0.3s; /* 添加过渡效果 */\r\n\t\tbox-shadow: 0 2rpx 10rpx rgba(0, 0, 0, 0.1); /* 添加阴影 */\r\n\t}\r\n\t\r\n\t.send-button:disabled {\r\n\t\tbackground-color: #f0f0f0; /* 更改为浅灰色背景，与功能按钮一致 */\r\n\t\tcolor: #999; /* 更暗的文字颜色 */\r\n\t\tborder: 2rpx solid #ddd; /* 添加边框 */\r\n\t\tbox-shadow: none; /* 禁用状态不显示阴影 */\r\n\t}\r\n\t\r\n\t.send-button text {\r\n\t\tfont-size: 28rpx;\r\n\t}\r\n\t\r\n\t/* 加载遮罩 */\r\n\t.loading-mask {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tbackground-color: rgba(0, 0, 0, 0.5);\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tz-index: 999;\r\n\t}\r\n\t\r\n\t.loading-content {\r\n\t\tbackground-color: #ffffff;\r\n\t\tpadding: 30rpx 60rpx;\r\n\t\tborder-radius: 20rpx;\r\n\t\tbox-shadow: 0 4rpx 16rpx rgba(0, 0, 0, 0.15);\r\n\t}\r\n\t\r\n\t.loading-content text {\r\n\t\tfont-size: 28rpx;\r\n\t\tcolor: #333;\r\n\t}\r\n\t\r\n\t/* 新增导航栏和侧边栏相关样式 */\r\n\t.nav-sidebar-container {\r\n\t\tposition: relative;\r\n\t\twidth: 100%;\r\n\t\theight: 100vh;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\toverflow: hidden;\r\n\t}\r\n\t\r\n\t.sidebar-mask {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tbackground-color: rgba(0, 0, 0, 0.5);\r\n\t\tz-index: 998;\r\n\t\ttransition: opacity 0.3s ease;\r\n\t}\r\n\t\r\n\t.history-sidebar {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\twidth: 66vw; /* 占屏幕宽度的2/3 */\r\n\t\theight: 100vh;\r\n\t\tbackground-color: #ffffff;\r\n\t\ttransform: translateX(-100%);\r\n\t\ttransition: transform 0.3s ease;\r\n\t\tz-index: 999;\r\n\t\tbox-shadow: 0 0 20rpx rgba(0, 0, 0, 0.1);\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t}\r\n\t\r\n\t.history-sidebar.visible {\r\n\t\ttransform: translateX(0);\r\n\t}\r\n\t\r\n\t.sidebar-header {\r\n\t\tpadding: 30rpx 20rpx;\r\n\t\tborder-bottom: 1rpx solid #eee;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\theight: 80rpx;\r\n\t}\r\n\t\r\n\t.sidebar-title {\r\n\t\tfont-size: 32rpx;\r\n\t\tcolor: #333;\r\n\t\tfont-weight: 500;\r\n\t}\r\n\t\r\n\t.history-list {\r\n\t\tflex: 1;\r\n\t\theight: calc(100vh - 80rpx);\r\n\t\tpadding: 0;\r\n\t\tbackground-color: #f9f9f9;\r\n\t}\r\n\t\r\n\t.empty-history {\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tpadding: 40rpx;\r\n\t\tcolor: #999;\r\n\t}\r\n\t\r\n\t.empty-history text {\r\n\t\tcolor: #999;\r\n\t\tfont-size: 28rpx;\r\n\t}\r\n\t\r\n\t.history-item {\r\n\t\tpadding: 30rpx 20rpx;\r\n\t\tbackground-color: #ffffff;\r\n\t\tmargin-bottom: 2rpx;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t\tborder-bottom: 1rpx solid #f0f0f0;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\t\r\n\t.history-item:active {\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\t\r\n\t.history-item.active {\r\n\t\tbackground-color: #e6f7ff;\r\n\t\tborder-left: 4rpx solid #1890ff;\r\n\t}\r\n\t\r\n\t.history-item-content {\r\n\t\tflex: 1;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\toverflow: hidden;\r\n\t}\r\n\t\r\n\t.history-title {\r\n\t\tfont-size: 28rpx;\r\n\t\tcolor: #333;\r\n\t\tmargin-bottom: 10rpx;\r\n\t\t/* 单行文本截断 */\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t\tmax-width: 80%;\r\n\t}\r\n\t\r\n\t.history-time {\r\n\t\tfont-size: 24rpx;\r\n\t\tcolor: #999;\r\n\t}\r\n\t\r\n\t.history-delete {\r\n\t\twidth: 60rpx;\r\n\t\theight: 60rpx;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tborder-radius: 50%;\r\n\t\tbackground-color: #f5f5f5;\r\n\t\tmargin-left: 20rpx;\r\n\t}\r\n\t\r\n\t.delete-icon {\r\n\t\tfont-size: 36rpx;\r\n\t\tcolor: #ff4d4f;\r\n\t\tline-height: 1;\r\n\t}\r\n\t\r\n\t.nav-bar {\r\n\t\theight: 90rpx;\r\n\t\tbackground-color: #ffffff;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\talign-items: center;\r\n\t\tpadding: 0 20rpx;\r\n\t\tborder-bottom: none; /* 移除底部边框 */\r\n\t\tposition: relative;\r\n\t\tz-index: 11; /* 提高z-index，确保显示在筛选区域上方 */\r\n\t}\r\n\t\r\n\t.nav-left {\r\n\t\twidth: 33%;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t}\r\n\t\r\n\t.history-btn {\r\n\t\twidth: 80rpx;\r\n\t\theight: 80rpx;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\t\r\n\t.history-btn .iconfont {\r\n\t\tfont-size: 48rpx;\r\n\t\tcolor: #333;\r\n\t}\r\n\t\r\n\t/* 使用图标替代文字，如果没有图标字体可以使用以下替代样式 */\r\n\t.history-btn .iconfont:before {\r\n\t\tcontent: \"≡\"; /* 使用三横线作为菜单图标 */\r\n\t}\r\n\t\r\n\t.nav-title {\r\n\t\twidth: 34%;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t}\r\n\t\r\n\t.nav-title text {\r\n\t\tfont-size: 36rpx;\r\n\t\tcolor: #333;\r\n\t\tfont-weight: 500;\r\n\t}\r\n\t\r\n\t.nav-right {\r\n\t\twidth: 33%;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: flex-end;\r\n\t\talign-items: center;\r\n\t}\r\n\t\r\n\t.new-chat-btn {\r\n\t\tpadding: 14rpx 28rpx;\r\n\t\tbackground-color: #1E90FF;\r\n\t\tborder-radius: 40rpx;\r\n\t\tbox-shadow: 0 2rpx 8rpx rgba(30, 144, 255, 0.3);\r\n\t\ttransition: all 0.3s;\r\n\t}\r\n\t\r\n\t.new-chat-btn:active {\r\n\t\topacity: 0.8;\r\n\t\ttransform: scale(0.98);\r\n\t}\r\n\t\r\n\t.new-chat-btn text {\r\n\t\tfont-size: 28rpx;\r\n\t\tcolor: #fff;\r\n\t}\r\n\t\r\n\t.main-wrapper {\r\n\t\tflex: 1;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\ttransition: transform 0.3s ease, opacity 0.3s ease;\r\n\t\tbackground-color: #f5f5f5;\r\n\t\tpadding-bottom: 20rpx; /* 底部增加内边距 */\r\n\t}\r\n\t\r\n\t.main-wrapper.shifted {\r\n\t\ttransform: translateX(66vw);\r\n\t\topacity: 0.85;\r\n\t}\r\n\t\r\n\t.main-content {\r\n\t\tflex: 1;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tpadding: 0 20rpx; /* 仅添加左右内边距 */\r\n\t}\r\n</style>\r\n","import MiniProgramPage from 'E:/yanshilu重新来过/前端yanshilu_1/pages/AI/AI.uvue'\nwx.createPage(MiniProgramPage)"],"names":["defineComponent","store","uni"],"mappings":"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"}