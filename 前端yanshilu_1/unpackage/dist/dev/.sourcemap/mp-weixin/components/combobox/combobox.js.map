{"version":3,"file":"combobox.js","sources":["components/combobox/combobox.uvue","../../HBuilderX/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/uniComponent:/RToveWFuc2hpbHXph43mlrDmnaXov4cv5YmN56uveWFuc2hpbHVfMS9jb21wb25lbnRzL2NvbWJvYm94L2NvbWJvYm94LnV2dWU"],"sourcesContent":["<template>\r\n  <view class=\"dropdown-container\">\r\n    <!-- 下拉框触发区域 -->\r\n    <view class=\"dropdown-trigger\" @click.stop=\"toggleDropdown\">\r\n      <text class=\"selected-value\">{{ displayValue || placeholder }}</text>\r\n      <text class=\"dropdown-icon\">{{ isOpen ? '▲' : '▼' }}</text>\r\n    </view>\r\n    \r\n    <view v-if=\"isOpen\" class=\"dropdown-overlay\" @click=\"closeDropdown\">\r\n      <!-- 下拉菜单 -->\r\n      <view class=\"dropdown-menu\" @click.stop>\r\n        <!-- 搜索框 -->\r\n        <view class=\"dropdown-search\" v-if=\"searchable\">\r\n          <input \r\n            type=\"text\" \r\n            v-model=\"searchText\" \r\n            :placeholder=\"searchPlaceholder\"\r\n            @input=\"handleSearch\"\r\n            class=\"search-input\"\r\n          />\r\n        </view>\r\n        \r\n        <!-- 下拉选项 -->\r\n        <scroll-view scroll-y=\"true\" class=\"dropdown-options\">\r\n          <!-- 分组选项 -->\r\n          <template v-if=\"grouped\">\r\n            <view v-for=\"(group, groupName) in groupedOptions\" :key=\"groupName\">\r\n              <view class=\"dropdown-group\" v-if=\"groupName\">{{ groupName }}</view>\r\n              <view \r\n                v-for=\"(item, index) in group\" \r\n                :key=\"index\"\r\n                class=\"dropdown-item\"\r\n                @click=\"selectItem(item)\"\r\n              >\r\n                <view class=\"item-content\">\r\n                  <text v-if=\"item.icon\" class=\"item-icon\">{{ item.icon }}</text>\r\n                  <text class=\"item-label\">{{ item.label }}</text>\r\n                  <view v-if=\"item.tags\" class=\"item-tags\">\r\n                    <text v-for=\"(tag, ti) in item.tags\" :key=\"ti\" class=\"tag\">{{ tag }}</text>\r\n                  </view>\r\n                </view>\r\n                <view class=\"item-selection\">\r\n                  <text v-if=\"isItemSelected(item)\" class=\"selected-icon\">✓</text>\r\n                  <text v-else-if=\"multiple && item === tempSelection\" class=\"selected-icon\">+</text>\r\n                </view>\r\n              </view>\r\n            </view>\r\n          </template>\r\n          \r\n          <!-- 普通选项 -->\r\n          <template v-else>\r\n            <view \r\n              v-for=\"(item, index) in filteredOptions\" \r\n              :key=\"index\"\r\n              class=\"dropdown-item\"\r\n              @click=\"selectItem(item)\"\r\n            >\r\n              <view class=\"item-content\">\r\n                <text v-if=\"item.icon\" class=\"item-icon\">{{ item.icon }}</text>\r\n                <text class=\"item-label\">{{ item.label }}</text>\r\n                <view v-if=\"item.tags\" class=\"item-tags\">\r\n                  <text v-for=\"(tag, ti) in item.tags\" :key=\"ti\" class=\"tag\">{{ tag }}</text>\r\n                </view>\r\n              </view>\r\n              <view class=\"item-selection\">\r\n                <text v-if=\"isItemSelected(item)\" class=\"selected-icon\">✓</text>\r\n                <text v-else-if=\"multiple && item === tempSelection\" class=\"selected-icon\">+</text>\r\n              </view>\r\n            </view>\r\n          </template>\r\n          \r\n          <view v-if=\"showEmpty\" class=\"dropdown-empty\">\r\n            <text>{{ emptyText }}</text>\r\n          </view>\r\n        </scroll-view>\r\n        \r\n        <!-- 多选操作栏 -->\r\n        <view v-if=\"multiple && selectedItems.length > 0\" class=\"dropdown-actions\">\r\n          <text class=\"action-text\">已选 {{ selectedItems.length }} 项</text>\r\n          <text class=\"action-btn confirm-btn\" @click=\"confirmSelection\">确认</text>\r\n          <text class=\"action-btn cancel-btn\" @click=\"cancelSelection\">取消</text>\r\n        </view>\r\n      </view>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<style scoped>\r\n.dropdown-container {\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 100%;\r\n}\r\n\r\n.dropdown-trigger {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 12px 16px;\r\n  border: 1px solid #dcdfe6;\r\n  border-radius: 4px;\r\n  background-color: #fff;\r\n  cursor: pointer;\r\n  transition: border-color 0.3s;\r\n  min-height: 40px;\r\n}\r\n\r\n.dropdown-trigger:hover {\r\n  border-color: #c0c4cc;\r\n}\r\n\r\n.selected-value {\r\n  flex: 1;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  color: #606266;\r\n}\r\n\r\n.dropdown-icon {\r\n  margin-left: 8px;\r\n  color: #c0c4cc;\r\n  font-size: 12px;\r\n}\r\n\r\n.dropdown-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  z-index: 999;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.dropdown-menu {\r\n  position: relative;\r\n  width: 90%;\r\n  max-width: 400px;\r\n  max-height: 80vh;\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  z-index: 1000;\r\n}\r\n\r\n.dropdown-search {\r\n  padding: 12px;\r\n  border-bottom: 1px solid #e4e7ed;\r\n}\r\n\r\n.search-input {\r\n  width: 100%;\r\n  padding: 8px 12px;\r\n  border: 1px solid #dcdfe6;\r\n  border-radius: 4px;\r\n  outline: none;\r\n  font-size: 14px;\r\n}\r\n\r\n.search-input:focus {\r\n  border-color: #409eff;\r\n}\r\n\r\n.dropdown-options {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  max-height: 50vh;\r\n}\r\n\r\n.dropdown-group {\r\n  padding: 8px 16px;\r\n  font-size: 13px;\r\n  color: #909399;\r\n  background-color: #f5f7fa;\r\n  font-weight: bold;\r\n}\r\n\r\n.dropdown-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 12px 16px;\r\n  cursor: pointer;\r\n  border-bottom: 1px solid #f0f0f0;\r\n}\r\n\r\n.dropdown-item:active {\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.item-content {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.item-icon {\r\n  margin-right: 8px;\r\n  font-size: 16px;\r\n}\r\n\r\n.item-label {\r\n  font-size: 14px;\r\n  color: #303133;\r\n}\r\n\r\n.item-tags {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-top: 4px;\r\n}\r\n\r\n.tag {\r\n  font-size: 10px;\r\n  padding: 2px 6px;\r\n  background-color: #f0f0f0;\r\n  border-radius: 3px;\r\n  margin-right: 4px;\r\n  margin-bottom: 4px;\r\n  color: #909399;\r\n}\r\n\r\n.item-selection {\r\n  width: 20px;\r\n  text-align: right;\r\n}\r\n\r\n.selected-icon {\r\n  color: #409eff;\r\n  font-weight: bold;\r\n}\r\n\r\n.dropdown-empty {\r\n  padding: 24px 16px;\r\n  color: #909399;\r\n  text-align: center;\r\n  font-size: 14px;\r\n}\r\n\r\n.dropdown-actions {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 12px 16px;\r\n  border-top: 1px solid #e4e7ed;\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.action-text {\r\n  font-size: 13px;\r\n  color: #606266;\r\n}\r\n\r\n.action-btn {\r\n  padding: 6px 12px;\r\n  margin-left: 8px;\r\n  border-radius: 4px;\r\n  font-size: 13px;\r\n  cursor: pointer;\r\n}\r\n\r\n.confirm-btn {\r\n  color: #fff;\r\n  background-color: #409eff;\r\n}\r\n\r\n.cancel-btn {\r\n  color: #606266;\r\n  background-color: #fff;\r\n  border: 1px solid #dcdfe6;\r\n}\r\n\r\n\r\n.close-icon {\r\n  font-size: 18px;\r\n  color: #909399;\r\n}\r\n</style>\r\n\r\n<script lang=\"uts\">\r\n/**\r\n * @description 增强版下拉框组件\r\n * @property {Array} options - 选项列表，每项需包含label和value属性\r\n * @property {Any} value - 当前值，可以是单个值或数组（多选模式）\r\n * @property {String} placeholder - 占位文本\r\n * @property {Boolean} searchable - 是否可搜索\r\n * @property {String} searchPlaceholder - 搜索框占位文本\r\n * @property {String} emptyText - 无数据时显示的文本\r\n * @property {Boolean} autoClose - 是否自动关闭下拉菜单\r\n * @property {Boolean} multiple - 是否多选\r\n * @property {Number} maxSelections - 多选时最大选择数量\r\n * @property {Boolean} grouped - 是否分组显示\r\n * @property {Function} displayFormatter - 自定义显示值的格式化函数\r\n * @property {Boolean} collectFullData - 是否收集完整数据\r\n */\r\nexport default {\r\n  name: 'EnhancedDropdown',\r\n  props: {\r\n    // 选项列表\r\n    options: {\r\n      type: Array,\r\n      default: () => [],\r\n      validator: value => {\r\n        return value.every(item => item.label && item.value !== undefined)\r\n      }\r\n    },\r\n    // 当前值（支持多选）\r\n    value: {\r\n      type: [String, Number, Boolean, Object, Array],\r\n      default: null\r\n    },\r\n    // 占位文本\r\n    placeholder: {\r\n      type: String,\r\n      default: '请选择'\r\n    },\r\n    // 是否可搜索\r\n    searchable: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    // 搜索框占位文本\r\n    searchPlaceholder: {\r\n      type: String,\r\n      default: '搜索...'\r\n    },\r\n    // 无数据时显示的文本\r\n    emptyText: {\r\n      type: String,\r\n      default: '无匹配数据'\r\n    },\r\n    // 是否自动关闭下拉菜单\r\n    autoClose: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    // 是否多选\r\n    multiple: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    // 多选时最大选择数量\r\n    maxSelections: {\r\n      type: Number,\r\n      default: null\r\n    },\r\n    // 是否分组显示\r\n    grouped: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    // 自定义显示值的格式化函数\r\n    displayFormatter: {\r\n      type: Function,\r\n      default: null\r\n    },\r\n    // 是否收集完整数据（而不仅仅是value）\r\n    collectFullData: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      isOpen: false,\r\n      searchText: '',\r\n      selectedValue: this.value,\r\n      selectedItems: Array.isArray(this.value) ? [...this.value] : this.value ? [this.value] : [],\r\n      tempSelection: null\r\n    }\r\n  },\r\n  computed: {\r\n    /**\r\n     * @description 显示的值（支持自定义格式化）\r\n     * @returns {String} 格式化后的显示文本\r\n     */\r\n    displayValue() {\r\n      if (this.displayFormatter) {\r\n        return this.displayFormatter(this.selectedItems)\r\n      }\r\n      \r\n      if (this.multiple) {\r\n        return this.selectedItems.length > 0 \r\n          ? this.selectedItems.map(item => {\r\n              if (typeof item === 'object' && item.label) {\r\n                return item.label;\r\n              } else {\r\n                const option = this.options.find(opt => opt.value === item);\r\n                return option ? option.label : item;\r\n              }\r\n            }).join(', ') \r\n          : ''\r\n      }\r\n      \r\n      if (this.selectedItems.length > 0) {\r\n        const item = this.selectedItems[0];\r\n        if (typeof item === 'object' && item.label) {\r\n          return item.label;\r\n        } else {\r\n          const option = this.options.find(opt => opt.value === item);\r\n          return option ? option.label : item;\r\n        }\r\n      }\r\n      \r\n      return '';\r\n    },\r\n    \r\n    /**\r\n     * @description 过滤后的选项\r\n     * @returns {Array} 过滤后的选项列表\r\n     */\r\n    filteredOptions() {\r\n      if (!this.searchText) return this.options\r\n      const searchText = this.searchText.toLowerCase()\r\n      return this.options.filter(item => \r\n        item.label.toLowerCase().includes(searchText) ||\r\n        (item.tags && item.tags.some(tag => tag.toLowerCase().includes(searchText)))\r\n      )\r\n    },\r\n    \r\n    /**\r\n     * @description 分组后的选项\r\n     * @returns {Object} 分组后的选项对象\r\n     */\r\n    groupedOptions() {\r\n      if (!this.grouped) return {}\r\n      return this.filteredOptions.reduce((groups, item) => {\r\n        const groupName = item.group || ''\r\n        if (!groups[groupName]) {\r\n          groups[groupName] = []\r\n        }\r\n        groups[groupName].push(item)\r\n        return groups\r\n      }, {})\r\n    },\r\n    \r\n    /**\r\n     * @description 是否显示空状态\r\n     * @returns {Boolean} 是否显示空状态\r\n     */\r\n    showEmpty() {\r\n      if (this.grouped) {\r\n        return Object.keys(this.groupedOptions).length === 0\r\n      }\r\n      return this.filteredOptions.length === 0\r\n    }\r\n  },\r\n  watch: {\r\n    value(newVal) {\r\n      if (this.multiple) {\r\n        this.selectedItems = Array.isArray(newVal) ? [...newVal] : []\r\n      } else {\r\n        this.selectedItems = newVal ? [newVal] : []\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n     * @description 切换下拉框状态\r\n     */\r\n    toggleDropdown() {\r\n      this.isOpen = !this.isOpen;\r\n      if (this.isOpen) {\r\n        this.searchText = '';\r\n        this.tempSelection = null;\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * @description 关闭下拉框\r\n     */\r\n    closeDropdown() {\r\n      this.isOpen = false;\r\n    },\r\n    \r\n    /**\r\n     * @description 判断项目是否被选中\r\n     * @param {Object} item - 需要判断的选项\r\n     * @returns {Boolean} 是否选中\r\n     */\r\n    isItemSelected(item) {\r\n      return this.selectedItems.some(selected => \r\n        this.compareItems(selected, item)\r\n      )\r\n    },\r\n    \r\n    /**\r\n     * @description 比较两个项目是否相同\r\n     * @param {Object} item1 - 第一个项目\r\n     * @param {Object} item2 - 第二个项目\r\n     * @returns {Boolean} 是否相同\r\n     */\r\n    compareItems(item1, item2) {\r\n      if (typeof item1 === 'object' && typeof item2 === 'object') {\r\n        return item1.value === item2.value\r\n      }\r\n      return item1 === item2\r\n    },\r\n    \r\n    /**\r\n     * @description 选择项目\r\n     * @param {Object} item - 选择的项目\r\n     */\r\n    selectItem(item) {\r\n      if (this.multiple) {\r\n        this.handleMultipleSelection(item)\r\n      } else {\r\n        this.handleSingleSelection(item)\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * @description 处理单选\r\n     * @param {Object} item - 选择的项目\r\n     */\r\n    handleSingleSelection(item) {\r\n      this.selectedItems = [this.collectFullData ? item : item.value];\r\n      this.emitChanges();\r\n      \r\n      if (this.autoClose) {\r\n        this.closeDropdown();\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * @description 处理多选\r\n     * @param {Object} item - 选择的项目\r\n     */\r\n    handleMultipleSelection(item) {\r\n      const itemValue = this.collectFullData ? item : item.value;\r\n      const index = this.selectedItems.findIndex(selected => \r\n        this.compareItems(selected, itemValue)\r\n      );\r\n      \r\n      if (index >= 0) {\r\n        // 已选中则取消\r\n        this.selectedItems.splice(index, 1);\r\n        // 直接触发变更事件\r\n        this.emitChanges();\r\n      } else {\r\n        // 检查是否超过最大选择数量\r\n        if (this.maxSelections && this.selectedItems.length >= this.maxSelections) {\r\n          uni.showToast({\r\n            title: `最多选择 ${this.maxSelections} 项`,\r\n            icon: 'none'\r\n          });\r\n          return;\r\n        }\r\n        \r\n        // 直接添加选项，不使用临时选择机制\r\n        this.selectedItems.push(itemValue);\r\n        this.emitChanges();\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * @description 确认多选\r\n     */\r\n    confirmSelection() {\r\n      this.closeDropdown();\r\n    },\r\n    \r\n    /**\r\n     * @description 取消多选\r\n     */\r\n    cancelSelection() {\r\n      // 取消选择，重置为初始状态\r\n      if (this.value) {\r\n        this.selectedItems = Array.isArray(this.value) ? [...this.value] : [this.value];\r\n      } else {\r\n        this.selectedItems = [];\r\n      }\r\n      this.emitChanges();\r\n      this.closeDropdown();\r\n    },\r\n    \r\n    /**\r\n     * @description 触发变更事件\r\n     */\r\n    emitChanges() {\r\n      if (this.multiple) {\r\n        const values = this.selectedItems.map(item => \r\n          this.collectFullData ? item : item.value\r\n        );\r\n        this.$emit('input', values);\r\n        this.$emit('change', this.selectedItems);\r\n      } else {\r\n        const value = this.selectedItems.length > 0 \r\n          ? (this.collectFullData ? this.selectedItems[0] : this.selectedItems[0].value)\r\n          : null;\r\n        this.$emit('input', value);\r\n        this.$emit('change', this.selectedItems[0] || null);\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * @description 处理搜索\r\n     */\r\n    handleSearch() {\r\n      // 搜索处理逻辑\r\n    },\r\n    \r\n    /**\r\n     * @description 获取当前选中的数据（完整对象或值）\r\n     * @returns {Any} 选中的数据\r\n     */\r\n    getSelectedData() {\r\n      if (this.multiple) {\r\n        return this.collectFullData \r\n          ? this.selectedItems \r\n          : this.selectedItems.map(item => item.value)\r\n      }\r\n      return this.selectedItems.length > 0 \r\n        ? (this.collectFullData ? this.selectedItems[0] : this.selectedItems[0].value)\r\n        : null\r\n    },\r\n    \r\n    /**\r\n     * @description 获取当前搜索条件\r\n     * @returns {String} 搜索条件\r\n     */\r\n    getSearchCondition() {\r\n      return this.searchable ? this.searchText : ''\r\n    },\r\n    \r\n    /**\r\n     * @description 获取选中的原始数据（总是返回完整对象）\r\n     * @returns {Any} 选中的原始数据\r\n     */\r\n    getSelectedRawData() {\r\n      if (this.multiple) {\r\n        return this.selectedItems.map(item => \r\n          typeof item === 'object' ? item : this.options.find(opt => opt.value === item)\r\n        ).filter(Boolean)\r\n      }\r\n      return this.selectedItems.length > 0 \r\n        ? (typeof this.selectedItems[0] === 'object' \r\n            ? this.selectedItems[0] \r\n            : this.options.find(opt => opt.value === this.selectedItems[0]))\r\n        : null\r\n    },\r\n    \r\n    /**\r\n     * @description 获取可用于提交给后端的数据\r\n     * @returns {Any} 后端数据\r\n     */\r\n    getPayloadData() {\r\n      const data = this.getSelectedRawData()\r\n      \r\n      if (data === null) return null\r\n      if (Array.isArray(data)) {\r\n        return data.map(item => this.transformItemForBackend(item))\r\n      }\r\n      return this.transformItemForBackend(data)\r\n    },\r\n    \r\n    /**\r\n     * @description 转换单个项目为后端需要的格式\r\n     * @param {Object} item - 项目对象\r\n     * @returns {Object} 转换后的对象\r\n     */\r\n    transformItemForBackend(item) {\r\n      if (!item) return null\r\n      \r\n      return {\r\n        id: item.value, // 通常作为主键\r\n        name: item.label, // 显示名称\r\n        ...item.metadata // 包含任何额外的元数据\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * @description 重置选择\r\n     */\r\n    reset() {\r\n      this.selectedItems = []\r\n      this.searchText = ''\r\n      this.emitChanges()\r\n    },\r\n    \r\n    /**\r\n     * @description 清空搜索\r\n     */\r\n    clearSearch() {\r\n      this.searchText = ''\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import Component from 'E:/yanshilu重新来过/前端yanshilu_1/components/combobox/combobox.uvue'\nwx.createComponent(Component)"],"names":["defineComponent","uni"],"mappings":"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"}