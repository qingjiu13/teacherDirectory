{"version":3,"file":"index.js","sources":["store/index.js"],"sourcesContent":["/**\r\n * @description 状态管理入口文件\r\n * 使用Vuex架构管理状态，按角色和功能区分模块\r\n */\r\n\r\n// 导入Vuex\r\nimport { createSSRApp } from 'vue'\r\nimport { createStore } from 'vuex'\r\n\r\n// 导入API服务\r\nimport * as apiServices from './services';\r\n\r\n// 导入共享模块\r\nimport auth from './modules/common/auth';\r\nimport app from './modules/common/app';\r\nimport message from './modules/common/message';\r\nimport settings from './modules/common/settings';\r\nimport aiChat from './modules/common/ai-chat';\r\nimport match from './modules/common/match';\r\n\r\n// 导入角色相关模块\r\nimport user from './modules/common/user';\r\nimport teacher from './modules/teacher';\r\nimport student from './modules/student';\r\n\r\n// 导入功能模块\r\nimport courses from './modules/common/courses';\r\nimport orders from './modules/common/orders';\r\n\r\n/**\r\n * @description 创建Vuex Store实例\r\n */\r\nconst store = createStore({\r\n  modules: {\r\n    // 共享模块\r\n    auth,            // 认证相关\r\n    app,             // 应用全局状态\r\n    message,         // 消息通知\r\n    settings,        // 用户设置\r\n    \r\n    // 用户信息模块\r\n    user,            // 用户基本信息\r\n    \r\n    // 角色模块\r\n    teacher,         // 教师特有功能\r\n    student,         // 学生特有功能\r\n    \r\n    // 功能模块\r\n    aiChat,          // AI聊天功能\r\n    courses,         // 课程相关\r\n    orders,          // 订单相关\r\n    match            // 匹配功能\r\n  }\r\n});\r\n\r\n/**\r\n * @description 导出API服务，便于在组件中使用\r\n */\r\nexport const services = apiServices;\r\n\r\n/**\r\n * @description 应用初始化函数\r\n * @returns {Promise<Object>} 初始化结果\r\n */\r\nexport const initializeApp = async () => {\r\n  try {\r\n    // 检查用户登录状态并获取用户信息\r\n    const userInfo = await store.dispatch('auth/checkAuthStatus');\r\n    if (userInfo) {\r\n      // 如果用户已登录，根据角色加载相应模块数据\r\n      const { role } = userInfo;\r\n      if (role === 'teacher') {\r\n        // 加载教师特有数据\r\n        await store.dispatch('teacher/loadInitialData');\r\n      } else if (role === 'student') {\r\n        // 加载学生特有数据\r\n        await store.dispatch('student/loadInitialData');\r\n      }\r\n      \r\n      // 加载通用模块数据\r\n      await store.dispatch('match/resetAndGetRecommended');\r\n    }\r\n    return { success: true };\r\n  } catch (error) {\r\n    console.error('应用初始化失败:', error);\r\n    return { success: false, error };\r\n  }\r\n};\r\n\r\nexport default store;"],"names":["createStore","auth","app","message","settings","user","teacher","student","aiChat","courses","orders","match","uni"],"mappings":";;;;;;;;;;;;;AAgCK,MAAC,QAAQA,cAAAA,YAAY;AAAA,EACxB,SAAS;AAAA;AAAA,IAEX,MAAIC,0BAAI;AAAA;AAAA,IACR,KAAIC,yBAAG;AAAA;AAAA,IACP,SAAIC,6BAAO;AAAA;AAAA,IACX,UAAIC,8BAAQ;AAAA;AAAA;AAAA,IAGZ,MAAIC,0BAAI;AAAA;AAAA;AAAA,IAGR,SAAIC,4BAAO;AAAA;AAAA,IACX,SAAIC,4BAAO;AAAA;AAAA;AAAA,IAGX,QAAIC,4BAAM;AAAA;AAAA,IACV,SAAIC,6BAAO;AAAA;AAAA,IACX,QAAIC,4BAAM;AAAA;AAAA,IACV,OAAIC,2BAAK;AAAA;AAAA,EACN;AACH,CAAC;AAWW,MAAC,gBAAgB,YAAY;AACvC,MAAI;AAEF,UAAM,WAAW,MAAM,MAAM,SAAS,sBAAsB;AAC5D,QAAI,UAAU;AAEZ,YAAM,EAAE,KAAM,IAAG;AACjB,UAAI,SAAS,WAAW;AAEtB,cAAM,MAAM,SAAS,yBAAyB;AAAA,MACtD,WAAiB,SAAS,WAAW;AAE7B,cAAM,MAAM,SAAS,yBAAyB;AAAA,MAC/C;AAGD,YAAM,MAAM,SAAS,8BAA8B;AAAA,IACpD;AACD,WAAO,EAAE,SAAS;EACnB,SAAQ,OAAO;AACdC,kBAAA,MAAA,MAAA,SAAA,wBAAc,YAAY,KAAK;AAC/B,WAAO,EAAE,SAAS,OAAO;EAC1B;AACH;;;"}