{"version":3,"file":"index.js","sources":["store/index.js"],"sourcesContent":["import { createSSRApp } from 'vue'\r\nimport { createStore } from 'vuex'\r\n// 导入根级别状态管理\r\nimport rootGetters from './getters'\r\nimport rootMutations from './mutations'\r\nimport rootActions from './actions'\r\n// 导入模块\r\nimport auth from './modules/auth'\r\n\r\n// 不需要显式调用Vue.use(Vuex)，因为我们使用的是组合式API\r\n\r\n/**\r\n * @description Vuex根状态\r\n */\r\nconst state = {\r\n  isLoading: false,\r\n  error: null,\r\n  appVersion: '1.0.0'\r\n}\r\n\r\n/**\r\n * @description Vuex存储实例\r\n */\r\nconst store = createStore({\r\n  state,\r\n  getters: rootGetters,\r\n  mutations: rootMutations,\r\n  actions: rootActions,\r\n  modules: {\r\n    auth // 用户认证模块\r\n  },\r\n  // 严格模式，防止直接修改状态\r\n  strict: process.env.NODE_ENV !== 'production'\r\n})\r\n\r\n/**\r\n * @description 初始化应用\r\n * 在app.vue中调用这个方法进行初始化\r\n */\r\nexport const initializeApp = async () => {\r\n  await store.dispatch('initApp')\r\n}\r\n\r\nexport default store"],"names":["createStore","rootGetters","rootMutations","rootActions","auth"],"mappings":";;;;;;AAcA,MAAM,QAAQ;AAAA,EACZ,WAAW;AAAA,EACX,OAAO;AAAA,EACP,YAAY;AACd;AAKA,MAAM,QAAQA,cAAAA,YAAY;AAAA,EACxB;AAAA,EACA,SAASC,cAAA;AAAA,EACT,WAAWC,gBAAA;AAAA,EACX,SAASC,cAAA;AAAA,EACT,SAAS;AAAA,IAAA,MACPC,mBAAA;AAAA;AAAA,EACF;AAAA;AAAA,EAEA,QAAQ;AACV,CAAC;AAMM,MAAM,gBAAgB,YAAY;AACjC,QAAA,MAAM,SAAS,SAAS;AAChC;;"}