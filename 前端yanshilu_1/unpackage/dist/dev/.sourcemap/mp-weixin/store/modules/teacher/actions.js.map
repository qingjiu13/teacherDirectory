{"version":3,"file":"actions.js","sources":["store/modules/teacher/actions.js"],"sourcesContent":["/**\r\n * @description 老师匹配模块的actions\r\n */\r\n\r\nimport {\r\n  getTeachers,\r\n  getTeacherDetail,\r\n  bookTeacher,\r\n  getBookings\r\n} from '../../services/teacher.api';\r\n\r\nexport default {\r\n  /**\r\n   * @description 获取老师列表\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Object} filters - 筛选条件\r\n   * @returns {Promise<Object>} 操作结果\r\n   */\r\n  async fetchTeachers({ commit, state }, filters = {}) {\r\n    try {\r\n      // 更新筛选条件\r\n      if (filters) {\r\n        commit('UPDATE_FILTERS', filters);\r\n      }\r\n      \r\n      commit('SET_LOADING', { teachers: true });\r\n      commit('CLEAR_ERROR');\r\n      \r\n      // 使用当前state中的filters\r\n      const response = await getTeachers(state.filters);\r\n      \r\n      if (response.success) {\r\n        commit('SET_TEACHERS', response.data.list);\r\n        commit('SET_PAGINATION', response.data.pagination);\r\n        commit('SET_LOADING', { teachers: false });\r\n        return { success: true, data: response.data };\r\n      } else {\r\n        commit('SET_ERROR', response.message || '获取老师列表失败');\r\n        commit('SET_LOADING', { teachers: false });\r\n        return { success: false, message: response.message };\r\n      }\r\n    } catch (error) {\r\n      console.error('获取老师列表失败:', error);\r\n      commit('SET_ERROR', error.message || '获取老师列表过程中发生错误');\r\n      commit('SET_LOADING', { teachers: false });\r\n      return { success: false, message: error.message };\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 重置筛选条件并获取老师列表\r\n   * @param {Object} context - Vuex上下文\r\n   * @returns {Promise<Object>} 操作结果\r\n   */\r\n  async resetFiltersAndFetchTeachers({ commit, dispatch }) {\r\n    commit('RESET_FILTERS');\r\n    return dispatch('fetchTeachers');\r\n  },\r\n  \r\n  /**\r\n   * @description 获取老师详情\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {string} teacherId - 老师ID\r\n   * @returns {Promise<Object>} 操作结果\r\n   */\r\n  async fetchTeacherDetail({ commit }, teacherId) {\r\n    try {\r\n      commit('SET_LOADING', { teacher: true });\r\n      commit('CLEAR_ERROR');\r\n      \r\n      const response = await getTeacherDetail(teacherId);\r\n      \r\n      if (response.success) {\r\n        commit('SET_CURRENT_TEACHER', response.data);\r\n        commit('SET_LOADING', { teacher: false });\r\n        return { success: true, data: response.data };\r\n      } else {\r\n        commit('SET_ERROR', response.message || '获取老师详情失败');\r\n        commit('SET_LOADING', { teacher: false });\r\n        return { success: false, message: response.message };\r\n      }\r\n    } catch (error) {\r\n      console.error('获取老师详情失败:', error);\r\n      commit('SET_ERROR', error.message || '获取老师详情过程中发生错误');\r\n      commit('SET_LOADING', { teacher: false });\r\n      return { success: false, message: error.message };\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 预约老师\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Object} bookingInfo - 预约信息\r\n   * @returns {Promise<Object>} 操作结果\r\n   */\r\n  async bookTeacher({ commit, dispatch }, bookingInfo) {\r\n    try {\r\n      commit('SET_LOADING', { booking: true });\r\n      commit('CLEAR_ERROR');\r\n      \r\n      const response = await bookTeacher(bookingInfo);\r\n      \r\n      if (response.success) {\r\n        // 添加到预约列表\r\n        commit('ADD_BOOKING', response.data);\r\n        \r\n        // 重新获取预约列表以确保数据一致性\r\n        dispatch('fetchBookings');\r\n        \r\n        commit('SET_LOADING', { booking: false });\r\n        return { success: true, data: response.data, message: response.message };\r\n      } else {\r\n        commit('SET_ERROR', response.message || '预约老师失败');\r\n        commit('SET_LOADING', { booking: false });\r\n        return { success: false, message: response.message };\r\n      }\r\n    } catch (error) {\r\n      console.error('预约老师失败:', error);\r\n      commit('SET_ERROR', error.message || '预约老师过程中发生错误');\r\n      commit('SET_LOADING', { booking: false });\r\n      return { success: false, message: error.message };\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 获取预约列表\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Object} params - 查询参数\r\n   * @returns {Promise<Object>} 操作结果\r\n   */\r\n  async fetchBookings({ commit, rootState }, params = {}) {\r\n    try {\r\n      commit('SET_LOADING', { bookings: true });\r\n      commit('CLEAR_ERROR');\r\n      \r\n      // 根据当前用户角色设置查询参数\r\n      const role = rootState.user.role;\r\n      const queryParams = { role, ...params };\r\n      \r\n      const response = await getBookings(queryParams);\r\n      \r\n      if (response.success) {\r\n        commit('SET_BOOKINGS', response.data);\r\n        commit('SET_LOADING', { bookings: false });\r\n        return { success: true, data: response.data };\r\n      } else {\r\n        commit('SET_ERROR', response.message || '获取预约列表失败');\r\n        commit('SET_LOADING', { bookings: false });\r\n        return { success: false, message: response.message };\r\n      }\r\n    } catch (error) {\r\n      console.error('获取预约列表失败:', error);\r\n      commit('SET_ERROR', error.message || '获取预约列表过程中发生错误');\r\n      commit('SET_LOADING', { bookings: false });\r\n      return { success: false, message: error.message };\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 更新预约状态\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Object} params - 参数\r\n   * @param {string} params.id - 预约ID\r\n   * @param {string} params.status - 预约状态\r\n   * @returns {Promise<Object>} 操作结果\r\n   */\r\n  async updateBookingStatus({ commit, dispatch }, { id, status }) {\r\n    try {\r\n      commit('SET_LOADING', { booking: true });\r\n      \r\n      // 这里应该有一个实际的API调用更新预约状态\r\n      // 模拟API调用成功\r\n      setTimeout(() => {}, 300);\r\n      \r\n      // 更新本地状态\r\n      commit('UPDATE_BOOKING_STATUS', { id, status });\r\n      \r\n      // 重新获取预约列表以确保数据一致性\r\n      await dispatch('fetchBookings');\r\n      \r\n      commit('SET_LOADING', { booking: false });\r\n      return { success: true, message: '预约状态已更新' };\r\n    } catch (error) {\r\n      console.error('更新预约状态失败:', error);\r\n      commit('SET_ERROR', error.message || '更新预约状态过程中发生错误');\r\n      commit('SET_LOADING', { booking: false });\r\n      return { success: false, message: error.message };\r\n    }\r\n  }\r\n}; "],"names":["getTeachers","uni","getTeacherDetail","bookTeacher","getBookings"],"mappings":"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"}