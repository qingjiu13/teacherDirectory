{"version":3,"file":"learning.js","sources":["store/modules/student/learning.js"],"sourcesContent":["/**\r\n * @description 学生学习进度管理模块\r\n */\r\nimport { services } from '../../services';\r\n\r\n// 初始状态\r\nconst state = {\r\n  learningProgress: {},  // 按课程ID存储的学习进度\r\n  watchHistory: [],      // 观看历史\r\n  notes: [],             // 学习笔记\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\n// Getters\r\nconst getters = {\r\n  learningProgress: state => state.learningProgress,\r\n  watchHistory: state => state.watchHistory,\r\n  notes: state => state.notes,\r\n  loading: state => state.loading,\r\n  error: state => state.error,\r\n  \r\n  /**\r\n   * @description 获取指定课程的学习进度\r\n   * @param {String} courseId - 课程ID\r\n   * @returns {Object} 课程学习进度\r\n   */\r\n  getCourseProgress: state => courseId => state.learningProgress[courseId] || { \r\n    completed: 0, \r\n    total: 0, \r\n    percentage: 0 \r\n  },\r\n  \r\n  /**\r\n   * @description 获取最近观看的课程\r\n   * @returns {Array} 最近观看的课程列表\r\n   */\r\n  recentWatched: state => {\r\n    return state.watchHistory.slice(0, 5);\r\n  }\r\n};\r\n\r\n// 引入常量类型\r\nconst FETCH_LEARNING_PROGRESS_REQUEST = 'FETCH_LEARNING_PROGRESS_REQUEST';\r\nconst FETCH_LEARNING_PROGRESS_SUCCESS = 'FETCH_LEARNING_PROGRESS_SUCCESS';\r\nconst FETCH_LEARNING_PROGRESS_FAILURE = 'FETCH_LEARNING_PROGRESS_FAILURE';\r\nconst UPDATE_LEARNING_PROGRESS_REQUEST = 'UPDATE_LEARNING_PROGRESS_REQUEST';\r\nconst UPDATE_LEARNING_PROGRESS_SUCCESS = 'UPDATE_LEARNING_PROGRESS_SUCCESS';\r\nconst UPDATE_LEARNING_PROGRESS_FAILURE = 'UPDATE_LEARNING_PROGRESS_FAILURE';\r\nconst FETCH_WATCH_HISTORY_REQUEST = 'FETCH_WATCH_HISTORY_REQUEST';\r\nconst FETCH_WATCH_HISTORY_SUCCESS = 'FETCH_WATCH_HISTORY_SUCCESS';\r\nconst FETCH_WATCH_HISTORY_FAILURE = 'FETCH_WATCH_HISTORY_FAILURE';\r\nconst ADD_WATCH_RECORD_SUCCESS = 'ADD_WATCH_RECORD_SUCCESS';\r\nconst FETCH_NOTES_REQUEST = 'FETCH_NOTES_REQUEST';\r\nconst FETCH_NOTES_SUCCESS = 'FETCH_NOTES_SUCCESS';\r\nconst FETCH_NOTES_FAILURE = 'FETCH_NOTES_FAILURE';\r\nconst SAVE_NOTE_SUCCESS = 'SAVE_NOTE_SUCCESS';\r\n\r\n// Mutations\r\nconst mutations = {\r\n  [FETCH_LEARNING_PROGRESS_REQUEST](state) {\r\n    state.loading = true;\r\n    state.error = null;\r\n  },\r\n  [FETCH_LEARNING_PROGRESS_SUCCESS](state, progress) {\r\n    state.learningProgress = progress;\r\n    state.loading = false;\r\n    state.error = null;\r\n  },\r\n  [FETCH_LEARNING_PROGRESS_FAILURE](state, error) {\r\n    state.loading = false;\r\n    state.error = error;\r\n  },\r\n  [UPDATE_LEARNING_PROGRESS_REQUEST](state) {\r\n    state.loading = true;\r\n    state.error = null;\r\n  },\r\n  [UPDATE_LEARNING_PROGRESS_SUCCESS](state, { courseId, progress }) {\r\n    state.learningProgress = {\r\n      ...state.learningProgress,\r\n      [courseId]: progress\r\n    };\r\n    state.loading = false;\r\n    state.error = null;\r\n  },\r\n  [UPDATE_LEARNING_PROGRESS_FAILURE](state, error) {\r\n    state.loading = false;\r\n    state.error = error;\r\n  },\r\n  [FETCH_WATCH_HISTORY_REQUEST](state) {\r\n    state.loading = true;\r\n    state.error = null;\r\n  },\r\n  [FETCH_WATCH_HISTORY_SUCCESS](state, history) {\r\n    state.watchHistory = history;\r\n    state.loading = false;\r\n    state.error = null;\r\n  },\r\n  [FETCH_WATCH_HISTORY_FAILURE](state, error) {\r\n    state.loading = false;\r\n    state.error = error;\r\n  },\r\n  [ADD_WATCH_RECORD_SUCCESS](state, record) {\r\n    // 移除相同的记录（如果存在）\r\n    const index = state.watchHistory.findIndex(item => \r\n      item.courseId === record.courseId && item.lectureId === record.lectureId\r\n    );\r\n    \r\n    if (index !== -1) {\r\n      state.watchHistory.splice(index, 1);\r\n    }\r\n    \r\n    // 添加到头部\r\n    state.watchHistory.unshift(record);\r\n  },\r\n  [FETCH_NOTES_REQUEST](state) {\r\n    state.loading = true;\r\n    state.error = null;\r\n  },\r\n  [FETCH_NOTES_SUCCESS](state, notes) {\r\n    state.notes = notes;\r\n    state.loading = false;\r\n    state.error = null;\r\n  },\r\n  [FETCH_NOTES_FAILURE](state, error) {\r\n    state.loading = false;\r\n    state.error = error;\r\n  },\r\n  [SAVE_NOTE_SUCCESS](state, note) {\r\n    const index = state.notes.findIndex(n => n.id === note.id);\r\n    \r\n    if (index !== -1) {\r\n      // 更新现有笔记\r\n      state.notes.splice(index, 1, note);\r\n    } else {\r\n      // 添加新笔记\r\n      state.notes.push(note);\r\n    }\r\n  }\r\n};\r\n\r\n// Actions\r\nconst actions = {\r\n  /**\r\n   * @description 获取所有课程的学习进度\r\n   * @param {Object} context - Vuex上下文\r\n   * @returns {Promise<Object>} 所有课程的学习进度\r\n   */\r\n  async fetchLearningProgress({ commit }) {\r\n    commit(FETCH_LEARNING_PROGRESS_REQUEST);\r\n    \r\n    try {\r\n      const response = await services.student.getLearningProgress();\r\n      commit(FETCH_LEARNING_PROGRESS_SUCCESS, response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      commit(FETCH_LEARNING_PROGRESS_FAILURE, error.response?.data?.message || '获取学习进度失败');\r\n      return Promise.reject(error);\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 更新课程学习进度\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Object} payload - 进度信息\r\n   * @param {String} payload.courseId - 课程ID\r\n   * @param {String} payload.lectureId - 讲座ID\r\n   * @param {Number} payload.position - 视频位置（秒）\r\n   * @param {Boolean} payload.completed - 是否完成\r\n   * @returns {Promise<Object>} 更新结果\r\n   */\r\n  async updateProgress({ commit }, { courseId, lectureId, position, completed }) {\r\n    commit(UPDATE_LEARNING_PROGRESS_REQUEST);\r\n    \r\n    try {\r\n      const response = await services.student.updateLearningProgress(\r\n        courseId, \r\n        lectureId, \r\n        { position, completed }\r\n      );\r\n      \r\n      commit(UPDATE_LEARNING_PROGRESS_SUCCESS, { \r\n        courseId, \r\n        progress: response.data.progress \r\n      });\r\n      \r\n      // 添加到观看历史\r\n      if (response.data.watchRecord) {\r\n        commit(ADD_WATCH_RECORD_SUCCESS, response.data.watchRecord);\r\n      }\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      commit(UPDATE_LEARNING_PROGRESS_FAILURE, error.response?.data?.message || '更新学习进度失败');\r\n      return Promise.reject(error);\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 获取观看历史\r\n   * @param {Object} context - Vuex上下文\r\n   * @returns {Promise<Array>} 观看历史记录\r\n   */\r\n  async fetchWatchHistory({ commit }) {\r\n    commit(FETCH_WATCH_HISTORY_REQUEST);\r\n    \r\n    try {\r\n      const response = await services.student.getWatchHistory();\r\n      commit(FETCH_WATCH_HISTORY_SUCCESS, response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      commit(FETCH_WATCH_HISTORY_FAILURE, error.response?.data?.message || '获取观看历史失败');\r\n      return Promise.reject(error);\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 获取学习笔记\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {String} courseId - 可选的课程ID过滤器\r\n   * @returns {Promise<Array>} 学习笔记列表\r\n   */\r\n  async fetchNotes({ commit }, courseId = null) {\r\n    commit(FETCH_NOTES_REQUEST);\r\n    \r\n    try {\r\n      const response = await services.student.getNotes(courseId);\r\n      commit(FETCH_NOTES_SUCCESS, response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      commit(FETCH_NOTES_FAILURE, error.response?.data?.message || '获取学习笔记失败');\r\n      return Promise.reject(error);\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 保存学习笔记\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Object} note - 笔记内容\r\n   * @returns {Promise<Object>} 保存结果\r\n   */\r\n  async saveNote({ commit }, note) {\r\n    try {\r\n      const response = await services.student.saveNote(note);\r\n      commit(SAVE_NOTE_SUCCESS, response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      return Promise.reject(error.response?.data?.message || '保存笔记失败');\r\n    }\r\n  }\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations\r\n}; "],"names":["state","services"],"mappings":"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"}