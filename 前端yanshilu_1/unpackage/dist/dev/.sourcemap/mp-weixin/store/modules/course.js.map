{"version":3,"file":"course.js","sources":["store/modules/course.js"],"sourcesContent":["/**\r\n * @description 课程状态管理模块\r\n */\r\n\r\n// 模拟API请求\r\nconst api = {\r\n  /**\r\n   * @description 获取教师课程列表\r\n   * @param {Object} params - 请求参数\r\n   * @param {string} params.token - 用户令牌\r\n   * @returns {Promise<Object>} 课程列表\r\n   */\r\n  getTeacherCourses(params) {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        const courses = [\r\n          {\r\n            id: 'c1',\r\n            title: '学术写作指导',\r\n            description: '帮助学生掌握学术写作技巧',\r\n            price: 299,\r\n            totalHours: 10,\r\n            students: 5,\r\n            rating: 4.8,\r\n            coverImage: 'https://example.com/course1.jpg',\r\n            status: 'active',\r\n            createTime: Date.now() - 30 * 86400000,\r\n            tags: ['学术', '写作']\r\n          },\r\n          {\r\n            id: 'c2',\r\n            title: '研究方法论',\r\n            description: '系统讲解研究方法与实践',\r\n            price: 399,\r\n            totalHours: 15,\r\n            students: 8,\r\n            rating: 4.5,\r\n            coverImage: 'https://example.com/course2.jpg',\r\n            status: 'active',\r\n            createTime: Date.now() - 60 * 86400000,\r\n            tags: ['研究', '方法论']\r\n          },\r\n          {\r\n            id: 'c3',\r\n            title: '学术论文写作进阶',\r\n            description: '针对高级学术论文写作的专业指导',\r\n            price: 499,\r\n            totalHours: 20,\r\n            students: 3,\r\n            rating: 4.9,\r\n            coverImage: 'https://example.com/course3.jpg',\r\n            status: 'draft',\r\n            createTime: Date.now() - 15 * 86400000,\r\n            tags: ['论文', '写作', '进阶']\r\n          }\r\n        ];\r\n        \r\n        resolve({\r\n          success: true,\r\n          data: courses\r\n        });\r\n      }, 500);\r\n    });\r\n  },\r\n  \r\n  /**\r\n   * @description 获取学生课程列表\r\n   * @param {Object} params - 请求参数\r\n   * @param {string} params.token - 用户令牌\r\n   * @returns {Promise<Object>} 课程列表\r\n   */\r\n  getStudentCourses(params) {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        const courses = [\r\n          {\r\n            id: 's1',\r\n            courseId: 'c1',\r\n            title: '学术写作指导',\r\n            teacher: '王老师',\r\n            teacherId: 'teacher1',\r\n            teacherAvatar: 'https://example.com/teacher1.jpg',\r\n            progress: 60,\r\n            rating: 5.0,\r\n            startTime: Date.now() - 15 * 86400000,\r\n            endTime: Date.now() + 15 * 86400000,\r\n            nextClass: Date.now() + 86400000,\r\n            coverImage: 'https://example.com/course1.jpg'\r\n          },\r\n          {\r\n            id: 's2',\r\n            courseId: 'c2',\r\n            title: '研究方法论',\r\n            teacher: '李老师',\r\n            teacherId: 'teacher2',\r\n            teacherAvatar: 'https://example.com/teacher2.jpg',\r\n            progress: 30,\r\n            rating: 4.5,\r\n            startTime: Date.now() - 30 * 86400000,\r\n            endTime: Date.now() + 30 * 86400000,\r\n            nextClass: Date.now() + 3 * 86400000,\r\n            coverImage: 'https://example.com/course2.jpg'\r\n          }\r\n        ];\r\n        \r\n        resolve({\r\n          success: true,\r\n          data: courses\r\n        });\r\n      }, 500);\r\n    });\r\n  },\r\n  \r\n  /**\r\n   * @description 获取课程详情\r\n   * @param {Object} params - 请求参数\r\n   * @param {string} params.token - 用户令牌\r\n   * @param {string} params.courseId - 课程ID\r\n   * @returns {Promise<Object>} 课程详情\r\n   */\r\n  getCourseDetail(params) {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        const course = {\r\n          id: params.courseId,\r\n          title: params.courseId === 'c1' ? '学术写作指导' : '研究方法论',\r\n          description: params.courseId === 'c1' \r\n            ? '帮助学生掌握学术写作技巧' \r\n            : '系统讲解研究方法与实践',\r\n          price: params.courseId === 'c1' ? 299 : 399,\r\n          totalHours: params.courseId === 'c1' ? 10 : 15,\r\n          students: params.courseId === 'c1' ? 5 : 8,\r\n          rating: params.courseId === 'c1' ? 4.8 : 4.5,\r\n          coverImage: `https://example.com/course${params.courseId.slice(1)}.jpg`,\r\n          status: 'active',\r\n          createTime: Date.now() - (params.courseId === 'c1' ? 30 : 60) * 86400000,\r\n          tags: params.courseId === 'c1' ? ['学术', '写作'] : ['研究', '方法论'],\r\n          syllabus: [\r\n            {\r\n              id: '1',\r\n              title: '第一章：导论',\r\n              content: '课程介绍和基本概念',\r\n              duration: 60,\r\n              materials: ['导论PPT', '参考文献']\r\n            },\r\n            {\r\n              id: '2',\r\n              title: '第二章：基础知识',\r\n              content: '核心概念和理论框架',\r\n              duration: 90,\r\n              materials: ['基础知识PPT', '阅读材料']\r\n            },\r\n            {\r\n              id: '3',\r\n              title: '第三章：实践应用',\r\n              content: '案例分析和实践指导',\r\n              duration: 120,\r\n              materials: ['案例分析PPT', '实践作业']\r\n            }\r\n          ],\r\n          teacher: {\r\n            id: 'teacher1',\r\n            name: params.courseId === 'c1' ? '王老师' : '李老师',\r\n            avatar: `https://example.com/teacher${params.courseId === 'c1' ? '1' : '2'}.jpg`,\r\n            title: '副教授',\r\n            introduction: '多年教学经验，专注于学术指导',\r\n            rating: params.courseId === 'c1' ? 4.9 : 4.7\r\n          },\r\n          reviews: [\r\n            {\r\n              id: 'r1',\r\n              studentId: 'student1',\r\n              studentName: '小明',\r\n              rating: 5,\r\n              content: '老师讲解很清晰，收获很多',\r\n              time: Date.now() - 5 * 86400000\r\n            },\r\n            {\r\n              id: 'r2',\r\n              studentId: 'student2',\r\n              studentName: '小红',\r\n              rating: 4,\r\n              content: '内容丰富，但希望能有更多实践环节',\r\n              time: Date.now() - 10 * 86400000\r\n            }\r\n          ]\r\n        };\r\n        \r\n        resolve({\r\n          success: true,\r\n          data: course\r\n        });\r\n      }, 500);\r\n    });\r\n  },\r\n  \r\n  /**\r\n   * @description 创建课程\r\n   * @param {Object} params - 请求参数\r\n   * @param {string} params.token - 用户令牌\r\n   * @param {Object} params.courseData - 课程数据\r\n   * @returns {Promise<Object>} 创建结果\r\n   */\r\n  createCourse(params) {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve({\r\n          success: true,\r\n          data: {\r\n            id: `course_${Date.now()}`,\r\n            ...params.courseData,\r\n            status: 'draft',\r\n            createTime: Date.now(),\r\n            students: 0,\r\n            rating: 0\r\n          }\r\n        });\r\n      }, 800);\r\n    });\r\n  },\r\n  \r\n  /**\r\n   * @description 更新课程\r\n   * @param {Object} params - 请求参数\r\n   * @param {string} params.token - 用户令牌\r\n   * @param {string} params.courseId - 课程ID\r\n   * @param {Object} params.courseData - 课程数据\r\n   * @returns {Promise<Object>} 更新结果\r\n   */\r\n  updateCourse(params) {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve({\r\n          success: true,\r\n          data: {\r\n            id: params.courseId,\r\n            ...params.courseData,\r\n            updateTime: Date.now()\r\n          }\r\n        });\r\n      }, 600);\r\n    });\r\n  },\r\n  \r\n  /**\r\n   * @description 删除课程\r\n   * @param {Object} params - 请求参数\r\n   * @param {string} params.token - 用户令牌\r\n   * @param {string} params.courseId - 课程ID\r\n   * @returns {Promise<Object>} 删除结果\r\n   */\r\n  deleteCourse(params) {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve({\r\n          success: true,\r\n          data: {\r\n            id: params.courseId,\r\n            deleted: true,\r\n            deleteTime: Date.now()\r\n          }\r\n        });\r\n      }, 500);\r\n    });\r\n  },\r\n  \r\n  /**\r\n   * @description 发布课程\r\n   * @param {Object} params - 请求参数\r\n   * @param {string} params.token - 用户令牌\r\n   * @param {string} params.courseId - 课程ID\r\n   * @returns {Promise<Object>} 发布结果\r\n   */\r\n  publishCourse(params) {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve({\r\n          success: true,\r\n          data: {\r\n            id: params.courseId,\r\n            status: 'active',\r\n            publishTime: Date.now()\r\n          }\r\n        });\r\n      }, 500);\r\n    });\r\n  },\r\n  \r\n  /**\r\n   * @description 评价课程\r\n   * @param {Object} params - 请求参数\r\n   * @param {string} params.token - 用户令牌\r\n   * @param {string} params.courseId - 课程ID\r\n   * @param {Object} params.reviewData - 评价数据\r\n   * @returns {Promise<Object>} 评价结果\r\n   */\r\n  reviewCourse(params) {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve({\r\n          success: true,\r\n          data: {\r\n            id: `review_${Date.now()}`,\r\n            courseId: params.courseId,\r\n            studentId: 'currentUser',\r\n            studentName: '当前用户',\r\n            ...params.reviewData,\r\n            time: Date.now()\r\n          }\r\n        });\r\n      }, 500);\r\n    });\r\n  }\r\n};\r\n\r\n// 初始状态\r\nconst state = {\r\n  teacherCourses: [],\r\n  studentCourses: [],\r\n  currentCourse: null,\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\n// Mutations\r\nconst mutations = {\r\n  /**\r\n   * @description 设置教师课程列表\r\n   * @param {Object} state - Vuex状态\r\n   * @param {Array} courses - 课程列表\r\n   */\r\n  SET_TEACHER_COURSES(state, courses) {\r\n    state.teacherCourses = courses;\r\n  },\r\n  \r\n  /**\r\n   * @description 设置学生课程列表\r\n   * @param {Object} state - Vuex状态\r\n   * @param {Array} courses - 课程列表\r\n   */\r\n  SET_STUDENT_COURSES(state, courses) {\r\n    state.studentCourses = courses;\r\n  },\r\n  \r\n  /**\r\n   * @description 设置当前课程\r\n   * @param {Object} state - Vuex状态\r\n   * @param {Object} course - 课程详情\r\n   */\r\n  SET_CURRENT_COURSE(state, course) {\r\n    state.currentCourse = course;\r\n  },\r\n  \r\n  /**\r\n   * @description 添加教师课程\r\n   * @param {Object} state - Vuex状态\r\n   * @param {Object} course - 课程数据\r\n   */\r\n  ADD_TEACHER_COURSE(state, course) {\r\n    state.teacherCourses.unshift(course);\r\n  },\r\n  \r\n  /**\r\n   * @description 更新教师课程\r\n   * @param {Object} state - Vuex状态\r\n   * @param {Object} course - 课程数据\r\n   */\r\n  UPDATE_TEACHER_COURSE(state, course) {\r\n    const index = state.teacherCourses.findIndex(c => c.id === course.id);\r\n    if (index !== -1) {\r\n      state.teacherCourses.splice(index, 1, { ...state.teacherCourses[index], ...course });\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 删除教师课程\r\n   * @param {Object} state - Vuex状态\r\n   * @param {string} courseId - 课程ID\r\n   */\r\n  REMOVE_TEACHER_COURSE(state, courseId) {\r\n    state.teacherCourses = state.teacherCourses.filter(c => c.id !== courseId);\r\n  },\r\n  \r\n  /**\r\n   * @description 添加学生课程\r\n   * @param {Object} state - Vuex状态\r\n   * @param {Object} course - 课程数据\r\n   */\r\n  ADD_STUDENT_COURSE(state, course) {\r\n    state.studentCourses.unshift(course);\r\n  },\r\n  \r\n  /**\r\n   * @description 更新学生课程\r\n   * @param {Object} state - Vuex状态\r\n   * @param {Object} course - 课程数据\r\n   */\r\n  UPDATE_STUDENT_COURSE(state, course) {\r\n    const index = state.studentCourses.findIndex(c => c.id === course.id);\r\n    if (index !== -1) {\r\n      state.studentCourses.splice(index, 1, { ...state.studentCourses[index], ...course });\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 设置加载状态\r\n   * @param {Object} state - Vuex状态\r\n   * @param {boolean} loading - 是否加载中\r\n   */\r\n  SET_LOADING(state, loading) {\r\n    state.loading = loading;\r\n  },\r\n  \r\n  /**\r\n   * @description 设置错误信息\r\n   * @param {Object} state - Vuex状态\r\n   * @param {string|Object|null} error - 错误信息\r\n   */\r\n  SET_ERROR(state, error) {\r\n    state.error = error;\r\n  },\r\n  \r\n  /**\r\n   * @description 添加课程评价\r\n   * @param {Object} state - Vuex状态\r\n   * @param {Object} review - 评价数据\r\n   */\r\n  ADD_COURSE_REVIEW(state, review) {\r\n    if (state.currentCourse) {\r\n      if (!state.currentCourse.reviews) {\r\n        state.currentCourse.reviews = [];\r\n      }\r\n      state.currentCourse.reviews.unshift(review);\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 更新课程状态\r\n   * @param {Object} state - Vuex状态\r\n   * @param {Object} payload - 载荷\r\n   * @param {string} payload.courseId - 课程ID\r\n   * @param {string} payload.status - 课程状态\r\n   */\r\n  UPDATE_COURSE_STATUS(state, { courseId, status }) {\r\n    const index = state.teacherCourses.findIndex(c => c.id === courseId);\r\n    if (index !== -1) {\r\n      state.teacherCourses[index].status = status;\r\n    }\r\n    \r\n    if (state.currentCourse && state.currentCourse.id === courseId) {\r\n      state.currentCourse.status = status;\r\n    }\r\n  }\r\n};\r\n\r\n// Actions\r\nconst actions = {\r\n  /**\r\n   * @description 获取教师课程列表\r\n   * @param {Object} context - Vuex上下文\r\n   * @returns {Promise<Object>} 获取结果\r\n   */\r\n  async getTeacherCourses({ commit, rootState }) {\r\n    try {\r\n      commit('SET_LOADING', true);\r\n      commit('SET_ERROR', null);\r\n      \r\n      const token = rootState.auth.token;\r\n      const response = await api.getTeacherCourses({ token });\r\n      \r\n      if (response.success) {\r\n        commit('SET_TEACHER_COURSES', response.data);\r\n        commit('SET_LOADING', false);\r\n        return { success: true, data: response.data };\r\n      }\r\n      \r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', '获取教师课程失败');\r\n      return { success: false, message: '获取教师课程失败' };\r\n    } catch (error) {\r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', error.message || '获取教师课程失败');\r\n      return { success: false, message: error.message || '获取教师课程失败' };\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 获取学生课程列表\r\n   * @param {Object} context - Vuex上下文\r\n   * @returns {Promise<Object>} 获取结果\r\n   */\r\n  async getStudentCourses({ commit, rootState }) {\r\n    try {\r\n      commit('SET_LOADING', true);\r\n      commit('SET_ERROR', null);\r\n      \r\n      const token = rootState.auth.token;\r\n      const response = await api.getStudentCourses({ token });\r\n      \r\n      if (response.success) {\r\n        commit('SET_STUDENT_COURSES', response.data);\r\n        commit('SET_LOADING', false);\r\n        return { success: true, data: response.data };\r\n      }\r\n      \r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', '获取学生课程失败');\r\n      return { success: false, message: '获取学生课程失败' };\r\n    } catch (error) {\r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', error.message || '获取学生课程失败');\r\n      return { success: false, message: error.message || '获取学生课程失败' };\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 获取课程详情\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {string} courseId - 课程ID\r\n   * @returns {Promise<Object>} 获取结果\r\n   */\r\n  async getCourseDetail({ commit, rootState }, courseId) {\r\n    try {\r\n      commit('SET_LOADING', true);\r\n      commit('SET_ERROR', null);\r\n      \r\n      const token = rootState.auth.token;\r\n      const response = await api.getCourseDetail({ token, courseId });\r\n      \r\n      if (response.success) {\r\n        commit('SET_CURRENT_COURSE', response.data);\r\n        commit('SET_LOADING', false);\r\n        return { success: true, data: response.data };\r\n      }\r\n      \r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', '获取课程详情失败');\r\n      return { success: false, message: '获取课程详情失败' };\r\n    } catch (error) {\r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', error.message || '获取课程详情失败');\r\n      return { success: false, message: error.message || '获取课程详情失败' };\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 创建课程\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Object} courseData - 课程数据\r\n   * @returns {Promise<Object>} 创建结果\r\n   */\r\n  async createCourse({ commit, rootState }, courseData) {\r\n    try {\r\n      commit('SET_LOADING', true);\r\n      commit('SET_ERROR', null);\r\n      \r\n      const token = rootState.auth.token;\r\n      const response = await api.createCourse({ token, courseData });\r\n      \r\n      if (response.success) {\r\n        commit('ADD_TEACHER_COURSE', response.data);\r\n        commit('SET_CURRENT_COURSE', response.data);\r\n        commit('SET_LOADING', false);\r\n        return { success: true, data: response.data };\r\n      }\r\n      \r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', '创建课程失败');\r\n      return { success: false, message: '创建课程失败' };\r\n    } catch (error) {\r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', error.message || '创建课程失败');\r\n      return { success: false, message: error.message || '创建课程失败' };\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 更新课程\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Object} params - 请求参数\r\n   * @param {string} params.courseId - 课程ID\r\n   * @param {Object} params.courseData - 课程数据\r\n   * @returns {Promise<Object>} 更新结果\r\n   */\r\n  async updateCourse({ commit, rootState }, { courseId, courseData }) {\r\n    try {\r\n      commit('SET_LOADING', true);\r\n      commit('SET_ERROR', null);\r\n      \r\n      const token = rootState.auth.token;\r\n      const response = await api.updateCourse({ token, courseId, courseData });\r\n      \r\n      if (response.success) {\r\n        commit('UPDATE_TEACHER_COURSE', response.data);\r\n        if (state.currentCourse && state.currentCourse.id === courseId) {\r\n          commit('SET_CURRENT_COURSE', { ...state.currentCourse, ...response.data });\r\n        }\r\n        commit('SET_LOADING', false);\r\n        return { success: true, data: response.data };\r\n      }\r\n      \r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', '更新课程失败');\r\n      return { success: false, message: '更新课程失败' };\r\n    } catch (error) {\r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', error.message || '更新课程失败');\r\n      return { success: false, message: error.message || '更新课程失败' };\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 删除课程\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {string} courseId - 课程ID\r\n   * @returns {Promise<Object>} 删除结果\r\n   */\r\n  async deleteCourse({ commit, rootState }, courseId) {\r\n    try {\r\n      commit('SET_LOADING', true);\r\n      commit('SET_ERROR', null);\r\n      \r\n      const token = rootState.auth.token;\r\n      const response = await api.deleteCourse({ token, courseId });\r\n      \r\n      if (response.success) {\r\n        commit('REMOVE_TEACHER_COURSE', courseId);\r\n        if (state.currentCourse && state.currentCourse.id === courseId) {\r\n          commit('SET_CURRENT_COURSE', null);\r\n        }\r\n        commit('SET_LOADING', false);\r\n        return { success: true, data: response.data };\r\n      }\r\n      \r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', '删除课程失败');\r\n      return { success: false, message: '删除课程失败' };\r\n    } catch (error) {\r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', error.message || '删除课程失败');\r\n      return { success: false, message: error.message || '删除课程失败' };\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 发布课程\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {string} courseId - 课程ID\r\n   * @returns {Promise<Object>} 发布结果\r\n   */\r\n  async publishCourse({ commit, rootState }, courseId) {\r\n    try {\r\n      commit('SET_LOADING', true);\r\n      commit('SET_ERROR', null);\r\n      \r\n      const token = rootState.auth.token;\r\n      const response = await api.publishCourse({ token, courseId });\r\n      \r\n      if (response.success) {\r\n        commit('UPDATE_COURSE_STATUS', { courseId, status: 'active' });\r\n        commit('SET_LOADING', false);\r\n        return { success: true, data: response.data };\r\n      }\r\n      \r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', '发布课程失败');\r\n      return { success: false, message: '发布课程失败' };\r\n    } catch (error) {\r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', error.message || '发布课程失败');\r\n      return { success: false, message: error.message || '发布课程失败' };\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 评价课程\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Object} params - 请求参数\r\n   * @param {string} params.courseId - 课程ID\r\n   * @param {Object} params.reviewData - 评价数据\r\n   * @returns {Promise<Object>} 评价结果\r\n   */\r\n  async reviewCourse({ commit, rootState }, { courseId, reviewData }) {\r\n    try {\r\n      commit('SET_LOADING', true);\r\n      commit('SET_ERROR', null);\r\n      \r\n      const token = rootState.auth.token;\r\n      const response = await api.reviewCourse({ token, courseId, reviewData });\r\n      \r\n      if (response.success) {\r\n        commit('ADD_COURSE_REVIEW', response.data);\r\n        commit('SET_LOADING', false);\r\n        return { success: true, data: response.data };\r\n      }\r\n      \r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', '评价课程失败');\r\n      return { success: false, message: '评价课程失败' };\r\n    } catch (error) {\r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', error.message || '评价课程失败');\r\n      return { success: false, message: error.message || '评价课程失败' };\r\n    }\r\n  }\r\n};\r\n\r\n// Getters\r\nconst getters = {\r\n  /**\r\n   * @description 获取教师课程列表\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {Array} 教师课程列表\r\n   */\r\n  teacherCourses: state => state.teacherCourses,\r\n  \r\n  /**\r\n   * @description 获取学生课程列表\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {Array} 学生课程列表\r\n   */\r\n  studentCourses: state => state.studentCourses,\r\n  \r\n  /**\r\n   * @description 获取当前课程\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {Object|null} 当前课程\r\n   */\r\n  currentCourse: state => state.currentCourse,\r\n  \r\n  /**\r\n   * @description 获取教师草稿课程\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {Array} 草稿课程列表\r\n   */\r\n  draftCourses: state => state.teacherCourses.filter(course => course.status === 'draft'),\r\n  \r\n  /**\r\n   * @description 获取教师已发布课程\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {Array} 已发布课程列表\r\n   */\r\n  activeCourses: state => state.teacherCourses.filter(course => course.status === 'active'),\r\n  \r\n  /**\r\n   * @description 获取教师课程总数\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {number} 教师课程总数\r\n   */\r\n  teacherCoursesCount: state => state.teacherCourses.length,\r\n  \r\n  /**\r\n   * @description 获取学生课程总数\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {number} 学生课程总数\r\n   */\r\n  studentCoursesCount: state => state.studentCourses.length,\r\n  \r\n  /**\r\n   * @description 获取教师草稿课程数量\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {number} 草稿课程数量\r\n   */\r\n  draftCoursesCount: state => state.teacherCourses.filter(course => course.status === 'draft').length,\r\n  \r\n  /**\r\n   * @description 获取教师发布课程数量\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {number} 发布课程数量\r\n   */\r\n  activeCoursesCount: state => state.teacherCourses.filter(course => course.status === 'active').length,\r\n  \r\n  /**\r\n   * @description 获取教师学生总数\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {number} 学生总数\r\n   */\r\n  totalStudents: state => state.teacherCourses.reduce((sum, course) => sum + (course.students || 0), 0),\r\n  \r\n  /**\r\n   * @description 获取教师平均评分\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {number} 平均评分\r\n   */\r\n  averageRating: state => {\r\n    const courses = state.teacherCourses.filter(course => course.rating > 0);\r\n    if (courses.length === 0) return 0;\r\n    return courses.reduce((sum, course) => sum + course.rating, 0) / courses.length;\r\n  },\r\n  \r\n  /**\r\n   * @description 获取是否加载中\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {boolean} 是否加载中\r\n   */\r\n  isLoading: state => state.loading,\r\n  \r\n  /**\r\n   * @description 获取错误信息\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {string|Object|null} 错误信息\r\n   */\r\n  error: state => state.error\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  mutations,\r\n  actions,\r\n  getters\r\n}; "],"names":["course","state"],"mappings":"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"}