{"version":3,"file":"message.js","sources":["store/modules/common/message.js"],"sourcesContent":["/**\r\n * @description 消息通知模块 - 处理系统消息、通知和用户间消息\r\n */\r\nimport { services } from '../../services';\r\n\r\n// 初始状态\r\nconst state = {\r\n  notifications: [],\r\n  messages: [],\r\n  unreadNotificationCount: 0,\r\n  unreadMessageCount: 0,\r\n  notificationsLoading: false,\r\n  messagesLoading: false,\r\n  error: null\r\n};\r\n\r\n// Getters\r\nconst getters = {\r\n  notifications: state => state.notifications,\r\n  messages: state => state.messages,\r\n  unreadNotificationCount: state => state.unreadNotificationCount,\r\n  unreadMessageCount: state => state.unreadMessageCount,\r\n  hasUnreadNotifications: state => state.unreadNotificationCount > 0,\r\n  hasUnreadMessages: state => state.unreadMessageCount > 0,\r\n  notificationsLoading: state => state.notificationsLoading,\r\n  messagesLoading: state => state.messagesLoading,\r\n  error: state => state.error\r\n};\r\n\r\n// 引入常量类型\r\nconst FETCH_NOTIFICATIONS_REQUEST = 'FETCH_NOTIFICATIONS_REQUEST';\r\nconst FETCH_NOTIFICATIONS_SUCCESS = 'FETCH_NOTIFICATIONS_SUCCESS';\r\nconst FETCH_NOTIFICATIONS_FAILURE = 'FETCH_NOTIFICATIONS_FAILURE';\r\nconst FETCH_MESSAGES_REQUEST = 'FETCH_MESSAGES_REQUEST';\r\nconst FETCH_MESSAGES_SUCCESS = 'FETCH_MESSAGES_SUCCESS';\r\nconst FETCH_MESSAGES_FAILURE = 'FETCH_MESSAGES_FAILURE';\r\nconst MARK_NOTIFICATION_READ = 'MARK_NOTIFICATION_READ';\r\nconst MARK_MESSAGE_READ = 'MARK_MESSAGE_READ';\r\nconst ADD_NOTIFICATION = 'ADD_NOTIFICATION';\r\nconst ADD_MESSAGE = 'ADD_MESSAGE';\r\n\r\n// Mutations\r\nconst mutations = {\r\n  [FETCH_NOTIFICATIONS_REQUEST](state) {\r\n    state.notificationsLoading = true;\r\n    state.error = null;\r\n  },\r\n  [FETCH_NOTIFICATIONS_SUCCESS](state, { notifications, unreadCount }) {\r\n    state.notifications = notifications;\r\n    state.unreadNotificationCount = unreadCount;\r\n    state.notificationsLoading = false;\r\n  },\r\n  [FETCH_NOTIFICATIONS_FAILURE](state, error) {\r\n    state.notificationsLoading = false;\r\n    state.error = error;\r\n  },\r\n  [FETCH_MESSAGES_REQUEST](state) {\r\n    state.messagesLoading = true;\r\n    state.error = null;\r\n  },\r\n  [FETCH_MESSAGES_SUCCESS](state, { messages, unreadCount }) {\r\n    state.messages = messages;\r\n    state.unreadMessageCount = unreadCount;\r\n    state.messagesLoading = false;\r\n  },\r\n  [FETCH_MESSAGES_FAILURE](state, error) {\r\n    state.messagesLoading = false;\r\n    state.error = error;\r\n  },\r\n  [MARK_NOTIFICATION_READ](state, notificationId) {\r\n    const notification = state.notifications.find(n => n.id === notificationId);\r\n    if (notification && !notification.read) {\r\n      notification.read = true;\r\n      state.unreadNotificationCount = Math.max(0, state.unreadNotificationCount - 1);\r\n    }\r\n  },\r\n  [MARK_MESSAGE_READ](state, messageId) {\r\n    const message = state.messages.find(m => m.id === messageId);\r\n    if (message && !message.read) {\r\n      message.read = true;\r\n      state.unreadMessageCount = Math.max(0, state.unreadMessageCount - 1);\r\n    }\r\n  },\r\n  [ADD_NOTIFICATION](state, notification) {\r\n    state.notifications.unshift(notification);\r\n    if (!notification.read) {\r\n      state.unreadNotificationCount++;\r\n    }\r\n  },\r\n  [ADD_MESSAGE](state, message) {\r\n    state.messages.unshift(message);\r\n    if (!message.read) {\r\n      state.unreadMessageCount++;\r\n    }\r\n  }\r\n};\r\n\r\n// Actions\r\nconst actions = {\r\n  /**\r\n   * @description 获取系统通知\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Object} params - 查询参数\r\n   * @returns {Promise<Object>} 通知列表\r\n   */\r\n  async fetchNotifications({ commit }, params = {}) {\r\n    commit(FETCH_NOTIFICATIONS_REQUEST);\r\n    \r\n    try {\r\n      const response = await services.common.getNotifications(params);\r\n      const { notifications, unreadCount } = response.data;\r\n      commit(FETCH_NOTIFICATIONS_SUCCESS, { notifications, unreadCount });\r\n      return response.data;\r\n    } catch (error) {\r\n      commit(FETCH_NOTIFICATIONS_FAILURE, error.response?.data?.message || '获取通知失败');\r\n      return Promise.reject(error);\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 获取用户消息\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Object} params - 查询参数\r\n   * @returns {Promise<Object>} 消息列表\r\n   */\r\n  async fetchMessages({ commit }, params = {}) {\r\n    commit(FETCH_MESSAGES_REQUEST);\r\n    \r\n    try {\r\n      const response = await services.common.getMessages(params);\r\n      const { messages, unreadCount } = response.data;\r\n      commit(FETCH_MESSAGES_SUCCESS, { messages, unreadCount });\r\n      return response.data;\r\n    } catch (error) {\r\n      commit(FETCH_MESSAGES_FAILURE, error.response?.data?.message || '获取消息失败');\r\n      return Promise.reject(error);\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 标记通知为已读\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {string} notificationId - 通知ID\r\n   * @returns {Promise<Object>} 操作结果\r\n   */\r\n  async markNotificationAsRead({ commit }, notificationId) {\r\n    try {\r\n      await services.common.markNotificationAsRead(notificationId);\r\n      commit(MARK_NOTIFICATION_READ, notificationId);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return Promise.reject(error);\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 发送消息\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Object} messageData - 消息数据\r\n   * @returns {Promise<Object>} 操作结果\r\n   */\r\n  async sendMessage({ commit }, messageData) {\r\n    try {\r\n      const response = await services.common.sendMessage(messageData);\r\n      // 可以选择在这里添加消息到本地状态\r\n      return response.data;\r\n    } catch (error) {\r\n      return Promise.reject(error);\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 添加新通知（通常由WebSocket触发）\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Object} notification - 通知对象\r\n   */\r\n  addNotification({ commit }, notification) {\r\n    commit(ADD_NOTIFICATION, notification);\r\n  },\r\n  \r\n  /**\r\n   * @description 添加新消息（通常由WebSocket触发）\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Object} message - 消息对象\r\n   */\r\n  addMessage({ commit }, message) {\r\n    commit(ADD_MESSAGE, message);\r\n  }\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations\r\n}; "],"names":["state","message","services"],"mappings":"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"}