{"version":3,"file":"actions.js","sources":["store/modules/ai-chat/actions.js"],"sourcesContent":["import { internalState } from './state';\r\nimport * as aiChatApi from '../../services/ai-chat.api';\r\n\r\n/**\r\n * @description 设置加载状态\r\n * @param {boolean} status - 加载状态\r\n * @private\r\n */\r\nconst _setLoading = (status) => {\r\n  internalState.isLoading = status;\r\n};\r\n\r\n/**\r\n * @description 设置测试状态\r\n * @param {boolean} status - 测试状态\r\n * @private\r\n */\r\nconst _setTesting = (status) => {\r\n  internalState.isTesting = status;\r\n};\r\n\r\n/**\r\n * @description 设置测试结果\r\n * @param {string|null} result - 测试结果\r\n * @private\r\n */\r\nconst _setTestResult = (result) => {\r\n  internalState.testResult = result;\r\n};\r\n\r\n/**\r\n * @description 设置错误信息\r\n * @param {Object|null} error - 错误信息\r\n * @private\r\n */\r\nconst _setError = (error) => {\r\n  internalState.error = error;\r\n};\r\n\r\n/**\r\n * @description 测试AI问答\r\n * @param {string} question - 问题内容\r\n * @returns {Promise<Object>} 测试结果\r\n */\r\nexport const testAIQA = async (question) => {\r\n  try {\r\n    _setLoading(true);\r\n    _setTesting(true);\r\n    _setError(null);\r\n    \r\n    const result = await aiChatApi.testAIQA(question);\r\n    \r\n    if (result.success) {\r\n      _setTestResult(result.data);\r\n    } else {\r\n      _setError(result.error || { message: '获取AI回复失败' });\r\n    }\r\n    \r\n    return result;\r\n  } catch (error) {\r\n    console.error('AI问答测试失败:', error);\r\n    _setError(error || { message: 'AI问答测试过程发生异常' });\r\n    return { success: false, error };\r\n  } finally {\r\n    _setLoading(false);\r\n    _setTesting(false);\r\n  }\r\n};\r\n\r\n/**\r\n * @description 发送聊天消息\r\n * @param {string} message - 消息内容\r\n * @param {Object} [options] - 可选配置\r\n * @param {boolean} [options.stream=false] - 是否使用流式响应\r\n * @param {Function} [options.onChunk] - 处理流式数据块的回调\r\n * @param {Object} [options.context] - 上下文信息\r\n * @returns {Promise<Object>} 发送结果\r\n */\r\nexport const sendChatMessage = async (message, options = {}) => {\r\n  try {\r\n    _setLoading(true);\r\n    _setError(null);\r\n    \r\n    // 默认配置\r\n    const defaultOptions = {\r\n      stream: false,\r\n      onChunk: null,\r\n      context: {}\r\n    };\r\n    \r\n    // 合并选项\r\n    const mergedOptions = { ...defaultOptions, ...options };\r\n    \r\n    let result;\r\n    \r\n    if (mergedOptions.stream && typeof mergedOptions.onChunk === 'function') {\r\n      // 使用流式响应\r\n      result = await aiChatApi.sendChatMessageStream({\r\n        message,\r\n        context: mergedOptions.context\r\n      }, mergedOptions.onChunk);\r\n    } else {\r\n      // 使用普通响应\r\n      result = await aiChatApi.sendMessage(message);\r\n    }\r\n    \r\n    return result;\r\n  } catch (error) {\r\n    console.error('发送聊天消息失败:', error);\r\n    _setError(error || { message: '发送聊天消息过程发生异常' });\r\n    return { success: false, error };\r\n  } finally {\r\n    _setLoading(false);\r\n  }\r\n}; "],"names":["internalState","aiChatApi.testAIQA","uni","aiChatApi.sendChatMessageStream","aiChatApi.sendMessage"],"mappings":";;;;AAQA,MAAM,cAAc,CAAC,WAAW;AAC9BA,6BAAa,cAAC,YAAY;AAC5B;AAOA,MAAM,cAAc,CAAC,WAAW;AAC9BA,6BAAa,cAAC,YAAY;AAC5B;AAOA,MAAM,iBAAiB,CAAC,WAAW;AACjCA,6BAAa,cAAC,aAAa;AAC7B;AAOA,MAAM,YAAY,CAAC,UAAU;AAC3BA,6BAAa,cAAC,QAAQ;AACxB;AAOO,MAAM,WAAW,OAAO,aAAa;AAC1C,MAAI;AACF,gBAAY,IAAI;AAChB,gBAAY,IAAI;AAChB,cAAU,IAAI;AAEd,UAAM,SAAS,MAAMC,mCAAmB,QAAQ;AAEhD,QAAI,OAAO,SAAS;AAClB,qBAAe,OAAO,IAAI;AAAA,IAChC,OAAW;AACL,gBAAU,OAAO,SAAS,EAAE,SAAS,WAAY,CAAA;AAAA,IAClD;AAED,WAAO;AAAA,EACR,SAAQ,OAAO;AACdC,kBAAc,MAAA,MAAA,SAAA,0CAAA,aAAa,KAAK;AAChC,cAAU,SAAS,EAAE,SAAS,eAAgB,CAAA;AAC9C,WAAO,EAAE,SAAS,OAAO;EAC7B,UAAY;AACR,gBAAY,KAAK;AACjB,gBAAY,KAAK;AAAA,EAClB;AACH;AAWO,MAAM,kBAAkB,OAAO,SAAS,UAAU,OAAO;AAC9D,MAAI;AACF,gBAAY,IAAI;AAChB,cAAU,IAAI;AAGd,UAAM,iBAAiB;AAAA,MACrB,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,SAAS,CAAE;AAAA,IACjB;AAGI,UAAM,gBAAgB,EAAE,GAAG,gBAAgB,GAAG,QAAO;AAErD,QAAI;AAEJ,QAAI,cAAc,UAAU,OAAO,cAAc,YAAY,YAAY;AAEvE,eAAS,MAAMC,0BAAAA,sBAAgC;AAAA,QAC7C;AAAA,QACA,SAAS,cAAc;AAAA,MAC/B,GAAS,cAAc,OAAO;AAAA,IAC9B,OAAW;AAEL,eAAS,MAAMC,sCAAsB,OAAO;AAAA,IAC7C;AAED,WAAO;AAAA,EACR,SAAQ,OAAO;AACdF,kBAAc,MAAA,MAAA,SAAA,2CAAA,aAAa,KAAK;AAChC,cAAU,SAAS,EAAE,SAAS,eAAgB,CAAA;AAC9C,WAAO,EAAE,SAAS,OAAO;EAC7B,UAAY;AACR,gBAAY,KAAK;AAAA,EAClB;AACH;;;;;;;"}