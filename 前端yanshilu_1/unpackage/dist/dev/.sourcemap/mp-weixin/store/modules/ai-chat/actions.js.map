{"version":3,"file":"actions.js","sources":["store/modules/ai-chat/actions.js"],"sourcesContent":["/**\r\n * @description AI聊天模块的actions\r\n */\r\n\r\nimport {\r\n  getConversations,\r\n  getMessages,\r\n  sendMessage,\r\n  createConversation,\r\n  deleteConversation\r\n} from '../../services/ai-chat.api';\r\n\r\nexport default {\r\n  /**\r\n   * @description 获取会话列表\r\n   * @param {Object} context - Vuex上下文\r\n   * @returns {Promise<Object>} 操作结果\r\n   */\r\n  async fetchConversations({ commit }) {\r\n    try {\r\n      commit('SET_LOADING', { conversations: true });\r\n      commit('CLEAR_ERROR');\r\n      \r\n      const response = await getConversations();\r\n      \r\n      if (response.success) {\r\n        commit('SET_CONVERSATIONS', response.data);\r\n        commit('SET_LOADING', { conversations: false });\r\n        return { success: true, data: response.data };\r\n      } else {\r\n        commit('SET_ERROR', response.message || '获取会话列表失败');\r\n        commit('SET_LOADING', { conversations: false });\r\n        return { success: false, message: response.message };\r\n      }\r\n    } catch (error) {\r\n      console.error('获取会话列表失败:', error);\r\n      commit('SET_ERROR', error.message || '获取会话列表过程中发生错误');\r\n      commit('SET_LOADING', { conversations: false });\r\n      return { success: false, message: error.message };\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 获取特定会话的消息\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {string} conversationId - 会话ID\r\n   * @returns {Promise<Object>} 操作结果\r\n   */\r\n  async fetchMessages({ commit }, conversationId) {\r\n    try {\r\n      commit('SET_LOADING', { messages: true });\r\n      commit('CLEAR_ERROR');\r\n      \r\n      // 设置当前会话ID\r\n      commit('SET_CURRENT_CONVERSATION', conversationId);\r\n      \r\n      const response = await getMessages(conversationId);\r\n      \r\n      if (response.success) {\r\n        commit('SET_MESSAGES', response.data.messages);\r\n        \r\n        // 更新会话标题\r\n        const { title } = response.data;\r\n        commit('UPDATE_CONVERSATION', { id: conversationId, title });\r\n        \r\n        commit('SET_LOADING', { messages: false });\r\n        return { success: true, data: response.data };\r\n      } else {\r\n        commit('SET_ERROR', response.message || '获取消息失败');\r\n        commit('SET_LOADING', { messages: false });\r\n        return { success: false, message: response.message };\r\n      }\r\n    } catch (error) {\r\n      console.error('获取消息失败:', error);\r\n      commit('SET_ERROR', error.message || '获取消息过程中发生错误');\r\n      commit('SET_LOADING', { messages: false });\r\n      return { success: false, message: error.message };\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 发送消息\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Object} messageData - 消息数据\r\n   * @param {string} messageData.content - 消息内容\r\n   * @returns {Promise<Object>} 操作结果\r\n   */\r\n  async sendMessage({ commit, state }, { content }) {\r\n    try {\r\n      // 确保有当前会话\r\n      if (!state.currentConversationId) {\r\n        // 如果没有当前会话，创建一个新会话\r\n        const createResult = await this.dispatch('ai-chat/createConversation');\r\n        if (!createResult.success) {\r\n          return createResult;\r\n        }\r\n      }\r\n      \r\n      commit('SET_LOADING', { sending: true });\r\n      commit('CLEAR_ERROR');\r\n      \r\n      // 先添加用户消息\r\n      const userMessage = {\r\n        id: `m${Date.now()}-user`,\r\n        role: 'user',\r\n        content,\r\n        timestamp: Date.now()\r\n      };\r\n      commit('ADD_MESSAGE', userMessage);\r\n      \r\n      // 发送到API\r\n      const response = await sendMessage({\r\n        conversationId: state.currentConversationId,\r\n        content\r\n      });\r\n      \r\n      if (response.success) {\r\n        // 添加AI回复\r\n        commit('ADD_MESSAGE', response.data);\r\n        commit('SET_LOADING', { sending: false });\r\n        return { success: true, data: response.data };\r\n      } else {\r\n        commit('SET_ERROR', response.message || '发送消息失败');\r\n        commit('SET_LOADING', { sending: false });\r\n        return { success: false, message: response.message };\r\n      }\r\n    } catch (error) {\r\n      console.error('发送消息失败:', error);\r\n      commit('SET_ERROR', error.message || '发送消息过程中发生错误');\r\n      commit('SET_LOADING', { sending: false });\r\n      return { success: false, message: error.message };\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 创建新会话\r\n   * @param {Object} context - Vuex上下文\r\n   * @returns {Promise<Object>} 操作结果\r\n   */\r\n  async createConversation({ commit }) {\r\n    try {\r\n      commit('SET_LOADING', { conversations: true });\r\n      commit('CLEAR_ERROR');\r\n      \r\n      const response = await createConversation();\r\n      \r\n      if (response.success) {\r\n        commit('ADD_CONVERSATION', response.data);\r\n        commit('SET_CURRENT_CONVERSATION', response.data.id);\r\n        commit('SET_MESSAGES', []);\r\n        commit('SET_LOADING', { conversations: false });\r\n        return { success: true, data: response.data };\r\n      } else {\r\n        commit('SET_ERROR', response.message || '创建会话失败');\r\n        commit('SET_LOADING', { conversations: false });\r\n        return { success: false, message: response.message };\r\n      }\r\n    } catch (error) {\r\n      console.error('创建会话失败:', error);\r\n      commit('SET_ERROR', error.message || '创建会话过程中发生错误');\r\n      commit('SET_LOADING', { conversations: false });\r\n      return { success: false, message: error.message };\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 删除会话\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {string} conversationId - 会话ID\r\n   * @returns {Promise<Object>} 操作结果\r\n   */\r\n  async deleteConversation({ commit }, conversationId) {\r\n    try {\r\n      commit('SET_LOADING', { conversations: true });\r\n      commit('CLEAR_ERROR');\r\n      \r\n      const response = await deleteConversation(conversationId);\r\n      \r\n      if (response.success) {\r\n        commit('DELETE_CONVERSATION', conversationId);\r\n        commit('SET_LOADING', { conversations: false });\r\n        return { success: true, message: response.message };\r\n      } else {\r\n        commit('SET_ERROR', response.message || '删除会话失败');\r\n        commit('SET_LOADING', { conversations: false });\r\n        return { success: false, message: response.message };\r\n      }\r\n    } catch (error) {\r\n      console.error('删除会话失败:', error);\r\n      commit('SET_ERROR', error.message || '删除会话过程中发生错误');\r\n      commit('SET_LOADING', { conversations: false });\r\n      return { success: false, message: error.message };\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 更新聊天配置\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Object} config - 聊天配置\r\n   * @returns {Object} 操作结果\r\n   */\r\n  updateConfig({ commit }, config) {\r\n    try {\r\n      commit('UPDATE_CONFIG', config);\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('更新配置失败:', error);\r\n      return { success: false, message: error.message };\r\n    }\r\n  }\r\n};"],"names":["getConversations","uni","getMessages","sendMessage","createConversation","deleteConversation"],"mappings":"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"}