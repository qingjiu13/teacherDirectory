{"version":3,"file":"user.js","sources":["store/modules/common/user.js"],"sourcesContent":["/**\r\n * @description 用户模块 - 处理用户基本信息\r\n */\r\nimport { services } from '../../services';\r\n\r\n/**\r\n * @description 检查是否使用模拟数据\r\n * @returns {Boolean} 是否使用模拟数据\r\n */\r\nconst isUsingMockData = () => {\r\n  return uni.getStorageSync('use_mock_api') === 'true' || process.env.NODE_ENV === 'development';\r\n};\r\n\r\n// 初始状态\r\nconst state = {\r\n  profile: {\r\n    avatar: '',         // 用户头像\r\n    nickname: '',       // 昵称\r\n    tags: [],           // 标签\r\n    certTag: '',        // 教师认证标签\r\n    otherTags: [],      // 教师其他标签\r\n    introduction: '',   // 个人介绍\r\n    gender: '',         // 性别\r\n    phone: '',          // 手机号\r\n    wechat: '',         // 微信号\r\n    password: '未设置'    // 密码状态\r\n  },\r\n  role: null,           // 用户角色\r\n  loading: false,\r\n  error: null,\r\n  updateLoading: false,\r\n  updateError: null,\r\n  mockMode: isUsingMockData()\r\n};\r\n\r\n// Getters\r\nconst getters = {\r\n  profile: state => state.profile,\r\n  isProfileLoaded: state => !!state.profile.nickname,\r\n  loading: state => state.loading,\r\n  error: state => state.error,\r\n  updateLoading: state => state.updateLoading,\r\n  updateError: state => state.updateError,\r\n  isMockMode: state => state.mockMode || isUsingMockData(),\r\n  \r\n  // 基本信息getters\r\n  avatar: state => state.profile.avatar || '',\r\n  nickname: state => state.profile.nickname || '',\r\n  tags: state => state.profile.tags || [],\r\n  introduction: state => state.profile.introduction || '',\r\n  gender: state => state.profile.gender || '',\r\n  phone: state => state.profile.phone || '',\r\n  wechat: state => state.profile.wechat || '',\r\n  password: state => state.profile.password || '未设置',\r\n  \r\n  // 标签相关getters\r\n  teacherCertTag: (state, getters) => {\r\n    if (getters.isTeacher) {\r\n      return state.profile.certTag || \r\n             (state.profile.tags && state.profile.tags.length > 0 ? state.profile.tags[0] : '');\r\n    }\r\n    return '';\r\n  },\r\n  \r\n  teacherOtherTags: (state, getters) => {\r\n    if (getters.isTeacher) {\r\n      return state.profile.otherTags && state.profile.otherTags.length > 0 ? \r\n             state.profile.otherTags : \r\n             (state.profile.tags && state.profile.tags.length > 1 ? state.profile.tags.slice(1) : []);\r\n    }\r\n    return [];\r\n  },\r\n  \r\n  studentTags: (state, getters) => {\r\n    if (getters.isStudent && state.profile.tags) {\r\n      return state.profile.tags;\r\n    }\r\n    return [];\r\n  },\r\n  \r\n  // 角色相关getters\r\n  isTeacher: (state, getters, rootState) => {\r\n    return state.role === 'teacher' || rootState.auth?.role === 'teacher';\r\n  },\r\n  isStudent: (state, getters, rootState) => {\r\n    return state.role === 'student' || rootState.auth?.role === 'student';\r\n  },\r\n  userRole: (state, getters, rootState) => state.role || rootState.auth?.role || ''\r\n};\r\n\r\n// 常量类型\r\nconst FETCH_PROFILE_REQUEST = 'FETCH_PROFILE_REQUEST';\r\nconst FETCH_PROFILE_SUCCESS = 'FETCH_PROFILE_SUCCESS';\r\nconst FETCH_PROFILE_FAILURE = 'FETCH_PROFILE_FAILURE';\r\nconst UPDATE_PROFILE_REQUEST = 'UPDATE_PROFILE_REQUEST';\r\nconst UPDATE_PROFILE_SUCCESS = 'UPDATE_PROFILE_SUCCESS';\r\nconst UPDATE_PROFILE_FAILURE = 'UPDATE_PROFILE_FAILURE';\r\nconst CLEAR_PROFILE = 'CLEAR_PROFILE';\r\nconst SET_USER_ROLE = 'SET_USER_ROLE';\r\n\r\n// Mutations\r\nconst mutations = {\r\n  [FETCH_PROFILE_REQUEST](state) {\r\n    state.loading = true;\r\n    state.error = null;\r\n  },\r\n  [FETCH_PROFILE_SUCCESS](state, profile) {\r\n    let certTag = '';\r\n    let otherTags = [];\r\n    \r\n    if (state.role === 'teacher' && profile.tags && profile.tags.length > 0) {\r\n      certTag = profile.certTag || profile.tags[0];\r\n      otherTags = profile.otherTags || (profile.tags.length > 1 ? profile.tags.slice(1) : []);\r\n    }\r\n    \r\n    state.profile = {\r\n      ...state.profile,\r\n      avatar: profile.avatar || state.profile.avatar,\r\n      nickname: profile.nickname || profile.name || state.profile.nickname,\r\n      tags: profile.tags || state.profile.tags,\r\n      certTag: certTag,\r\n      otherTags: otherTags,\r\n      introduction: profile.introduction || state.profile.introduction,\r\n      gender: profile.gender || state.profile.gender,\r\n      phone: profile.phone || state.profile.phone,\r\n      wechat: profile.wechat || state.profile.wechat,\r\n      password: profile.hasPassword ? '已设置' : '未设置'\r\n    };\r\n    state.loading = false;\r\n    state.error = null;\r\n  },\r\n  [FETCH_PROFILE_FAILURE](state, error) {\r\n    state.loading = false;\r\n    state.error = error;\r\n  },\r\n  [UPDATE_PROFILE_REQUEST](state) {\r\n    state.updateLoading = true;\r\n    state.updateError = null;\r\n  },\r\n  [UPDATE_PROFILE_SUCCESS](state, profile) {\r\n    state.profile = { \r\n      ...state.profile, \r\n      ...profile,\r\n      password: profile.hasPassword ? '已设置' : '未设置'\r\n    };\r\n    state.updateLoading = false;\r\n    state.updateError = null;\r\n  },\r\n  [UPDATE_PROFILE_FAILURE](state, error) {\r\n    state.updateLoading = false;\r\n    state.updateError = error;\r\n  },\r\n  [CLEAR_PROFILE](state) {\r\n    state.profile = {\r\n      avatar: '',\r\n      nickname: '',\r\n      tags: [],\r\n      introduction: '',\r\n      gender: '',\r\n      phone: '',\r\n      wechat: '',\r\n      password: '未设置'\r\n    };\r\n    state.role = null;\r\n  },\r\n  [SET_USER_ROLE](state, role) {\r\n    state.role = role;\r\n  }\r\n};\r\n\r\n// 获取用户角色的辅助函数\r\nconst getUserRole = (state, rootState) => {\r\n  let role = uni.getStorageSync('userRole');\r\n  if (!role) {\r\n    role = rootState.auth?.role || 'student';\r\n  }\r\n  return role;\r\n};\r\n\r\n// Actions\r\nconst actions = {\r\n  /**\r\n   * @description 获取用户个人资料\r\n   * @param {Object} context - Vuex上下文\r\n   * @returns {Promise<Object>} 个人资料\r\n   */\r\n  async fetchProfile({ commit, rootState }) {\r\n    commit(FETCH_PROFILE_REQUEST);\r\n    \r\n    try {\r\n      const role = getUserRole(null, rootState);\r\n      commit(SET_USER_ROLE, role);\r\n      \r\n      const response = await services.user.getUserProfile(role);\r\n      commit(FETCH_PROFILE_SUCCESS, response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      commit(FETCH_PROFILE_FAILURE, error.response?.data?.message || '获取个人资料失败');\r\n      return Promise.reject(error);\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 更新用户个人资料\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Object} profileData - 个人资料数据\r\n   * @returns {Promise<Object>} 更新结果\r\n   */\r\n  async updateProfile({ commit, state, rootState }, profileData) {\r\n    commit(UPDATE_PROFILE_REQUEST);\r\n    \r\n    try {\r\n      const role = getUserRole(state, rootState);\r\n      commit(SET_USER_ROLE, role);\r\n      \r\n      const response = await services.user.updateUserProfile(role, profileData);\r\n      commit(UPDATE_PROFILE_SUCCESS, response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      commit(UPDATE_PROFILE_FAILURE, error.response?.data?.message || '更新个人资料失败');\r\n      return Promise.reject(error);\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 清除用户个人资料\r\n   * @param {Object} context - Vuex上下文\r\n   */\r\n  clearProfile({ commit }) {\r\n    commit(CLEAR_PROFILE);\r\n  },\r\n  \r\n  /**\r\n   * @description 设置密码\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Object} passwordData - 密码数据\r\n   * @returns {Promise<Object>} 设置结果\r\n   */\r\n  async setPassword({ commit, state, rootState }, passwordData) {\r\n    commit(UPDATE_PROFILE_REQUEST);\r\n    \r\n    try {\r\n      const role = getUserRole(state, rootState);\r\n      \r\n      const response = await services.user.setUserPassword(role, passwordData);\r\n      commit(UPDATE_PROFILE_SUCCESS, { hasPassword: true });\r\n      return response.data;\r\n    } catch (error) {\r\n      commit(UPDATE_PROFILE_FAILURE, error.response?.data?.message || '设置密码失败');\r\n      return Promise.reject(error);\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 切换用户角色\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {String} newRole - 新角色\r\n   * @returns {Promise<Object>} 切换结果\r\n   */\r\n  async switchRole({ commit, dispatch, rootState }, newRole) {\r\n    if (newRole !== 'teacher' && newRole !== 'student') {\r\n      return Promise.reject(new Error('无效的角色'));\r\n    }\r\n    \r\n    try {\r\n      const currentRole = getUserRole(null, rootState);\r\n      \r\n      const response = await services.user.switchUserRole(currentRole, newRole);\r\n      \r\n      uni.setStorageSync('userRole', newRole);\r\n      commit(SET_USER_ROLE, newRole);\r\n      \r\n      await dispatch('fetchProfile');\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      return Promise.reject(error);\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 更新教师认证标签\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {String} certTag - 认证标签\r\n   * @returns {Promise<Object>} 更新结果\r\n   */\r\n  async updateTeacherCertTag({ state, dispatch }, certTag) {\r\n    if (state.role !== 'teacher') {\r\n      return Promise.reject(new Error('只有教师可以设置认证标签'));\r\n    }\r\n    \r\n    try {\r\n      const profileData = {\r\n        certTag: certTag,\r\n        otherTags: state.profile.otherTags || \r\n                  (state.profile.tags && state.profile.tags.length > 1 ? \r\n                   state.profile.tags.slice(1) : [])\r\n      };\r\n      \r\n      return await dispatch('updateProfile', profileData);\r\n    } catch (error) {\r\n      return Promise.reject(error);\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 更新教师其他标签\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Array} otherTags - 其他标签数组\r\n   * @returns {Promise<Object>} 更新结果\r\n   */\r\n  async updateTeacherOtherTags({ state, dispatch }, otherTags) {\r\n    if (state.role !== 'teacher') {\r\n      return Promise.reject(new Error('只有教师可以设置其他标签'));\r\n    }\r\n    \r\n    try {\r\n      const profileData = {\r\n        certTag: state.profile.certTag || \r\n                (state.profile.tags && state.profile.tags.length > 0 ? \r\n                 state.profile.tags[0] : ''),\r\n        otherTags: otherTags\r\n      };\r\n      \r\n      return await dispatch('updateProfile', profileData);\r\n    } catch (error) {\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations\r\n}; "],"names":["uni","state","getters","services"],"mappings":"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"}