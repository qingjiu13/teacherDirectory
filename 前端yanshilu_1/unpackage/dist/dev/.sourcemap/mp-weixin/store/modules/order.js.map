{"version":3,"file":"order.js","sources":["store/modules/order.js"],"sourcesContent":["/**\r\n * @description 订单状态管理模块\r\n */\r\n\r\n// 模拟API请求\r\nconst api = {\r\n  /**\r\n   * @description 获取学生订单列表\r\n   * @param {Object} params - 请求参数\r\n   * @param {string} params.token - 用户令牌\r\n   * @param {string} params.status - 订单状态\r\n   * @returns {Promise<Object>} 订单列表\r\n   */\r\n  getStudentOrders(params) {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        const { status } = params;\r\n        let orders = [];\r\n        \r\n        switch(status) {\r\n          case 'pendingPayment':\r\n            orders = [\r\n              { id: 's1', title: '待付款订单1', price: 199, teacherName: '王老师', serviceName: '学术指导', createTime: Date.now() - 86400000 },\r\n              { id: 's2', title: '待付款订单2', price: 299, teacherName: '李老师', serviceName: '论文修改', createTime: Date.now() - 172800000 }\r\n            ];\r\n            break;\r\n          case 'pendingService':\r\n            orders = [\r\n              { id: 's3', title: '待服务订单1', price: 299, teacherName: '李老师', serviceName: '论文修改', createTime: Date.now() - 172800000 },\r\n              { id: 's4', title: '待服务订单2', price: 399, teacherName: '张老师', serviceName: '职业规划', createTime: Date.now() - 259200000 }\r\n            ];\r\n            break;\r\n          case 'completed':\r\n            orders = [\r\n              { id: 's5', title: '已完成订单1', price: 399, teacherName: '张老师', serviceName: '职业规划', createTime: Date.now() - 259200000, completeTime: Date.now() - 86400000 },\r\n              { id: 's6', title: '已完成订单2', price: 499, teacherName: '赵老师', serviceName: '简历指导', createTime: Date.now() - 345600000, completeTime: Date.now() - 172800000 }\r\n            ];\r\n            break;\r\n          case 'cancelled':\r\n            orders = [\r\n              { id: 's7', title: '已取消订单1', price: 499, teacherName: '赵老师', serviceName: '简历指导', createTime: Date.now() - 345600000, cancelTime: Date.now() - 172800000 },\r\n              { id: 's8', title: '已取消订单2', price: 599, teacherName: '钱老师', serviceName: '留学规划', createTime: Date.now() - 432000000, cancelTime: Date.now() - 259200000 }\r\n            ];\r\n            break;\r\n          default:\r\n            orders = [];\r\n        }\r\n        \r\n        resolve({\r\n          success: true,\r\n          data: orders\r\n        });\r\n      }, 500);\r\n    });\r\n  },\r\n  \r\n  /**\r\n   * @description 获取教师订单列表\r\n   * @param {Object} params - 请求参数\r\n   * @param {string} params.token - 用户令牌\r\n   * @param {string} params.status - 订单状态\r\n   * @returns {Promise<Object>} 订单列表\r\n   */\r\n  getTeacherOrders(params) {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        const { status } = params;\r\n        let orders = [];\r\n        \r\n        switch(status) {\r\n          case 'pendingService':\r\n            orders = [\r\n              { id: 't1', title: '待服务订单1', price: 199, studentName: '小明', serviceName: '学术指导', createTime: Date.now() - 86400000 },\r\n              { id: 't2', title: '待服务订单2', price: 299, studentName: '小红', serviceName: '论文修改', createTime: Date.now() - 172800000 }\r\n            ];\r\n            break;\r\n          case 'completed':\r\n            orders = [\r\n              { id: 't3', title: '已完成订单1', price: 299, studentName: '小红', serviceName: '论文修改', createTime: Date.now() - 172800000, completeTime: Date.now() - 86400000 },\r\n              { id: 't4', title: '已完成订单2', price: 399, studentName: '小张', serviceName: '职业规划', createTime: Date.now() - 259200000, completeTime: Date.now() - 172800000 }\r\n            ];\r\n            break;\r\n          case 'cancelled':\r\n            orders = [\r\n              { id: 't5', title: '已取消订单1', price: 399, studentName: '小张', serviceName: '职业规划', createTime: Date.now() - 259200000, cancelTime: Date.now() - 172800000 },\r\n              { id: 't6', title: '已取消订单2', price: 499, studentName: '小李', serviceName: '简历指导', createTime: Date.now() - 345600000, cancelTime: Date.now() - 259200000 }\r\n            ];\r\n            break;\r\n          default:\r\n            orders = [];\r\n        }\r\n        \r\n        resolve({\r\n          success: true,\r\n          data: orders\r\n        });\r\n      }, 500);\r\n    });\r\n  },\r\n  \r\n  /**\r\n   * @description 获取订单详情\r\n   * @param {Object} params - 请求参数\r\n   * @param {string} params.token - 用户令牌\r\n   * @param {string} params.orderId - 订单ID\r\n   * @returns {Promise<Object>} 订单详情\r\n   */\r\n  getOrderDetail(params) {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        const { orderId } = params;\r\n        \r\n        // 模拟订单详情数据\r\n        const orderDetail = {\r\n          id: orderId,\r\n          title: `订单${orderId}`,\r\n          price: 299,\r\n          teacherName: '李老师',\r\n          studentName: '小明',\r\n          serviceName: '论文修改',\r\n          createTime: Date.now() - 172800000,\r\n          payTime: Date.now() - 86400000,\r\n          status: 'pendingService',\r\n          description: '提供论文修改和指导服务',\r\n          comments: '请帮忙审核一下论文格式',\r\n          serviceTime: [\r\n            { date: '2023-06-15', time: '14:00-16:00' },\r\n            { date: '2023-06-18', time: '10:00-12:00' }\r\n          ]\r\n        };\r\n        \r\n        resolve({\r\n          success: true,\r\n          data: orderDetail\r\n        });\r\n      }, 300);\r\n    });\r\n  },\r\n  \r\n  /**\r\n   * @description 创建订单\r\n   * @param {Object} params - 请求参数\r\n   * @param {string} params.token - 用户令牌\r\n   * @param {Object} params.orderData - 订单数据\r\n   * @returns {Promise<Object>} 创建结果\r\n   */\r\n  createOrder(params) {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        const { orderData } = params;\r\n        \r\n        resolve({\r\n          success: true,\r\n          data: {\r\n            id: `new_${Date.now()}`,\r\n            ...orderData,\r\n            createTime: Date.now(),\r\n            status: 'pendingPayment'\r\n          }\r\n        });\r\n      }, 600);\r\n    });\r\n  },\r\n  \r\n  /**\r\n   * @description 支付订单\r\n   * @param {Object} params - 请求参数\r\n   * @param {string} params.token - 用户令牌\r\n   * @param {string} params.orderId - 订单ID\r\n   * @returns {Promise<Object>} 支付结果\r\n   */\r\n  payOrder(params) {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve({\r\n          success: true,\r\n          data: {\r\n            id: params.orderId,\r\n            payTime: Date.now(),\r\n            status: 'pendingService'\r\n          }\r\n        });\r\n      }, 800);\r\n    });\r\n  },\r\n  \r\n  /**\r\n   * @description 取消订单\r\n   * @param {Object} params - 请求参数\r\n   * @param {string} params.token - 用户令牌\r\n   * @param {string} params.orderId - 订单ID\r\n   * @param {string} params.reason - 取消原因\r\n   * @returns {Promise<Object>} 取消结果\r\n   */\r\n  cancelOrder(params) {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve({\r\n          success: true,\r\n          data: {\r\n            id: params.orderId,\r\n            cancelTime: Date.now(),\r\n            status: 'cancelled',\r\n            cancelReason: params.reason || '用户取消'\r\n          }\r\n        });\r\n      }, 500);\r\n    });\r\n  },\r\n  \r\n  /**\r\n   * @description 确认完成订单\r\n   * @param {Object} params - 请求参数\r\n   * @param {string} params.token - 用户令牌\r\n   * @param {string} params.orderId - 订单ID\r\n   * @returns {Promise<Object>} 确认结果\r\n   */\r\n  completeOrder(params) {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve({\r\n          success: true,\r\n          data: {\r\n            id: params.orderId,\r\n            completeTime: Date.now(),\r\n            status: 'completed'\r\n          }\r\n        });\r\n      }, 500);\r\n    });\r\n  },\r\n  \r\n  /**\r\n   * @description 评价订单\r\n   * @param {Object} params - 请求参数\r\n   * @param {string} params.token - 用户令牌\r\n   * @param {string} params.orderId - 订单ID\r\n   * @param {Object} params.reviewData - 评价数据\r\n   * @returns {Promise<Object>} 评价结果\r\n   */\r\n  reviewOrder(params) {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve({\r\n          success: true,\r\n          data: {\r\n            id: params.orderId,\r\n            reviewTime: Date.now(),\r\n            rating: params.reviewData.rating,\r\n            comment: params.reviewData.comment\r\n          }\r\n        });\r\n      }, 500);\r\n    });\r\n  }\r\n};\r\n\r\n// 初始状态\r\nconst state = {\r\n  studentOrders: {\r\n    pendingPayment: [],\r\n    pendingService: [],\r\n    completed: [],\r\n    cancelled: []\r\n  },\r\n  teacherOrders: {\r\n    pendingService: [],\r\n    completed: [],\r\n    cancelled: []\r\n  },\r\n  currentOrder: null,\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\n// Mutations\r\nconst mutations = {\r\n  /**\r\n   * @description 设置学生订单\r\n   * @param {Object} state - Vuex状态\r\n   * @param {Object} payload - 载荷\r\n   * @param {string} payload.status - 订单状态\r\n   * @param {Array} payload.orders - 订单列表\r\n   */\r\n  SET_STUDENT_ORDERS(state, { status, orders }) {\r\n    state.studentOrders[status] = orders;\r\n  },\r\n  \r\n  /**\r\n   * @description 设置教师订单\r\n   * @param {Object} state - Vuex状态\r\n   * @param {Object} payload - 载荷\r\n   * @param {string} payload.status - 订单状态\r\n   * @param {Array} payload.orders - 订单列表\r\n   */\r\n  SET_TEACHER_ORDERS(state, { status, orders }) {\r\n    state.teacherOrders[status] = orders;\r\n  },\r\n  \r\n  /**\r\n   * @description 设置当前订单\r\n   * @param {Object} state - Vuex状态\r\n   * @param {Object} order - 订单详情\r\n   */\r\n  SET_CURRENT_ORDER(state, order) {\r\n    state.currentOrder = order;\r\n  },\r\n  \r\n  /**\r\n   * @description 设置加载状态\r\n   * @param {Object} state - Vuex状态\r\n   * @param {boolean} loading - 是否加载中\r\n   */\r\n  SET_LOADING(state, loading) {\r\n    state.loading = loading;\r\n  },\r\n  \r\n  /**\r\n   * @description 设置错误信息\r\n   * @param {Object} state - Vuex状态\r\n   * @param {string|Object|null} error - 错误信息\r\n   */\r\n  SET_ERROR(state, error) {\r\n    state.error = error;\r\n  },\r\n  \r\n  /**\r\n   * @description 添加学生订单\r\n   * @param {Object} state - Vuex状态\r\n   * @param {Object} payload - 载荷\r\n   * @param {string} payload.status - 订单状态\r\n   * @param {Object} payload.order - 订单数据\r\n   */\r\n  ADD_STUDENT_ORDER(state, { status, order }) {\r\n    state.studentOrders[status].unshift(order);\r\n  },\r\n  \r\n  /**\r\n   * @description 添加教师订单\r\n   * @param {Object} state - Vuex状态\r\n   * @param {Object} payload - 载荷\r\n   * @param {string} payload.status - 订单状态\r\n   * @param {Object} payload.order - 订单数据\r\n   */\r\n  ADD_TEACHER_ORDER(state, { status, order }) {\r\n    state.teacherOrders[status].unshift(order);\r\n  },\r\n  \r\n  /**\r\n   * @description 更新学生订单\r\n   * @param {Object} state - Vuex状态\r\n   * @param {Object} payload - 载荷\r\n   * @param {string} payload.status - 订单状态\r\n   * @param {string} payload.orderId - 订单ID\r\n   * @param {Object} payload.order - 更新的订单数据\r\n   */\r\n  UPDATE_STUDENT_ORDER(state, { status, orderId, order }) {\r\n    const index = state.studentOrders[status].findIndex(o => o.id === orderId);\r\n    if (index !== -1) {\r\n      state.studentOrders[status].splice(index, 1, { ...state.studentOrders[status][index], ...order });\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 更新教师订单\r\n   * @param {Object} state - Vuex状态\r\n   * @param {Object} payload - 载荷\r\n   * @param {string} payload.status - 订单状态\r\n   * @param {string} payload.orderId - 订单ID\r\n   * @param {Object} payload.order - 更新的订单数据\r\n   */\r\n  UPDATE_TEACHER_ORDER(state, { status, orderId, order }) {\r\n    const index = state.teacherOrders[status].findIndex(o => o.id === orderId);\r\n    if (index !== -1) {\r\n      state.teacherOrders[status].splice(index, 1, { ...state.teacherOrders[status][index], ...order });\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 移除学生订单\r\n   * @param {Object} state - Vuex状态\r\n   * @param {Object} payload - 载荷\r\n   * @param {string} payload.status - 订单状态\r\n   * @param {string} payload.orderId - 订单ID\r\n   */\r\n  REMOVE_STUDENT_ORDER(state, { status, orderId }) {\r\n    state.studentOrders[status] = state.studentOrders[status].filter(o => o.id !== orderId);\r\n  },\r\n  \r\n  /**\r\n   * @description 移除教师订单\r\n   * @param {Object} state - Vuex状态\r\n   * @param {Object} payload - 载荷\r\n   * @param {string} payload.status - 订单状态\r\n   * @param {string} payload.orderId - 订单ID\r\n   */\r\n  REMOVE_TEACHER_ORDER(state, { status, orderId }) {\r\n    state.teacherOrders[status] = state.teacherOrders[status].filter(o => o.id !== orderId);\r\n  }\r\n};\r\n\r\n// Actions\r\nconst actions = {\r\n  /**\r\n   * @description 获取学生订单列表\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {string} status - 订单状态\r\n   * @returns {Promise<Object>} 获取结果\r\n   */\r\n  async getStudentOrders({ commit, rootState }, status) {\r\n    try {\r\n      commit('SET_LOADING', true);\r\n      commit('SET_ERROR', null);\r\n      \r\n      const token = rootState.auth.token;\r\n      const response = await api.getStudentOrders({ token, status });\r\n      \r\n      if (response.success) {\r\n        commit('SET_STUDENT_ORDERS', { status, orders: response.data });\r\n        commit('SET_LOADING', false);\r\n        return { success: true, data: response.data };\r\n      }\r\n      \r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', '获取学生订单失败');\r\n      return { success: false, message: '获取学生订单失败' };\r\n    } catch (error) {\r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', error.message || '获取学生订单失败');\r\n      return { success: false, message: error.message || '获取学生订单失败' };\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 获取教师订单列表\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {string} status - 订单状态\r\n   * @returns {Promise<Object>} 获取结果\r\n   */\r\n  async getTeacherOrders({ commit, rootState }, status) {\r\n    try {\r\n      commit('SET_LOADING', true);\r\n      commit('SET_ERROR', null);\r\n      \r\n      const token = rootState.auth.token;\r\n      const response = await api.getTeacherOrders({ token, status });\r\n      \r\n      if (response.success) {\r\n        commit('SET_TEACHER_ORDERS', { status, orders: response.data });\r\n        commit('SET_LOADING', false);\r\n        return { success: true, data: response.data };\r\n      }\r\n      \r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', '获取教师订单失败');\r\n      return { success: false, message: '获取教师订单失败' };\r\n    } catch (error) {\r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', error.message || '获取教师订单失败');\r\n      return { success: false, message: error.message || '获取教师订单失败' };\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 获取订单详情\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {string} orderId - 订单ID\r\n   * @returns {Promise<Object>} 获取结果\r\n   */\r\n  async getOrderDetail({ commit, rootState }, orderId) {\r\n    try {\r\n      commit('SET_LOADING', true);\r\n      commit('SET_ERROR', null);\r\n      \r\n      const token = rootState.auth.token;\r\n      const response = await api.getOrderDetail({ token, orderId });\r\n      \r\n      if (response.success) {\r\n        commit('SET_CURRENT_ORDER', response.data);\r\n        commit('SET_LOADING', false);\r\n        return { success: true, data: response.data };\r\n      }\r\n      \r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', '获取订单详情失败');\r\n      return { success: false, message: '获取订单详情失败' };\r\n    } catch (error) {\r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', error.message || '获取订单详情失败');\r\n      return { success: false, message: error.message || '获取订单详情失败' };\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 创建订单\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Object} orderData - 订单数据\r\n   * @returns {Promise<Object>} 创建结果\r\n   */\r\n  async createOrder({ commit, rootState }, orderData) {\r\n    try {\r\n      commit('SET_LOADING', true);\r\n      commit('SET_ERROR', null);\r\n      \r\n      const token = rootState.auth.token;\r\n      const response = await api.createOrder({ token, orderData });\r\n      \r\n      if (response.success) {\r\n        commit('ADD_STUDENT_ORDER', { status: 'pendingPayment', order: response.data });\r\n        commit('SET_CURRENT_ORDER', response.data);\r\n        commit('SET_LOADING', false);\r\n        return { success: true, data: response.data };\r\n      }\r\n      \r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', '创建订单失败');\r\n      return { success: false, message: '创建订单失败' };\r\n    } catch (error) {\r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', error.message || '创建订单失败');\r\n      return { success: false, message: error.message || '创建订单失败' };\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 支付订单\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {string} orderId - 订单ID\r\n   * @returns {Promise<Object>} 支付结果\r\n   */\r\n  async payOrder({ commit, rootState }, orderId) {\r\n    try {\r\n      commit('SET_LOADING', true);\r\n      commit('SET_ERROR', null);\r\n      \r\n      const token = rootState.auth.token;\r\n      const response = await api.payOrder({ token, orderId });\r\n      \r\n      if (response.success) {\r\n        // 从待付款移除\r\n        commit('REMOVE_STUDENT_ORDER', { status: 'pendingPayment', orderId });\r\n        \r\n        // 添加到待服务\r\n        commit('ADD_STUDENT_ORDER', { status: 'pendingService', order: response.data });\r\n        \r\n        commit('SET_LOADING', false);\r\n        return { success: true, data: response.data };\r\n      }\r\n      \r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', '支付订单失败');\r\n      return { success: false, message: '支付订单失败' };\r\n    } catch (error) {\r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', error.message || '支付订单失败');\r\n      return { success: false, message: error.message || '支付订单失败' };\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 取消订单\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Object} params - 请求参数\r\n   * @param {string} params.orderId - 订单ID\r\n   * @param {string} params.status - 订单当前状态\r\n   * @param {string} params.reason - 取消原因\r\n   * @param {string} params.role - 用户角色\r\n   * @returns {Promise<Object>} 取消结果\r\n   */\r\n  async cancelOrder({ commit, rootState }, { orderId, status, reason, role }) {\r\n    try {\r\n      commit('SET_LOADING', true);\r\n      commit('SET_ERROR', null);\r\n      \r\n      const token = rootState.auth.token;\r\n      const response = await api.cancelOrder({ token, orderId, reason });\r\n      \r\n      if (response.success) {\r\n        if (role === 'student') {\r\n          // 从当前状态移除\r\n          commit('REMOVE_STUDENT_ORDER', { status, orderId });\r\n          \r\n          // 添加到已取消\r\n          commit('ADD_STUDENT_ORDER', { status: 'cancelled', order: response.data });\r\n        } else if (role === 'teacher') {\r\n          // 从当前状态移除\r\n          commit('REMOVE_TEACHER_ORDER', { status, orderId });\r\n          \r\n          // 添加到已取消\r\n          commit('ADD_TEACHER_ORDER', { status: 'cancelled', order: response.data });\r\n        }\r\n        \r\n        commit('SET_LOADING', false);\r\n        return { success: true, data: response.data };\r\n      }\r\n      \r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', '取消订单失败');\r\n      return { success: false, message: '取消订单失败' };\r\n    } catch (error) {\r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', error.message || '取消订单失败');\r\n      return { success: false, message: error.message || '取消订单失败' };\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 完成订单\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Object} params - 请求参数\r\n   * @param {string} params.orderId - 订单ID\r\n   * @param {string} params.role - 用户角色\r\n   * @returns {Promise<Object>} 完成结果\r\n   */\r\n  async completeOrder({ commit, rootState }, { orderId, role }) {\r\n    try {\r\n      commit('SET_LOADING', true);\r\n      commit('SET_ERROR', null);\r\n      \r\n      const token = rootState.auth.token;\r\n      const response = await api.completeOrder({ token, orderId });\r\n      \r\n      if (response.success) {\r\n        if (role === 'student') {\r\n          // 从待服务移除\r\n          commit('REMOVE_STUDENT_ORDER', { status: 'pendingService', orderId });\r\n          \r\n          // 添加到已完成\r\n          commit('ADD_STUDENT_ORDER', { status: 'completed', order: response.data });\r\n        } else if (role === 'teacher') {\r\n          // 从待服务移除\r\n          commit('REMOVE_TEACHER_ORDER', { status: 'pendingService', orderId });\r\n          \r\n          // 添加到已完成\r\n          commit('ADD_TEACHER_ORDER', { status: 'completed', order: response.data });\r\n        }\r\n        \r\n        commit('SET_LOADING', false);\r\n        return { success: true, data: response.data };\r\n      }\r\n      \r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', '完成订单失败');\r\n      return { success: false, message: '完成订单失败' };\r\n    } catch (error) {\r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', error.message || '完成订单失败');\r\n      return { success: false, message: error.message || '完成订单失败' };\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 评价订单\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Object} params - 请求参数\r\n   * @param {string} params.orderId - 订单ID\r\n   * @param {Object} params.reviewData - 评价数据\r\n   * @returns {Promise<Object>} 评价结果\r\n   */\r\n  async reviewOrder({ commit, rootState }, { orderId, reviewData }) {\r\n    try {\r\n      commit('SET_LOADING', true);\r\n      commit('SET_ERROR', null);\r\n      \r\n      const token = rootState.auth.token;\r\n      const response = await api.reviewOrder({ token, orderId, reviewData });\r\n      \r\n      if (response.success) {\r\n        // 更新学生已完成订单\r\n        commit('UPDATE_STUDENT_ORDER', { \r\n          status: 'completed', \r\n          orderId, \r\n          order: { \r\n            rating: reviewData.rating, \r\n            comment: reviewData.comment,\r\n            reviewTime: response.data.reviewTime\r\n          } \r\n        });\r\n        \r\n        commit('SET_LOADING', false);\r\n        return { success: true, data: response.data };\r\n      }\r\n      \r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', '评价订单失败');\r\n      return { success: false, message: '评价订单失败' };\r\n    } catch (error) {\r\n      commit('SET_LOADING', false);\r\n      commit('SET_ERROR', error.message || '评价订单失败');\r\n      return { success: false, message: error.message || '评价订单失败' };\r\n    }\r\n  }\r\n};\r\n\r\n// Getters\r\nconst getters = {\r\n  /**\r\n   * @description 获取学生待付款订单\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {Array} 待付款订单列表\r\n   */\r\n  studentPendingPaymentOrders: state => state.studentOrders.pendingPayment,\r\n  \r\n  /**\r\n   * @description 获取学生待服务订单\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {Array} 待服务订单列表\r\n   */\r\n  studentPendingServiceOrders: state => state.studentOrders.pendingService,\r\n  \r\n  /**\r\n   * @description 获取学生已完成订单\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {Array} 已完成订单列表\r\n   */\r\n  studentCompletedOrders: state => state.studentOrders.completed,\r\n  \r\n  /**\r\n   * @description 获取学生已取消订单\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {Array} 已取消订单列表\r\n   */\r\n  studentCancelledOrders: state => state.studentOrders.cancelled,\r\n  \r\n  /**\r\n   * @description 获取教师待服务订单\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {Array} 待服务订单列表\r\n   */\r\n  teacherPendingServiceOrders: state => state.teacherOrders.pendingService,\r\n  \r\n  /**\r\n   * @description 获取教师已完成订单\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {Array} 已完成订单列表\r\n   */\r\n  teacherCompletedOrders: state => state.teacherOrders.completed,\r\n  \r\n  /**\r\n   * @description 获取教师已取消订单\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {Array} 已取消订单列表\r\n   */\r\n  teacherCancelledOrders: state => state.teacherOrders.cancelled,\r\n  \r\n  /**\r\n   * @description 获取当前订单\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {Object|null} 当前订单\r\n   */\r\n  currentOrder: state => state.currentOrder,\r\n  \r\n  /**\r\n   * @description 获取是否加载中\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {boolean} 是否加载中\r\n   */\r\n  isLoading: state => state.loading,\r\n  \r\n  /**\r\n   * @description 获取错误信息\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {string|Object|null} 错误信息\r\n   */\r\n  error: state => state.error,\r\n  \r\n  /**\r\n   * @description 获取学生订单总数\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {number} 学生订单总数\r\n   */\r\n  studentOrdersCount: state => {\r\n    return state.studentOrders.pendingPayment.length +\r\n           state.studentOrders.pendingService.length +\r\n           state.studentOrders.completed.length +\r\n           state.studentOrders.cancelled.length;\r\n  },\r\n  \r\n  /**\r\n   * @description 获取教师订单总数\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {number} 教师订单总数\r\n   */\r\n  teacherOrdersCount: state => {\r\n    return state.teacherOrders.pendingService.length +\r\n           state.teacherOrders.completed.length +\r\n           state.teacherOrders.cancelled.length;\r\n  }\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  mutations,\r\n  actions,\r\n  getters\r\n}; "],"names":["state","order"],"mappings":"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"}