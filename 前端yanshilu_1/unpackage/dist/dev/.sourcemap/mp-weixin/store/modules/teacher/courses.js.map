{"version":3,"file":"courses.js","sources":["store/modules/teacher/courses.js"],"sourcesContent":["/**\r\n * @description 教师课程管理模块 - 处理教师创建和管理的课程\r\n */\r\nimport { services } from '../../services';\r\n\r\n// 初始状态\r\nconst state = {\r\n  teacherCourses: [],\r\n  loading: false,\r\n  error: null,\r\n  currentCourse: null,\r\n  stats: {\r\n    totalCourses: 0,\r\n    activeCourses: 0,\r\n    completedCourses: 0,\r\n    totalStudents: 0\r\n  }\r\n};\r\n\r\n// Getters\r\nconst getters = {\r\n  teacherCourses: state => state.teacherCourses,\r\n  loading: state => state.loading,\r\n  error: state => state.error,\r\n  currentCourse: state => state.currentCourse,\r\n  stats: state => state.stats\r\n};\r\n\r\n// 引入常量类型\r\nconst FETCH_TEACHER_COURSES_REQUEST = 'FETCH_TEACHER_COURSES_REQUEST';\r\nconst FETCH_TEACHER_COURSES_SUCCESS = 'FETCH_TEACHER_COURSES_SUCCESS';\r\nconst FETCH_TEACHER_COURSES_FAILURE = 'FETCH_TEACHER_COURSES_FAILURE';\r\nconst SET_CURRENT_COURSE = 'SET_CURRENT_COURSE';\r\nconst UPDATE_COURSE_REQUEST = 'UPDATE_COURSE_REQUEST';\r\nconst UPDATE_COURSE_SUCCESS = 'UPDATE_COURSE_SUCCESS';\r\nconst UPDATE_COURSE_FAILURE = 'UPDATE_COURSE_FAILURE';\r\nconst CREATE_COURSE_REQUEST = 'CREATE_COURSE_REQUEST';\r\nconst CREATE_COURSE_SUCCESS = 'CREATE_COURSE_SUCCESS';\r\nconst CREATE_COURSE_FAILURE = 'CREATE_COURSE_FAILURE';\r\n\r\n// Mutations\r\nconst mutations = {\r\n  [FETCH_TEACHER_COURSES_REQUEST](state) {\r\n    state.loading = true;\r\n    state.error = null;\r\n  },\r\n  [FETCH_TEACHER_COURSES_SUCCESS](state, { courses, stats }) {\r\n    state.teacherCourses = courses;\r\n    state.stats = stats || state.stats;\r\n    state.loading = false;\r\n  },\r\n  [FETCH_TEACHER_COURSES_FAILURE](state, error) {\r\n    state.loading = false;\r\n    state.error = error;\r\n  },\r\n  [SET_CURRENT_COURSE](state, course) {\r\n    state.currentCourse = course;\r\n  },\r\n  [UPDATE_COURSE_REQUEST](state) {\r\n    state.loading = true;\r\n    state.error = null;\r\n  },\r\n  [UPDATE_COURSE_SUCCESS](state, updatedCourse) {\r\n    const index = state.teacherCourses.findIndex(c => c.id === updatedCourse.id);\r\n    if (index !== -1) {\r\n      state.teacherCourses.splice(index, 1, updatedCourse);\r\n    }\r\n    state.currentCourse = updatedCourse;\r\n    state.loading = false;\r\n  },\r\n  [UPDATE_COURSE_FAILURE](state, error) {\r\n    state.loading = false;\r\n    state.error = error;\r\n  },\r\n  [CREATE_COURSE_REQUEST](state) {\r\n    state.loading = true;\r\n    state.error = null;\r\n  },\r\n  [CREATE_COURSE_SUCCESS](state, newCourse) {\r\n    state.teacherCourses.unshift(newCourse);\r\n    state.stats.totalCourses++;\r\n    state.stats.activeCourses++;\r\n    state.loading = false;\r\n  },\r\n  [CREATE_COURSE_FAILURE](state, error) {\r\n    state.loading = false;\r\n    state.error = error;\r\n  }\r\n};\r\n\r\n// Actions\r\nconst actions = {\r\n  /**\r\n   * @description 获取教师课程列表\r\n   * @param {Object} context - Vuex上下文\r\n   * @returns {Promise<Array>} 课程列表\r\n   */\r\n  async fetchTeacherCourses({ commit }) {\r\n    commit(FETCH_TEACHER_COURSES_REQUEST);\r\n    \r\n    try {\r\n      // 假设API服务中有获取教师课程的方法\r\n      const response = await services.course.getTeacherCourses();\r\n      \r\n      // 计算统计数据\r\n      const stats = {\r\n        totalCourses: response.data.length,\r\n        activeCourses: response.data.filter(c => c.status === 'active').length,\r\n        completedCourses: response.data.filter(c => c.status === 'completed').length,\r\n        totalStudents: response.data.reduce((total, course) => total + (course.students?.length || 0), 0)\r\n      };\r\n      \r\n      commit(FETCH_TEACHER_COURSES_SUCCESS, { \r\n        courses: response.data,\r\n        stats\r\n      });\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      const errorMsg = error.response?.data?.message || '获取课程列表失败';\r\n      commit(FETCH_TEACHER_COURSES_FAILURE, errorMsg);\r\n      return Promise.reject(error);\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 设置当前课程\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Object} course - 课程对象\r\n   */\r\n  setCurrentCourse({ commit }, course) {\r\n    commit(SET_CURRENT_COURSE, course);\r\n  },\r\n  \r\n  /**\r\n   * @description 更新课程信息\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Object} courseData - 课程数据\r\n   * @returns {Promise<Object>} 更新后的课程\r\n   */\r\n  async updateCourse({ commit }, courseData) {\r\n    commit(UPDATE_COURSE_REQUEST);\r\n    \r\n    try {\r\n      const response = await services.course.updateCourse(courseData.id, courseData);\r\n      commit(UPDATE_COURSE_SUCCESS, response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      const errorMsg = error.response?.data?.message || '更新课程失败';\r\n      commit(UPDATE_COURSE_FAILURE, errorMsg);\r\n      return Promise.reject(error);\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 创建新课程\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Object} courseData - 课程数据\r\n   * @returns {Promise<Object>} 创建的课程\r\n   */\r\n  async createCourse({ commit }, courseData) {\r\n    commit(CREATE_COURSE_REQUEST);\r\n    \r\n    try {\r\n      const response = await services.course.createCourse(courseData);\r\n      commit(CREATE_COURSE_SUCCESS, response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      const errorMsg = error.response?.data?.message || '创建课程失败';\r\n      commit(CREATE_COURSE_FAILURE, errorMsg);\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations\r\n}; "],"names":["state","courses","services","_a"],"mappings":"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"}