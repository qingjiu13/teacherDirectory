{"version":3,"file":"match.js","sources":["store/modules/common/match.js"],"sourcesContent":["/**\r\n * @description 匹配功能Vuex模块\r\n * 老师和学生身份共享的匹配功能\r\n */\r\n\r\nimport { match } from '../../services';\r\n\r\n// 初始状态\r\nconst state = {\r\n  // 筛选条件\r\n  filters: {\r\n    school: '',\r\n    major: '',\r\n    keyword: '',\r\n    sortBy: '综合排序'\r\n  },\r\n  \r\n  // 学校和专业列表\r\n  schoolList: [],\r\n  majorList: [],\r\n  \r\n  // 老师数据\r\n  teachers: [],\r\n  currentPage: 1,\r\n  totalPages: 1,\r\n  totalCount: 0,\r\n  pageSize: 10,\r\n  \r\n  // 加载状态\r\n  loading: false,\r\n  error: null,\r\n  \r\n  // 具体操作的加载状态\r\n  loadingTypes: {\r\n    teachers: false,\r\n    schools: false,\r\n    majors: false,\r\n    communication: false,\r\n    teacherDetail: false\r\n  },\r\n  \r\n  // 选中的教师ID\r\n  selectedTeacherId: null,\r\n  \r\n  // 当前教师详情\r\n  teacherDetail: null\r\n};\r\n\r\n// Getters\r\nconst getters = {\r\n  /**\r\n   * @description 获取筛选后的老师列表\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {Array} 筛选后的老师列表\r\n   */\r\n  filteredTeachers: state => {\r\n    return state.teachers;\r\n  },\r\n  \r\n  /**\r\n   * @description 获取学校列表（格式化为下拉框使用的格式）\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {Array} 格式化后的学校列表\r\n   */\r\n  formattedSchoolList: state => {\r\n    return state.schoolList.map(school => ({\r\n      choiceItemId: school.id,\r\n      choiceItemContent: school.name\r\n    }));\r\n  },\r\n  \r\n  /**\r\n   * @description 获取专业列表（格式化为下拉框使用的格式）\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {Array} 格式化后的专业列表\r\n   */\r\n  formattedMajorList: state => {\r\n    return state.majorList.map(major => ({\r\n      choiceItemId: major.id,\r\n      choiceItemContent: major.name\r\n    }));\r\n  },\r\n  \r\n  /**\r\n   * @description 判断是否有筛选条件\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {Boolean} 是否有筛选条件\r\n   */\r\n  hasFilters: state => {\r\n    return !!state.filters.school || !!state.filters.major || !!state.filters.keyword;\r\n  },\r\n  \r\n  /**\r\n   * @description 获取排序选项\r\n   * @returns {Array} 排序选项列表\r\n   */\r\n  sortOptions: () => {\r\n    return [\r\n      { choiceItemId: '综合排序', choiceItemContent: '综合排序' },\r\n      { choiceItemId: '评分最高', choiceItemContent: '评分最高' },\r\n      { choiceItemId: '最新加入', choiceItemContent: '最新加入' }\r\n    ];\r\n  },\r\n  \r\n  /**\r\n   * @description 获取是否处于加载状态\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {Boolean} 是否处于加载状态\r\n   */\r\n  isLoading: state => state.loading,\r\n  \r\n  /**\r\n   * @description 获取错误信息\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {Object} 错误信息\r\n   */\r\n  error: state => state.error,\r\n  \r\n  /**\r\n   * @description 获取具体类型的加载状态\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {Function} 返回获取具体类型加载状态的函数\r\n   */\r\n  loadingType: state => type => state.loadingTypes[type]\r\n};\r\n\r\n// 引入常量类型\r\nconst SET_LOADING = 'SET_LOADING';\r\nconst SET_LOADING_TYPE = 'SET_LOADING_TYPE';\r\nconst SET_ERROR = 'SET_ERROR';\r\nconst SET_FILTERS = 'SET_FILTERS';\r\nconst SET_SCHOOL_LIST = 'SET_SCHOOL_LIST';\r\nconst SET_MAJOR_LIST = 'SET_MAJOR_LIST';\r\nconst SET_TEACHERS = 'SET_TEACHERS';\r\nconst SET_SELECTED_TEACHER = 'SET_SELECTED_TEACHER';\r\nconst SET_TEACHER_DETAIL = 'SET_TEACHER_DETAIL';\r\nconst RESET_FILTERS = 'RESET_FILTERS';\r\n\r\n// Mutations\r\nconst mutations = {\r\n  /**\r\n   * @description 设置全局加载状态\r\n   * @param {Object} state - Vuex状态\r\n   * @param {Boolean} status - 加载状态\r\n   */\r\n  [SET_LOADING](state, status) {\r\n    state.loading = status;\r\n  },\r\n  \r\n  /**\r\n   * @description 设置错误信息\r\n   * @param {Object} state - Vuex状态\r\n   * @param {Object} error - 错误信息\r\n   */\r\n  [SET_ERROR](state, error) {\r\n    state.error = error;\r\n  },\r\n  \r\n  /**\r\n   * @description 设置特定类型的加载状态\r\n   * @param {Object} state - Vuex状态\r\n   * @param {Object} payload - 加载状态信息\r\n   */\r\n  [SET_LOADING_TYPE](state, { type, value }) {\r\n    state.loadingTypes[type] = value;\r\n  },\r\n  \r\n  /**\r\n   * @description 设置筛选条件\r\n   * @param {Object} state - Vuex状态\r\n   * @param {Object} filters - 筛选条件\r\n   */\r\n  [SET_FILTERS](state, filters) {\r\n    state.filters = { ...state.filters, ...filters };\r\n  },\r\n  \r\n  /**\r\n   * @description 设置学校列表\r\n   * @param {Object} state - Vuex状态\r\n   * @param {Array} schools - 学校列表\r\n   */\r\n  [SET_SCHOOL_LIST](state, schools) {\r\n    state.schoolList = schools;\r\n  },\r\n  \r\n  /**\r\n   * @description 设置专业列表\r\n   * @param {Object} state - Vuex状态\r\n   * @param {Array} majors - 专业列表\r\n   */\r\n  [SET_MAJOR_LIST](state, majors) {\r\n    state.majorList = majors;\r\n  },\r\n  \r\n  /**\r\n   * @description 设置老师列表\r\n   * @param {Object} state - Vuex状态\r\n   * @param {Object} data - 老师列表数据和分页信息\r\n   */\r\n  [SET_TEACHERS](state, data) {\r\n    const { list, pagination } = data;\r\n    state.teachers = list;\r\n    state.currentPage = pagination.current || pagination.page;\r\n    state.totalPages = pagination.totalPages;\r\n    state.totalCount = pagination.total;\r\n    state.pageSize = pagination.pageSize;\r\n  },\r\n  \r\n  /**\r\n   * @description 设置选中的教师ID\r\n   * @param {Object} state - Vuex状态\r\n   * @param {Number} id - 教师ID\r\n   */\r\n  [SET_SELECTED_TEACHER](state, id) {\r\n    state.selectedTeacherId = id;\r\n  },\r\n  \r\n  /**\r\n   * @description 设置教师详情\r\n   * @param {Object} state - Vuex状态\r\n   * @param {Object} detail - 教师详情\r\n   */\r\n  [SET_TEACHER_DETAIL](state, detail) {\r\n    state.teacherDetail = detail;\r\n  },\r\n  \r\n  /**\r\n   * @description 重置筛选条件\r\n   * @param {Object} state - Vuex状态\r\n   */\r\n  [RESET_FILTERS](state) {\r\n    state.filters = {\r\n      school: '',\r\n      major: '',\r\n      keyword: '',\r\n      sortBy: '综合排序'\r\n    };\r\n  }\r\n};\r\n\r\n// Actions\r\nconst actions = {\r\n  /**\r\n   * @description 获取推荐老师列表\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Object} params - 查询参数\r\n   * @returns {Promise<Object>} 结果对象\r\n   */\r\n  async getRecommendedTeachers({ commit, rootState }, params = {}) {\r\n    try {\r\n      commit(SET_LOADING, true);\r\n      commit(SET_LOADING_TYPE, { type: 'teachers', value: true });\r\n      commit(SET_ERROR, null);\r\n      \r\n      // 添加用户角色到参数\r\n      const role = rootState.auth.userInfo?.role || 'student';\r\n      const response = await match.getRecommendedTeachers({ \r\n        ...params, \r\n        role,\r\n        page: params.page || state.currentPage,\r\n        limit: params.limit || state.pageSize\r\n      });\r\n      \r\n      if (!response.success) {\r\n        throw response.error || { message: '获取推荐老师失败' };\r\n      }\r\n      \r\n      commit(SET_TEACHERS, {\r\n        list: response.data.list,\r\n        pagination: response.data.pagination\r\n      });\r\n      \r\n      return { success: true, data: response.data.list };\r\n    } catch (error) {\r\n      console.error('获取推荐老师失败:', error);\r\n      commit(SET_ERROR, error);\r\n      return { success: false, error, message: error.message || '获取推荐老师失败' };\r\n    } finally {\r\n      commit(SET_LOADING, false);\r\n      commit(SET_LOADING_TYPE, { type: 'teachers', value: false });\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 搜索老师\r\n   * @param {Object} context - Vuex上下文\r\n   * @returns {Promise<Object>} 结果对象\r\n   */\r\n  async searchTeachers({ commit, state }) {\r\n    try {\r\n      commit(SET_LOADING, true);\r\n      commit(SET_LOADING_TYPE, { type: 'teachers', value: true });\r\n      commit(SET_ERROR, null);\r\n      \r\n      const response = await match.searchTeachers({\r\n        ...state.filters,\r\n        page: state.currentPage,\r\n        limit: state.pageSize\r\n      });\r\n      \r\n      if (!response.success) {\r\n        throw response.error || { message: '搜索老师失败' };\r\n      }\r\n      \r\n      commit(SET_TEACHERS, {\r\n        list: response.data.list,\r\n        pagination: response.data.pagination\r\n      });\r\n      \r\n      return { success: true, data: response.data.list };\r\n    } catch (error) {\r\n      console.error('搜索老师失败:', error);\r\n      commit(SET_ERROR, error);\r\n      return { success: false, error, message: error.message || '搜索老师失败' };\r\n    } finally {\r\n      commit(SET_LOADING, false);\r\n      commit(SET_LOADING_TYPE, { type: 'teachers', value: false });\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 加载学校列表\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {String} keyword - 搜索关键词\r\n   * @returns {Promise<Object>} 结果对象\r\n   */\r\n  async loadSchoolList({ commit }, keyword = '') {\r\n    try {\r\n      commit(SET_LOADING, true);\r\n      commit(SET_LOADING_TYPE, { type: 'schools', value: true });\r\n      commit(SET_ERROR, null);\r\n      \r\n      const response = await match.getSchoolList(keyword);\r\n      \r\n      if (!response.success) {\r\n        throw response.error || { message: '获取学校列表失败' };\r\n      }\r\n      \r\n      commit(SET_SCHOOL_LIST, response.data);\r\n      return { success: true, data: response.data };\r\n    } catch (error) {\r\n      console.error('获取学校列表失败:', error);\r\n      commit(SET_ERROR, error);\r\n      return { success: false, error, message: error.message || '获取学校列表失败' };\r\n    } finally {\r\n      commit(SET_LOADING, false);\r\n      commit(SET_LOADING_TYPE, { type: 'schools', value: false });\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 加载专业列表\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {String} school - 学校名称\r\n   * @returns {Promise<Object>} 结果对象\r\n   */\r\n  async loadMajorList({ commit }, school = '') {\r\n    try {\r\n      commit(SET_LOADING, true);\r\n      commit(SET_LOADING_TYPE, { type: 'majors', value: true });\r\n      commit(SET_ERROR, null);\r\n      \r\n      const response = await match.getMajorList(school);\r\n      \r\n      if (!response.success) {\r\n        throw response.error || { message: '获取专业列表失败' };\r\n      }\r\n      \r\n      commit(SET_MAJOR_LIST, response.data);\r\n      return { success: true, data: response.data };\r\n    } catch (error) {\r\n      console.error('获取专业列表失败:', error);\r\n      commit(SET_ERROR, error);\r\n      return { success: false, error, message: error.message || '获取专业列表失败' };\r\n    } finally {\r\n      commit(SET_LOADING, false);\r\n      commit(SET_LOADING_TYPE, { type: 'majors', value: false });\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 应用筛选条件\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Object} filters - 筛选条件\r\n   * @returns {Promise<Object>} 结果对象\r\n   */\r\n  async applyFilters({ commit, dispatch }, filters) {\r\n    commit(SET_FILTERS, filters);\r\n    return dispatch('searchTeachers');\r\n  },\r\n  \r\n  /**\r\n   * @description 申请与老师沟通\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Object} params - 参数\r\n   * @returns {Promise<Object>} 结果对象\r\n   */\r\n  async applyForCommunication({ commit }, { teacherId, message = '' }) {\r\n    try {\r\n      commit(SET_LOADING, true);\r\n      commit(SET_LOADING_TYPE, { type: 'communication', value: true });\r\n      commit(SET_ERROR, null);\r\n      \r\n      const response = await match.applyForCommunication(teacherId, message);\r\n      \r\n      if (!response.success) {\r\n        throw response.error || { message: '申请沟通失败' };\r\n      }\r\n      \r\n      return { success: true, data: response.data };\r\n    } catch (error) {\r\n      console.error('申请沟通失败:', error);\r\n      commit(SET_ERROR, error);\r\n      return { success: false, error, message: error.message || '申请沟通失败' };\r\n    } finally {\r\n      commit(SET_LOADING, false);\r\n      commit(SET_LOADING_TYPE, { type: 'communication', value: false });\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 获取老师详情\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Number} id - 老师ID\r\n   * @returns {Promise<Object>} 结果对象\r\n   */\r\n  async getTeacherDetail({ commit }, id) {\r\n    try {\r\n      commit(SET_LOADING, true);\r\n      commit(SET_LOADING_TYPE, { type: 'teacherDetail', value: true });\r\n      commit(SET_ERROR, null);\r\n      commit(SET_SELECTED_TEACHER, id);\r\n      \r\n      const response = await match.getTeacherDetail(id);\r\n      \r\n      if (!response.success) {\r\n        throw response.error || { message: '获取老师详情失败' };\r\n      }\r\n      \r\n      commit(SET_TEACHER_DETAIL, response.data);\r\n      return { success: true, data: response.data };\r\n    } catch (error) {\r\n      console.error('获取老师详情失败:', error);\r\n      commit(SET_ERROR, error);\r\n      return { success: false, error, message: error.message || '获取老师详情失败' };\r\n    } finally {\r\n      commit(SET_LOADING, false);\r\n      commit(SET_LOADING_TYPE, { type: 'teacherDetail', value: false });\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 重置过滤器并获取推荐老师\r\n   * @param {Object} context - Vuex上下文\r\n   * @returns {Promise<Object>} 结果对象\r\n   */\r\n  async resetAndGetRecommended({ commit, dispatch }) {\r\n    commit(RESET_FILTERS);\r\n    return dispatch('getRecommendedTeachers');\r\n  },\r\n  \r\n  /**\r\n   * @description 清除错误信息\r\n   * @param {Object} context - Vuex上下文\r\n   */\r\n  clearError({ commit }) {\r\n    commit(SET_ERROR, null);\r\n  }\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  getters,\r\n  mutations,\r\n  actions\r\n}; "],"names":["state","match.getRecommendedTeachers","uni","match.searchTeachers","match.getSchoolList","match.getMajorList","match.applyForCommunication","match.getTeacherDetail"],"mappings":";;;AAQA,MAAM,QAAQ;AAAA;AAAA,EAEZ,SAAS;AAAA,IACP,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,SAAS;AAAA,IACT,QAAQ;AAAA,EACT;AAAA;AAAA,EAGD,YAAY,CAAE;AAAA,EACd,WAAW,CAAE;AAAA;AAAA,EAGb,UAAU,CAAE;AAAA,EACZ,aAAa;AAAA,EACb,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,UAAU;AAAA;AAAA,EAGV,SAAS;AAAA,EACT,OAAO;AAAA;AAAA,EAGP,cAAc;AAAA,IACZ,UAAU;AAAA,IACV,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,eAAe;AAAA,IACf,eAAe;AAAA,EAChB;AAAA;AAAA,EAGD,mBAAmB;AAAA;AAAA,EAGnB,eAAe;AACjB;AAGA,MAAM,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMd,kBAAkB,CAAAA,WAAS;AACzB,WAAOA,OAAM;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,qBAAqB,CAAAA,WAAS;AAC5B,WAAOA,OAAM,WAAW,IAAI,aAAW;AAAA,MACrC,cAAc,OAAO;AAAA,MACrB,mBAAmB,OAAO;AAAA,IAC3B,EAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,oBAAoB,CAAAA,WAAS;AAC3B,WAAOA,OAAM,UAAU,IAAI,YAAU;AAAA,MACnC,cAAc,MAAM;AAAA,MACpB,mBAAmB,MAAM;AAAA,IAC1B,EAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,YAAY,CAAAA,WAAS;AACnB,WAAO,CAAC,CAACA,OAAM,QAAQ,UAAU,CAAC,CAACA,OAAM,QAAQ,SAAS,CAAC,CAACA,OAAM,QAAQ;AAAA,EAC3E;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,aAAa,MAAM;AACjB,WAAO;AAAA,MACL,EAAE,cAAc,QAAQ,mBAAmB,OAAQ;AAAA,MACnD,EAAE,cAAc,QAAQ,mBAAmB,OAAQ;AAAA,MACnD,EAAE,cAAc,QAAQ,mBAAmB,OAAQ;AAAA,IACzD;AAAA,EACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,WAAW,CAAAA,WAASA,OAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO1B,OAAO,CAAAA,WAASA,OAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOtB,aAAa,CAAAA,WAAS,UAAQA,OAAM,aAAa,IAAI;AACvD;AAGA,MAAM,cAAc;AACpB,MAAM,mBAAmB;AACzB,MAAM,YAAY;AAClB,MAAM,cAAc;AACpB,MAAM,kBAAkB;AACxB,MAAM,iBAAiB;AACvB,MAAM,eAAe;AACrB,MAAM,uBAAuB;AAC7B,MAAM,qBAAqB;AAC3B,MAAM,gBAAgB;AAGtB,MAAM,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMhB,CAAC,WAAW,EAAEA,QAAO,QAAQ;AAC3B,IAAAA,OAAM,UAAU;AAAA,EACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,CAAC,SAAS,EAAEA,QAAO,OAAO;AACxB,IAAAA,OAAM,QAAQ;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,CAAC,gBAAgB,EAAEA,QAAO,EAAE,MAAM,MAAK,GAAI;AACzC,IAAAA,OAAM,aAAa,IAAI,IAAI;AAAA,EAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,CAAC,WAAW,EAAEA,QAAO,SAAS;AAC5B,IAAAA,OAAM,UAAU,EAAE,GAAGA,OAAM,SAAS,GAAG;EACxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,CAAC,eAAe,EAAEA,QAAO,SAAS;AAChC,IAAAA,OAAM,aAAa;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,CAAC,cAAc,EAAEA,QAAO,QAAQ;AAC9B,IAAAA,OAAM,YAAY;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,CAAC,YAAY,EAAEA,QAAO,MAAM;AAC1B,UAAM,EAAE,MAAM,WAAY,IAAG;AAC7B,IAAAA,OAAM,WAAW;AACjB,IAAAA,OAAM,cAAc,WAAW,WAAW,WAAW;AACrD,IAAAA,OAAM,aAAa,WAAW;AAC9B,IAAAA,OAAM,aAAa,WAAW;AAC9B,IAAAA,OAAM,WAAW,WAAW;AAAA,EAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,CAAC,oBAAoB,EAAEA,QAAO,IAAI;AAChC,IAAAA,OAAM,oBAAoB;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,CAAC,kBAAkB,EAAEA,QAAO,QAAQ;AAClC,IAAAA,OAAM,gBAAgB;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,CAAC,aAAa,EAAEA,QAAO;AACrB,IAAAA,OAAM,UAAU;AAAA,MACd,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,SAAS;AAAA,MACT,QAAQ;AAAA,IACd;AAAA,EACG;AACH;AAGA,MAAM,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOd,MAAM,uBAAuB,EAAE,QAAQ,UAAS,GAAI,SAAS,CAAA,GAAI;;AAC/D,QAAI;AACF,aAAO,aAAa,IAAI;AACxB,aAAO,kBAAkB,EAAE,MAAM,YAAY,OAAO,KAAI,CAAE;AAC1D,aAAO,WAAW,IAAI;AAGtB,YAAM,SAAO,eAAU,KAAK,aAAf,mBAAyB,SAAQ;AAC9C,YAAM,WAAW,MAAMC,gDAA6B;AAAA,QAClD,GAAG;AAAA,QACH;AAAA,QACA,MAAM,OAAO,QAAQ,MAAM;AAAA,QAC3B,OAAO,OAAO,SAAS,MAAM;AAAA,MACrC,CAAO;AAED,UAAI,CAAC,SAAS,SAAS;AACrB,cAAM,SAAS,SAAS,EAAE,SAAS,WAAU;AAAA,MAC9C;AAED,aAAO,cAAc;AAAA,QACnB,MAAM,SAAS,KAAK;AAAA,QACpB,YAAY,SAAS,KAAK;AAAA,MAClC,CAAO;AAED,aAAO,EAAE,SAAS,MAAM,MAAM,SAAS,KAAK;IAC7C,SAAQ,OAAO;AACdC,oBAAc,MAAA,MAAA,SAAA,wCAAA,aAAa,KAAK;AAChC,aAAO,WAAW,KAAK;AACvB,aAAO,EAAE,SAAS,OAAO,OAAO,SAAS,MAAM,WAAW;IAChE,UAAc;AACR,aAAO,aAAa,KAAK;AACzB,aAAO,kBAAkB,EAAE,MAAM,YAAY,OAAO,MAAK,CAAE;AAAA,IAC5D;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,MAAM,eAAe,EAAE,QAAQ,OAAAF,UAAS;AACtC,QAAI;AACF,aAAO,aAAa,IAAI;AACxB,aAAO,kBAAkB,EAAE,MAAM,YAAY,OAAO,KAAI,CAAE;AAC1D,aAAO,WAAW,IAAI;AAEtB,YAAM,WAAW,MAAMG,wCAAqB;AAAA,QAC1C,GAAGH,OAAM;AAAA,QACT,MAAMA,OAAM;AAAA,QACZ,OAAOA,OAAM;AAAA,MACrB,CAAO;AAED,UAAI,CAAC,SAAS,SAAS;AACrB,cAAM,SAAS,SAAS,EAAE,SAAS,SAAQ;AAAA,MAC5C;AAED,aAAO,cAAc;AAAA,QACnB,MAAM,SAAS,KAAK;AAAA,QACpB,YAAY,SAAS,KAAK;AAAA,MAClC,CAAO;AAED,aAAO,EAAE,SAAS,MAAM,MAAM,SAAS,KAAK;IAC7C,SAAQ,OAAO;AACdE,iFAAc,WAAW,KAAK;AAC9B,aAAO,WAAW,KAAK;AACvB,aAAO,EAAE,SAAS,OAAO,OAAO,SAAS,MAAM,WAAW;IAChE,UAAc;AACR,aAAO,aAAa,KAAK;AACzB,aAAO,kBAAkB,EAAE,MAAM,YAAY,OAAO,MAAK,CAAE;AAAA,IAC5D;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQD,MAAM,eAAe,EAAE,UAAU,UAAU,IAAI;AAC7C,QAAI;AACF,aAAO,aAAa,IAAI;AACxB,aAAO,kBAAkB,EAAE,MAAM,WAAW,OAAO,KAAI,CAAE;AACzD,aAAO,WAAW,IAAI;AAEtB,YAAM,WAAW,MAAME,uCAAoB,OAAO;AAElD,UAAI,CAAC,SAAS,SAAS;AACrB,cAAM,SAAS,SAAS,EAAE,SAAS,WAAU;AAAA,MAC9C;AAED,aAAO,iBAAiB,SAAS,IAAI;AACrC,aAAO,EAAE,SAAS,MAAM,MAAM,SAAS,KAAI;AAAA,IAC5C,SAAQ,OAAO;AACdF,oBAAc,MAAA,MAAA,SAAA,wCAAA,aAAa,KAAK;AAChC,aAAO,WAAW,KAAK;AACvB,aAAO,EAAE,SAAS,OAAO,OAAO,SAAS,MAAM,WAAW;IAChE,UAAc;AACR,aAAO,aAAa,KAAK;AACzB,aAAO,kBAAkB,EAAE,MAAM,WAAW,OAAO,MAAK,CAAE;AAAA,IAC3D;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQD,MAAM,cAAc,EAAE,UAAU,SAAS,IAAI;AAC3C,QAAI;AACF,aAAO,aAAa,IAAI;AACxB,aAAO,kBAAkB,EAAE,MAAM,UAAU,OAAO,KAAI,CAAE;AACxD,aAAO,WAAW,IAAI;AAEtB,YAAM,WAAW,MAAMG,sCAAmB,MAAM;AAEhD,UAAI,CAAC,SAAS,SAAS;AACrB,cAAM,SAAS,SAAS,EAAE,SAAS,WAAU;AAAA,MAC9C;AAED,aAAO,gBAAgB,SAAS,IAAI;AACpC,aAAO,EAAE,SAAS,MAAM,MAAM,SAAS,KAAI;AAAA,IAC5C,SAAQ,OAAO;AACdH,oBAAc,MAAA,MAAA,SAAA,wCAAA,aAAa,KAAK;AAChC,aAAO,WAAW,KAAK;AACvB,aAAO,EAAE,SAAS,OAAO,OAAO,SAAS,MAAM,WAAW;IAChE,UAAc;AACR,aAAO,aAAa,KAAK;AACzB,aAAO,kBAAkB,EAAE,MAAM,UAAU,OAAO,MAAK,CAAE;AAAA,IAC1D;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQD,MAAM,aAAa,EAAE,QAAQ,SAAQ,GAAI,SAAS;AAChD,WAAO,aAAa,OAAO;AAC3B,WAAO,SAAS,gBAAgB;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQD,MAAM,sBAAsB,EAAE,OAAQ,GAAE,EAAE,WAAW,UAAU,MAAM;AACnE,QAAI;AACF,aAAO,aAAa,IAAI;AACxB,aAAO,kBAAkB,EAAE,MAAM,iBAAiB,OAAO,KAAI,CAAE;AAC/D,aAAO,WAAW,IAAI;AAEtB,YAAM,WAAW,MAAMI,yBAAAA,sBAA4B,WAAW,OAAO;AAErE,UAAI,CAAC,SAAS,SAAS;AACrB,cAAM,SAAS,SAAS,EAAE,SAAS,SAAQ;AAAA,MAC5C;AAED,aAAO,EAAE,SAAS,MAAM,MAAM,SAAS,KAAI;AAAA,IAC5C,SAAQ,OAAO;AACdJ,iFAAc,WAAW,KAAK;AAC9B,aAAO,WAAW,KAAK;AACvB,aAAO,EAAE,SAAS,OAAO,OAAO,SAAS,MAAM,WAAW;IAChE,UAAc;AACR,aAAO,aAAa,KAAK;AACzB,aAAO,kBAAkB,EAAE,MAAM,iBAAiB,OAAO,MAAK,CAAE;AAAA,IACjE;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQD,MAAM,iBAAiB,EAAE,OAAQ,GAAE,IAAI;AACrC,QAAI;AACF,aAAO,aAAa,IAAI;AACxB,aAAO,kBAAkB,EAAE,MAAM,iBAAiB,OAAO,KAAI,CAAE;AAC/D,aAAO,WAAW,IAAI;AACtB,aAAO,sBAAsB,EAAE;AAE/B,YAAM,WAAW,MAAMK,0CAAuB,EAAE;AAEhD,UAAI,CAAC,SAAS,SAAS;AACrB,cAAM,SAAS,SAAS,EAAE,SAAS,WAAU;AAAA,MAC9C;AAED,aAAO,oBAAoB,SAAS,IAAI;AACxC,aAAO,EAAE,SAAS,MAAM,MAAM,SAAS,KAAI;AAAA,IAC5C,SAAQ,OAAO;AACdL,oBAAc,MAAA,MAAA,SAAA,wCAAA,aAAa,KAAK;AAChC,aAAO,WAAW,KAAK;AACvB,aAAO,EAAE,SAAS,OAAO,OAAO,SAAS,MAAM,WAAW;IAChE,UAAc;AACR,aAAO,aAAa,KAAK;AACzB,aAAO,kBAAkB,EAAE,MAAM,iBAAiB,OAAO,MAAK,CAAE;AAAA,IACjE;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,MAAM,uBAAuB,EAAE,QAAQ,YAAY;AACjD,WAAO,aAAa;AACpB,WAAO,SAAS,wBAAwB;AAAA,EACzC;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,WAAW,EAAE,UAAU;AACrB,WAAO,WAAW,IAAI;AAAA,EACvB;AACH;AAEA,MAAe,QAAA;AAAA,EACb,YAAY;AAAA,EACZ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;;"}