{"version":3,"file":"match.js","sources":["store/modules/common/match.js"],"sourcesContent":["/**\r\n * @description 匹配功能Vuex模块\r\n * 老师和学生身份共享的匹配功能\r\n */\r\n\r\nimport { match, mock } from '../../services';\r\n\r\n// 本地存储键名\r\nconst FILTERS_STORAGE_KEY = 'match_filters';\r\nconst NAVIGATION_TYPE_KEY = 'match_navigation_type';\r\n\r\n// 导航类型常量\r\nconst NAV_TYPE = {\r\n  DEFAULT: 'default',       // 默认导航（普通退出）\r\n  CHAT: 'chat',             // 前往聊天页面\r\n  TEACHER_DETAIL: 'detail'  // 前往老师详情页面\r\n};\r\n\r\n// 尝试从本地存储加载筛选条件\r\nconst getSavedFilters = () => {\r\n  try {\r\n    const savedFilters = uni.getStorageSync(FILTERS_STORAGE_KEY);\r\n    return savedFilters ? JSON.parse(savedFilters) : { school: '', major: '', keyword: '' };\r\n  } catch (e) {\r\n    console.error('获取保存的筛选条件失败', e);\r\n    return { school: '', major: '', keyword: '' };\r\n  }\r\n};\r\n\r\n// 初始状态\r\nconst state = {\r\n  // 老师数据\r\n  teachers: [],\r\n  currentPage: 1,\r\n  totalPages: 1,\r\n  totalCount: 0,\r\n  pageSize: 10,\r\n  \r\n  // 筛选条件，从本地存储获取\r\n  filters: getSavedFilters(),\r\n  \r\n  // 加载状态\r\n  loading: false,\r\n  loadingMore: false,\r\n  error: null,\r\n  \r\n  // 选中的教师ID\r\n  selectedTeacherId: null,\r\n  \r\n  // 导航类型，用于判断是否需要清空筛选条件\r\n  navigationType: NAV_TYPE.DEFAULT\r\n};\r\n\r\n// Getters\r\nconst getters = {\r\n  /**\r\n   * @description 获取筛选后的老师列表\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {Array} 筛选后的老师列表\r\n   */\r\n  filteredTeachers: state => state.teachers,\r\n  \r\n  /**\r\n   * @description 判断是否有筛选条件\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {Boolean} 是否有筛选条件\r\n   */\r\n  hasFilters: state => {\r\n    return !!state.filters.school || !!state.filters.major || !!state.filters.keyword;\r\n  },\r\n  \r\n  /**\r\n   * @description 获取加载状态\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {Boolean} 是否正在加载\r\n   */\r\n  isLoading: state => state.loading,\r\n  \r\n  /**\r\n   * @description 获取加载更多状态\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {Boolean} 是否正在加载更多\r\n   */\r\n  isLoadingMore: state => state.loadingMore,\r\n  \r\n  /**\r\n   * @description 是否有更多数据\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {Boolean} 是否有更多数据\r\n   */\r\n  hasMoreData: state => state.currentPage < state.totalPages,\r\n  \r\n  /**\r\n   * @description 获取错误信息\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {Object} 错误信息\r\n   */\r\n  error: state => state.error,\r\n  \r\n  /**\r\n   * @description 获取当前筛选条件\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {Object} 筛选条件\r\n   */\r\n  currentFilters: state => state.filters,\r\n  \r\n  /**\r\n   * @description 获取当前导航类型\r\n   * @param {Object} state - Vuex状态\r\n   * @returns {String} 导航类型\r\n   */\r\n  navigationType: state => state.navigationType\r\n};\r\n\r\n// 引入常量类型\r\nconst SET_TEACHERS = 'SET_TEACHERS';\r\nconst ADD_TEACHERS = 'ADD_TEACHERS';\r\nconst SET_LOADING = 'SET_LOADING';\r\nconst SET_LOADING_MORE = 'SET_LOADING_MORE';\r\nconst SET_ERROR = 'SET_ERROR';\r\nconst SET_FILTERS = 'SET_FILTERS';\r\nconst SET_SELECTED_TEACHER = 'SET_SELECTED_TEACHER';\r\nconst RESET_FILTERS = 'RESET_FILTERS';\r\nconst SET_NAVIGATION_TYPE = 'SET_NAVIGATION_TYPE';\r\n\r\n// Mutations\r\nconst mutations = {\r\n  [SET_TEACHERS](state, data) {\r\n    const { list, pagination } = data;\r\n    state.teachers = list;\r\n    state.currentPage = pagination.current || pagination.page;\r\n    state.totalPages = pagination.totalPages;\r\n    state.totalCount = pagination.total;\r\n    state.pageSize = pagination.pageSize;\r\n  },\r\n  \r\n  [ADD_TEACHERS](state, data) {\r\n    const { list, pagination } = data;\r\n    state.teachers = [...state.teachers, ...list];\r\n    state.currentPage = pagination.current || pagination.page;\r\n    state.totalPages = pagination.totalPages;\r\n    state.totalCount = pagination.total;\r\n    state.pageSize = pagination.pageSize;\r\n  },\r\n  \r\n  [SET_LOADING](state, loading) {\r\n    state.loading = loading;\r\n  },\r\n  \r\n  [SET_LOADING_MORE](state, loadingMore) {\r\n    state.loadingMore = loadingMore;\r\n  },\r\n  \r\n  [SET_ERROR](state, error) {\r\n    state.error = error;\r\n  },\r\n  \r\n  [SET_FILTERS](state, filters) {\r\n    state.filters = { ...state.filters, ...filters };\r\n    \r\n    // 保存到本地存储\r\n    try {\r\n      uni.setStorageSync(FILTERS_STORAGE_KEY, JSON.stringify(state.filters));\r\n    } catch (e) {\r\n      console.error('保存筛选条件失败', e);\r\n    }\r\n  },\r\n  \r\n  [SET_SELECTED_TEACHER](state, id) {\r\n    state.selectedTeacherId = id;\r\n  },\r\n  \r\n  [RESET_FILTERS](state) {\r\n    state.filters = {\r\n      school: '',\r\n      major: '',\r\n      keyword: ''\r\n    };\r\n    \r\n    // 从本地存储中删除\r\n    try {\r\n      uni.removeStorageSync(FILTERS_STORAGE_KEY);\r\n    } catch (e) {\r\n      console.error('删除筛选条件失败', e);\r\n    }\r\n  },\r\n  \r\n  [SET_NAVIGATION_TYPE](state, type) {\r\n    state.navigationType = type;\r\n    \r\n    // 保存到本地存储\r\n    try {\r\n      uni.setStorageSync(NAVIGATION_TYPE_KEY, type);\r\n    } catch (e) {\r\n      console.error('保存导航类型失败', e);\r\n    }\r\n  }\r\n};\r\n\r\n// Actions\r\nconst actions = {\r\n  /**\r\n   * @description 获取老师列表\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Object} params - 查询参数\r\n   * @returns {Promise<Object>} 结果对象\r\n   */\r\n  async getTeachers({ commit, state }, params = {}) {\r\n    try {\r\n      commit(SET_LOADING, true);\r\n      commit(SET_ERROR, null);\r\n      \r\n      // TODO: 使用真实API接口时删除此模拟数据代码块\r\n      if (process.env.NODE_ENV === 'development') {\r\n        await mock.mockDelay(500);\r\n        \r\n        // 过滤模拟数据\r\n        let filteredTeachers = [...mock.mockTeachers];\r\n        \r\n        // 应用筛选条件\r\n        if (state.filters.school) {\r\n          filteredTeachers = filteredTeachers.filter(teacher => \r\n            teacher.school.includes(state.filters.school)\r\n          );\r\n        }\r\n        \r\n        if (state.filters.major) {\r\n          filteredTeachers = filteredTeachers.filter(teacher => \r\n            teacher.major.includes(state.filters.major)\r\n          );\r\n        }\r\n        \r\n        if (state.filters.keyword) {\r\n          filteredTeachers = filteredTeachers.filter(teacher => \r\n            teacher.nickname.includes(state.filters.keyword) || \r\n            teacher.school.includes(state.filters.keyword) || \r\n            teacher.major.includes(state.filters.keyword)\r\n          );\r\n        }\r\n        \r\n        // 计算分页信息\r\n        const page = params.page || 1;\r\n        const limit = params.limit || state.pageSize;\r\n        const total = filteredTeachers.length;\r\n        const totalPages = Math.ceil(total / limit);\r\n        \r\n        // 切片获取当前页数据\r\n        const startIndex = (page - 1) * limit;\r\n        const endIndex = startIndex + limit;\r\n        const pageTeachers = filteredTeachers.slice(startIndex, endIndex);\r\n        \r\n        commit(SET_TEACHERS, {\r\n          list: pageTeachers,\r\n          pagination: {\r\n            page: page,\r\n            pageSize: limit,\r\n            total: total,\r\n            totalPages: totalPages\r\n          }\r\n        });\r\n        \r\n        return { success: true, data: pageTeachers };\r\n      }\r\n      \r\n      // 真实API调用\r\n      const response = await match.getRecommendedTeachers({\r\n        ...state.filters,\r\n        page: params.page || 1,\r\n        limit: params.limit || state.pageSize\r\n      });\r\n      \r\n      if (!response.success) {\r\n        throw response.error || { message: '获取老师列表失败' };\r\n      }\r\n      \r\n      commit(SET_TEACHERS, {\r\n        list: response.data.teachers || [],\r\n        pagination: {\r\n          page: params.page || 1,\r\n          pageSize: params.limit || state.pageSize,\r\n          total: response.data.total || 0,\r\n          totalPages: Math.ceil((response.data.total || 0) / (params.limit || state.pageSize))\r\n        }\r\n      });\r\n      \r\n      return { success: true, data: response.data.teachers };\r\n    } catch (error) {\r\n      console.error('获取老师列表失败:', error);\r\n      commit(SET_ERROR, error);\r\n      return { success: false, error };\r\n    } finally {\r\n      commit(SET_LOADING, false);\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 加载更多老师\r\n   * @param {Object} context - Vuex上下文\r\n   * @returns {Promise<Object>} 结果对象\r\n   */\r\n  async loadMoreTeachers({ commit, state }) {\r\n    // 如果没有更多数据或正在加载，不执行操作\r\n    if (state.currentPage >= state.totalPages || state.loadingMore) {\r\n      return { success: true, data: state.teachers, noMoreData: true };\r\n    }\r\n    \r\n    try {\r\n      commit(SET_LOADING_MORE, true);\r\n      commit(SET_ERROR, null);\r\n      \r\n      const nextPage = state.currentPage + 1;\r\n      \r\n      // TODO: 使用真实API接口时删除此模拟数据代码块\r\n      if (process.env.NODE_ENV === 'development') {\r\n        await mock.mockDelay(500);\r\n        \r\n        // 过滤模拟数据\r\n        let filteredTeachers = [...mock.mockTeachers];\r\n        \r\n        // 应用筛选条件\r\n        if (state.filters.school) {\r\n          filteredTeachers = filteredTeachers.filter(teacher => \r\n            teacher.school.includes(state.filters.school)\r\n          );\r\n        }\r\n        \r\n        if (state.filters.major) {\r\n          filteredTeachers = filteredTeachers.filter(teacher => \r\n            teacher.major.includes(state.filters.major)\r\n          );\r\n        }\r\n        \r\n        if (state.filters.keyword) {\r\n          filteredTeachers = filteredTeachers.filter(teacher => \r\n            teacher.nickname.includes(state.filters.keyword) || \r\n            teacher.school.includes(state.filters.keyword) || \r\n            teacher.major.includes(state.filters.keyword)\r\n          );\r\n        }\r\n        \r\n        // 计算分页信息\r\n        const limit = state.pageSize;\r\n        const total = filteredTeachers.length;\r\n        const totalPages = Math.ceil(total / limit);\r\n        \r\n        // 切片获取当前页数据\r\n        const startIndex = (nextPage - 1) * limit;\r\n        const endIndex = startIndex + limit;\r\n        const pageTeachers = filteredTeachers.slice(startIndex, endIndex);\r\n        \r\n        commit(ADD_TEACHERS, {\r\n          list: pageTeachers,\r\n          pagination: {\r\n            page: nextPage,\r\n            pageSize: limit,\r\n            total: total,\r\n            totalPages: totalPages\r\n          }\r\n        });\r\n        \r\n        return { \r\n          success: true, \r\n          data: pageTeachers,\r\n          noMoreData: nextPage >= totalPages\r\n        };\r\n      }\r\n      \r\n      // 真实API调用\r\n      const response = await match.getRecommendedTeachers({\r\n        ...state.filters,\r\n        page: nextPage,\r\n        limit: state.pageSize\r\n      });\r\n      \r\n      if (!response.success) {\r\n        throw response.error || { message: '加载更多老师失败' };\r\n      }\r\n      \r\n      commit(ADD_TEACHERS, {\r\n        list: response.data.teachers || [],\r\n        pagination: {\r\n          page: nextPage,\r\n          pageSize: state.pageSize,\r\n          total: response.data.total || 0,\r\n          totalPages: Math.ceil((response.data.total || 0) / state.pageSize)\r\n        }\r\n      });\r\n      \r\n      return { \r\n        success: true, \r\n        data: response.data.teachers,\r\n        noMoreData: nextPage >= Math.ceil((response.data.total || 0) / state.pageSize)\r\n      };\r\n    } catch (error) {\r\n      console.error('加载更多老师失败:', error);\r\n      commit(SET_ERROR, error);\r\n      return { success: false, error };\r\n    } finally {\r\n      commit(SET_LOADING_MORE, false);\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 搜索老师\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Object} filters - 筛选条件\r\n   * @returns {Promise<Object>} 结果对象\r\n   */\r\n  async searchTeachers({ commit, state, dispatch }, filters = {}) {\r\n    // 先设置筛选条件\r\n    commit(SET_FILTERS, filters);\r\n    \r\n    // 重置页码\r\n    return dispatch('getTeachers', { page: 1, limit: state.pageSize });\r\n  },\r\n  \r\n  /**\r\n   * @description 重置筛选条件并获取老师列表\r\n   * @param {Object} context - Vuex上下文\r\n   * @returns {Promise<Object>} 结果对象\r\n   */\r\n  async resetAndGetTeachers({ commit, dispatch }) {\r\n    commit(RESET_FILTERS);\r\n    return dispatch('getTeachers', { page: 1 });\r\n  },\r\n  \r\n  /**\r\n   * @description 选择老师\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {Number} id - 老师ID\r\n   */\r\n  selectTeacher({ commit }, id) {\r\n    commit(SET_SELECTED_TEACHER, id);\r\n  },\r\n  \r\n  /**\r\n   * @description 清除错误信息\r\n   * @param {Object} context - Vuex上下文\r\n   */\r\n  clearError({ commit }) {\r\n    commit(SET_ERROR, null);\r\n  },\r\n  \r\n  /**\r\n   * @description 设置导航类型\r\n   * @param {Object} context - Vuex上下文\r\n   * @param {String} type - 导航类型\r\n   */\r\n  setNavigationType({ commit }, type) {\r\n    commit(SET_NAVIGATION_TYPE, type);\r\n  },\r\n  \r\n  /**\r\n   * @description 设置为聊天导航类型\r\n   * @param {Object} context - Vuex上下文\r\n   */\r\n  navigateToChat({ commit }) {\r\n    commit(SET_NAVIGATION_TYPE, NAV_TYPE.CHAT);\r\n  },\r\n  \r\n  /**\r\n   * @description 设置为老师详情导航类型\r\n   * @param {Object} context - Vuex上下文\r\n   */\r\n  navigateToTeacherDetail({ commit }) {\r\n    commit(SET_NAVIGATION_TYPE, NAV_TYPE.TEACHER_DETAIL);\r\n  },\r\n  \r\n  /**\r\n   * @description 设置为默认导航类型\r\n   * @param {Object} context - Vuex上下文\r\n   */\r\n  navigateDefault({ commit }) {\r\n    commit(SET_NAVIGATION_TYPE, NAV_TYPE.DEFAULT);\r\n  },\r\n  \r\n  /**\r\n   * @description 根据导航类型判断是否需要清空筛选条件\r\n   * @param {Object} context - Vuex上下文\r\n   * @returns {Boolean} 是否执行了清空操作\r\n   */\r\n  handleNavigationExit({ state, commit, dispatch }) {\r\n    const navType = state.navigationType;\r\n    \r\n    // 如果是默认导航（即普通退出），则清空筛选条件\r\n    if (navType === NAV_TYPE.DEFAULT) {\r\n      commit(RESET_FILTERS);\r\n      return true;\r\n    }\r\n    \r\n    // 重置导航类型为默认，但不清空筛选条件\r\n    commit(SET_NAVIGATION_TYPE, NAV_TYPE.DEFAULT);\r\n    return false;\r\n  },\r\n  \r\n  /**\r\n   * @description 获取保存的导航类型\r\n   * @param {Object} context - Vuex上下文\r\n   * @returns {String} 导航类型\r\n   */\r\n  getSavedNavigationType({ commit }) {\r\n    try {\r\n      const navType = uni.getStorageSync(NAVIGATION_TYPE_KEY) || NAV_TYPE.DEFAULT;\r\n      commit(SET_NAVIGATION_TYPE, navType);\r\n      return navType;\r\n    } catch (e) {\r\n      console.error('获取导航类型失败', e);\r\n      return NAV_TYPE.DEFAULT;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * @description 清除导航类型\r\n   * @param {Object} context - Vuex上下文\r\n   */\r\n  clearNavigationType({ commit }) {\r\n    try {\r\n      uni.removeStorageSync(NAVIGATION_TYPE_KEY);\r\n      commit(SET_NAVIGATION_TYPE, NAV_TYPE.DEFAULT);\r\n    } catch (e) {\r\n      console.error('清除导航类型失败', e);\r\n    }\r\n  }\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  getters,\r\n  mutations,\r\n  actions\r\n}; "],"names":["uni","state","mock","match.getRecommendedTeachers"],"mappings":"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"}