{"version":3,"file":"match.api.js","sources":["store/services/match.api.js"],"sourcesContent":["/**\r\n * @description 匹配功能API服务\r\n * 提供老师匹配、筛选和沟通相关功能\r\n */\r\nimport { API_BASE_URL } from '../../config';\r\n\r\nconst API_PREFIX = `${API_BASE_URL}/api/match`;\r\n\r\n// 错误码和消息映射\r\nconst ERROR_MESSAGES = {\r\n  NETWORK_ERROR: '网络连接失败，请检查您的网络设置',\r\n  TIMEOUT_ERROR: '请求超时，请稍后再试',\r\n  SERVER_ERROR: '服务器错误，请稍后再试',\r\n  AUTH_ERROR: '身份验证失败，请重新登录',\r\n  INVALID_PARAM: '参数错误',\r\n  RATE_LIMIT: '请求过于频繁，请稍后再试',\r\n  UNKNOWN_ERROR: '未知错误，请稍后再试'\r\n};\r\n\r\n/**\r\n * @description 使用uni.request封装网络请求\r\n * @param {Object} options - 请求选项\r\n * @returns {Promise<Object>} 请求结果\r\n */\r\nconst request = (options) => {\r\n  return new Promise((resolve, reject) => {\r\n    uni.request({\r\n      url: options.url,\r\n      data: options.data,\r\n      method: options.method || 'GET',\r\n      header: options.headers || {},\r\n      success: (res) => {\r\n        resolve(res);\r\n      },\r\n      fail: (err) => {\r\n        reject(err);\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n * @description 处理响应错误\r\n * @param {Object} error - 错误对象\r\n * @returns {Object} 格式化的错误对象\r\n */\r\nconst handleError = (error) => {\r\n  let errorMessage = '';\r\n  \r\n  // 优先使用后端返回的错误消息\r\n  if (error.data && error.data.message) {\r\n    errorMessage = error.data.message;\r\n  } else if (error.data && error.data.error && error.data.error.message) {\r\n    errorMessage = error.data.error.message;\r\n  } else if (error.statusCode) {\r\n    // 如果没有具体错误消息，根据HTTP状态码判断\r\n    if (error.statusCode === 401 || error.statusCode === 403) {\r\n      errorMessage = ERROR_MESSAGES.AUTH_ERROR;\r\n    } else if (error.statusCode === 404) {\r\n      errorMessage = '请求的资源不存在';\r\n    } else if (error.statusCode === 429) {\r\n      errorMessage = ERROR_MESSAGES.RATE_LIMIT;\r\n    } else if (error.statusCode >= 500) {\r\n      errorMessage = ERROR_MESSAGES.SERVER_ERROR;\r\n    } else {\r\n      errorMessage = ERROR_MESSAGES.UNKNOWN_ERROR;\r\n    }\r\n  } else {\r\n    // 网络错误或其他错误\r\n    errorMessage = ERROR_MESSAGES.NETWORK_ERROR;\r\n  }\r\n  \r\n  return {\r\n    message: errorMessage,\r\n    originalError: error,\r\n    statusCode: error.statusCode || 0\r\n  };\r\n};\r\n\r\n/**\r\n * @description 获取推荐老师列表\r\n * @param {Object} params - 查询参数\r\n * @param {String} params.role - 当前用户角色，'teacher'或'student'\r\n * @param {Number} params.page - 页码\r\n * @param {Number} params.limit - 每页数量\r\n * @returns {Promise<Object>} 返回老师列表和分页信息\r\n */\r\nexport const getRecommendedTeachers = async (params = {}) => {\r\n  try {\r\n    const response = await request({\r\n      url: `${API_PREFIX}/teachers/recommended`,\r\n      method: 'GET',\r\n      data: params\r\n    });\r\n    return { success: true, data: response.data };\r\n  } catch (error) {\r\n    console.error('获取推荐老师列表失败:', error);\r\n    return { success: false, error: handleError(error) };\r\n  }\r\n};\r\n\r\n/**\r\n * @description 搜索老师\r\n * @param {Object} params - 搜索参数\r\n * @param {String} params.keyword - 搜索关键词\r\n * @param {String} params.school - 学校筛选\r\n * @param {String} params.major - 专业筛选\r\n * @param {String} params.sortBy - 排序方式\r\n * @param {Number} params.page - 页码\r\n * @param {Number} params.limit - 每页数量\r\n * @returns {Promise<Object>} 返回老师列表和分页信息\r\n */\r\nexport const searchTeachers = async (params = {}) => {\r\n  try {\r\n    const response = await request({\r\n      url: `${API_PREFIX}/teachers/search`,\r\n      method: 'GET',\r\n      data: params\r\n    });\r\n    return { success: true, data: response.data };\r\n  } catch (error) {\r\n    console.error('搜索老师失败:', error);\r\n    return { success: false, error: handleError(error) };\r\n  }\r\n};\r\n\r\n/**\r\n * @description 获取学校列表\r\n * @param {String} keyword - 搜索关键词\r\n * @returns {Promise<Array>} 返回学校列表\r\n */\r\nexport const getSchoolList = async (keyword = '') => {\r\n  try {\r\n    const response = await request({\r\n      url: `${API_PREFIX}/schools`,\r\n      method: 'GET',\r\n      data: { keyword }\r\n    });\r\n    return { success: true, data: response.data };\r\n  } catch (error) {\r\n    console.error('获取学校列表失败:', error);\r\n    return { success: false, error: handleError(error) };\r\n  }\r\n};\r\n\r\n/**\r\n * @description 获取专业列表\r\n * @param {String} school - 学校名称（可选，传入时获取该学校的专业列表）\r\n * @returns {Promise<Array>} 返回专业列表\r\n */\r\nexport const getMajorList = async (school = '') => {\r\n  try {\r\n    const response = await request({\r\n      url: `${API_PREFIX}/majors`,\r\n      method: 'GET',\r\n      data: { school }\r\n    });\r\n    return { success: true, data: response.data };\r\n  } catch (error) {\r\n    console.error('获取专业列表失败:', error);\r\n    return { success: false, error: handleError(error) };\r\n  }\r\n};\r\n\r\n/**\r\n * @description 申请与老师沟通\r\n * @param {Number} teacherId - 老师ID\r\n * @param {String} message - 初始消息（可选）\r\n * @returns {Promise<Object>} 返回申请结果\r\n */\r\nexport const applyForCommunication = async (teacherId, message = '') => {\r\n  try {\r\n    const response = await request({\r\n      url: `${API_PREFIX}/communicate`,\r\n      method: 'POST',\r\n      data: { teacherId, message }\r\n    });\r\n    return { success: true, data: response.data };\r\n  } catch (error) {\r\n    console.error('申请与老师沟通失败:', error);\r\n    return { success: false, error: handleError(error) };\r\n  }\r\n};\r\n\r\n/**\r\n * @description 获取老师详细信息\r\n * @param {Number} teacherId - 老师ID\r\n * @returns {Promise<Object>} 返回老师详细信息\r\n */\r\nexport const getTeacherDetail = async (teacherId) => {\r\n  try {\r\n    const response = await request({\r\n      url: `${API_PREFIX}/teachers/${teacherId}`,\r\n      method: 'GET'\r\n    });\r\n    return { success: true, data: response.data };\r\n  } catch (error) {\r\n    console.error('获取老师详细信息失败:', error);\r\n    return { success: false, error: handleError(error) };\r\n  }\r\n}; "],"names":["API_BASE_URL","uni"],"mappings":"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"}