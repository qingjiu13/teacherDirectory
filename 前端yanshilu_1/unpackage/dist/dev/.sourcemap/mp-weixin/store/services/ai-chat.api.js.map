{"version":3,"file":"ai-chat.api.js","sources":["store/services/ai-chat.api.js"],"sourcesContent":["/**\r\n * @description AI聊天相关API服务\r\n */\r\n\r\n/**\r\n * @description 获取历史会话列表\r\n * @returns {Promise<Object>} 会话列表\r\n */\r\nexport const getConversations = () => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve({\r\n        success: true,\r\n        data: [\r\n          { \r\n            id: 'c1', \r\n            title: '英语学习会话', \r\n            lastMessage: '如何学好英语写作?', \r\n            timestamp: Date.now() - 3600000,\r\n            unread: false\r\n          },\r\n          { \r\n            id: 'c2', \r\n            title: '数学问题求解', \r\n            lastMessage: '请解释一下微积分基本定理', \r\n            timestamp: Date.now() - 86400000,\r\n            unread: false\r\n          },\r\n          { \r\n            id: 'c3', \r\n            title: '编程辅导', \r\n            lastMessage: '如何优化这段代码?', \r\n            timestamp: Date.now() - 172800000,\r\n            unread: false\r\n          }\r\n        ]\r\n      });\r\n    }, 300);\r\n  });\r\n};\r\n\r\n/**\r\n * @description 获取特定会话的消息历史\r\n * @param {string} conversationId - 会话ID\r\n * @returns {Promise<Object>} 消息历史\r\n */\r\nexport const getMessages = (conversationId) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve({\r\n        success: true,\r\n        data: {\r\n          conversationId,\r\n          title: conversationId === 'c1' ? '英语学习会话' : \r\n                 conversationId === 'c2' ? '数学问题求解' : '编程辅导',\r\n          messages: [\r\n            {\r\n              id: `m${Date.now()}-1`,\r\n              role: 'user',\r\n              content: '你好，我想学习一些新知识',\r\n              timestamp: Date.now() - 3600000\r\n            },\r\n            {\r\n              id: `m${Date.now()}-2`,\r\n              role: 'assistant',\r\n              content: '你好！我很乐意帮助你学习新知识。请告诉我你对哪个领域或主题感兴趣，我们可以从那里开始。',\r\n              timestamp: Date.now() - 3580000\r\n            },\r\n            {\r\n              id: `m${Date.now()}-3`,\r\n              role: 'user',\r\n              content: conversationId === 'c1' ? '如何学好英语写作?' : \r\n                       conversationId === 'c2' ? '请解释一下微积分基本定理' : '如何优化这段代码?',\r\n              timestamp: Date.now() - 3500000\r\n            }\r\n          ]\r\n        }\r\n      });\r\n    }, 500);\r\n  });\r\n};\r\n\r\n/**\r\n * @description 发送消息到AI\r\n * @param {Object} message - 消息对象\r\n * @param {string} message.conversationId - 会话ID\r\n * @param {string} message.content - 消息内容\r\n * @returns {Promise<Object>} AI回复\r\n */\r\nexport const sendMessage = (message) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve({\r\n        success: true,\r\n        data: {\r\n          id: `m${Date.now()}-response`,\r\n          role: 'assistant',\r\n          content: message.conversationId === 'c1' ? \r\n            '要提高英语写作能力，可以从以下几个方面入手：1. 多阅读英语原版材料；2. 每天坚持写作练习；3. 学习句型和词汇；4. 寻求反馈和修改；5. 使用写作工具辅助学习。' : \r\n            message.conversationId === 'c2' ? \r\n            '微积分基本定理是连接微分学和积分学的桥梁，它表明定积分可以通过原函数的差值计算。具体来说，如果函数f在闭区间[a,b]上连续，F是f的一个原函数，那么∫(a,b)f(x)dx = F(b) - F(a)。' : \r\n            '代码优化可以从算法效率、内存使用、代码结构等多方面考虑。建议使用更高效的算法、避免重复计算、减少不必要的内存分配、使用适当的数据结构等。没有看到具体代码，无法提供更详细的优化建议。',\r\n          timestamp: Date.now()\r\n        }\r\n      });\r\n    }, 1000);\r\n  });\r\n};\r\n\r\n/**\r\n * @description 创建新会话\r\n * @returns {Promise<Object>} 新会话信息\r\n */\r\nexport const createConversation = () => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve({\r\n        success: true,\r\n        data: {\r\n          id: `c${Date.now()}`,\r\n          title: '新会话',\r\n          lastMessage: '',\r\n          timestamp: Date.now(),\r\n          unread: false\r\n        }\r\n      });\r\n    }, 300);\r\n  });\r\n};\r\n\r\n/**\r\n * @description 删除会话\r\n * @param {string} conversationId - 会话ID\r\n * @returns {Promise<Object>} 操作结果\r\n */\r\nexport const deleteConversation = (conversationId) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve({\r\n        success: true,\r\n        message: '会话已删除'\r\n      });\r\n    }, 300);\r\n  });\r\n}; "],"names":[],"mappings":";AAQY,MAAC,mBAAmB,MAAM;AACpC,SAAO,IAAI,QAAQ,CAAC,YAAY;AAC9B,eAAW,MAAM;AACf,cAAQ;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,UACJ;AAAA,YACE,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,aAAa;AAAA,YACb,WAAW,KAAK,IAAG,IAAK;AAAA,YACxB,QAAQ;AAAA,UACT;AAAA,UACD;AAAA,YACE,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,aAAa;AAAA,YACb,WAAW,KAAK,IAAG,IAAK;AAAA,YACxB,QAAQ;AAAA,UACT;AAAA,UACD;AAAA,YACE,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,aAAa;AAAA,YACb,WAAW,KAAK,IAAG,IAAK;AAAA,YACxB,QAAQ;AAAA,UACT;AAAA,QACF;AAAA,MACT,CAAO;AAAA,IACF,GAAE,GAAG;AAAA,EACV,CAAG;AACH;AAOY,MAAC,cAAc,CAAC,mBAAmB;AAC7C,SAAO,IAAI,QAAQ,CAAC,YAAY;AAC9B,eAAW,MAAM;AACf,cAAQ;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,UACJ;AAAA,UACA,OAAO,mBAAmB,OAAO,WAC1B,mBAAmB,OAAO,WAAW;AAAA,UAC5C,UAAU;AAAA,YACR;AAAA,cACE,IAAI,IAAI,KAAK,IAAG,CAAE;AAAA,cAClB,MAAM;AAAA,cACN,SAAS;AAAA,cACT,WAAW,KAAK,IAAG,IAAK;AAAA,YACzB;AAAA,YACD;AAAA,cACE,IAAI,IAAI,KAAK,IAAG,CAAE;AAAA,cAClB,MAAM;AAAA,cACN,SAAS;AAAA,cACT,WAAW,KAAK,IAAG,IAAK;AAAA,YACzB;AAAA,YACD;AAAA,cACE,IAAI,IAAI,KAAK,IAAG,CAAE;AAAA,cAClB,MAAM;AAAA,cACN,SAAS,mBAAmB,OAAO,cAC1B,mBAAmB,OAAO,iBAAiB;AAAA,cACpD,WAAW,KAAK,IAAG,IAAK;AAAA,YACzB;AAAA,UACF;AAAA,QACF;AAAA,MACT,CAAO;AAAA,IACF,GAAE,GAAG;AAAA,EACV,CAAG;AACH;AASY,MAAC,cAAc,CAAC,YAAY;AACtC,SAAO,IAAI,QAAQ,CAAC,YAAY;AAC9B,eAAW,MAAM;AACf,cAAQ;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,UACJ,IAAI,IAAI,KAAK,IAAG,CAAE;AAAA,UAClB,MAAM;AAAA,UACN,SAAS,QAAQ,mBAAmB,OAClC,wFACA,QAAQ,mBAAmB,OAC3B,2GACA;AAAA,UACF,WAAW,KAAK,IAAK;AAAA,QACtB;AAAA,MACT,CAAO;AAAA,IACF,GAAE,GAAI;AAAA,EACX,CAAG;AACH;AAMY,MAAC,qBAAqB,MAAM;AACtC,SAAO,IAAI,QAAQ,CAAC,YAAY;AAC9B,eAAW,MAAM;AACf,cAAQ;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,UACJ,IAAI,IAAI,KAAK,IAAK,CAAA;AAAA,UAClB,OAAO;AAAA,UACP,aAAa;AAAA,UACb,WAAW,KAAK,IAAK;AAAA,UACrB,QAAQ;AAAA,QACT;AAAA,MACT,CAAO;AAAA,IACF,GAAE,GAAG;AAAA,EACV,CAAG;AACH;AAOY,MAAC,qBAAqB,CAAC,mBAAmB;AACpD,SAAO,IAAI,QAAQ,CAAC,YAAY;AAC9B,eAAW,MAAM;AACf,cAAQ;AAAA,QACN,SAAS;AAAA,QACT,SAAS;AAAA,MACjB,CAAO;AAAA,IACF,GAAE,GAAG;AAAA,EACV,CAAG;AACH;;;;;;"}