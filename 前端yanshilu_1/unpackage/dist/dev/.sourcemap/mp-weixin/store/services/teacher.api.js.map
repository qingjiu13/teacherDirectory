{"version":3,"file":"teacher.api.js","sources":["store/services/teacher.api.js"],"sourcesContent":["/**\r\n * @description 老师匹配相关API服务\r\n */\r\n\r\n/**\r\n * @description 获取老师列表\r\n * @param {Object} params - 查询参数\r\n * @param {string} [params.subject] - 科目\r\n * @param {string} [params.level] - 级别\r\n * @param {number} [params.page=1] - 页码\r\n * @param {number} [params.pageSize=10] - 每页数量\r\n * @returns {Promise<Object>} 老师列表\r\n */\r\nexport const getTeachers = (params = {}) => {\r\n  const { subject, level, page = 1, pageSize = 10 } = params;\r\n  \r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      // 模拟从服务器获取数据\r\n      const totalCount = 100;\r\n      const teachers = Array.from({ length: Math.min(pageSize, totalCount - (page - 1) * pageSize) }, (_, index) => {\r\n        const id = (page - 1) * pageSize + index + 1;\r\n        return {\r\n          id: `t${id}`,\r\n          name: `老师${id}`,\r\n          avatar: `https://example.com/avatars/teacher${id}.png`,\r\n          subject: subject || ['数学', '英语', '物理', '化学', '生物'][id % 5],\r\n          level: level || ['小学', '初中', '高中', '大学'][id % 4],\r\n          rating: 4 + (id % 10) / 10,\r\n          price: 100 + (id % 20) * 5,\r\n          intro: `我是一名有着多年教学经验的${['数学', '英语', '物理', '化学', '生物'][id % 5]}老师，擅长${['小学', '初中', '高中', '大学'][id % 4]}课程辅导。`,\r\n          tags: ['耐心', '专业', '经验丰富'].slice(0, 1 + id % 3),\r\n          availableTime: [\r\n            { day: '周一', slots: ['9:00-11:00', '14:00-16:00'] },\r\n            { day: '周三', slots: ['9:00-11:00', '14:00-16:00'] },\r\n            { day: '周五', slots: ['9:00-11:00', '14:00-16:00'] }\r\n          ]\r\n        };\r\n      });\r\n      \r\n      resolve({\r\n        success: true,\r\n        data: {\r\n          list: teachers,\r\n          pagination: {\r\n            page,\r\n            pageSize,\r\n            total: totalCount,\r\n            totalPages: Math.ceil(totalCount / pageSize)\r\n          }\r\n        }\r\n      });\r\n    }, 500);\r\n  });\r\n};\r\n\r\n/**\r\n * @description 获取老师详情\r\n * @param {string} teacherId - 老师ID\r\n * @returns {Promise<Object>} 老师详情\r\n */\r\nexport const getTeacherDetail = (teacherId) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      const id = parseInt(teacherId.replace('t', ''));\r\n      \r\n      resolve({\r\n        success: true,\r\n        data: {\r\n          id: teacherId,\r\n          name: `老师${id}`,\r\n          avatar: `https://example.com/avatars/teacher${id}.png`,\r\n          subject: ['数学', '英语', '物理', '化学', '生物'][id % 5],\r\n          level: ['小学', '初中', '高中', '大学'][id % 4],\r\n          rating: 4 + (id % 10) / 10,\r\n          price: 100 + (id % 20) * 5,\r\n          intro: `我是一名有着多年教学经验的${['数学', '英语', '物理', '化学', '生物'][id % 5]}老师，擅长${['小学', '初中', '高中', '大学'][id % 4]}课程辅导。`,\r\n          education: '北京大学硕士',\r\n          experience: `${5 + id % 10}年教学经验`,\r\n          tags: ['耐心', '专业', '经验丰富'].slice(0, 1 + id % 3),\r\n          availableTime: [\r\n            { day: '周一', slots: ['9:00-11:00', '14:00-16:00'] },\r\n            { day: '周三', slots: ['9:00-11:00', '14:00-16:00'] },\r\n            { day: '周五', slots: ['9:00-11:00', '14:00-16:00'] }\r\n          ],\r\n          courses: [\r\n            { id: 'c1', title: '数学提高班', price: 200, duration: '10课时' },\r\n            { id: 'c2', title: '一对一辅导', price: 300, duration: '按需' }\r\n          ],\r\n          comments: [\r\n            { id: 'cm1', user: '学生A', content: '老师讲解非常清晰', rating: 5, date: '2023-09-01' },\r\n            { id: 'cm2', user: '学生B', content: '课程安排合理，进步很大', rating: 4, date: '2023-08-15' }\r\n          ]\r\n        }\r\n      });\r\n    }, 600);\r\n  });\r\n};\r\n\r\n/**\r\n * @description 预约老师\r\n * @param {Object} bookingInfo - 预约信息\r\n * @param {string} bookingInfo.teacherId - 老师ID\r\n * @param {string} bookingInfo.day - 预约日期\r\n * @param {string} bookingInfo.timeSlot - 预约时间段\r\n * @param {string} bookingInfo.subject - 科目\r\n * @param {string} bookingInfo.message - 留言\r\n * @returns {Promise<Object>} 预约结果\r\n */\r\nexport const bookTeacher = (bookingInfo) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve({\r\n        success: true,\r\n        data: {\r\n          bookingId: `booking_${Date.now()}`,\r\n          teacherId: bookingInfo.teacherId,\r\n          studentId: 's1', // 假设当前学生ID\r\n          status: 'pending',\r\n          day: bookingInfo.day,\r\n          timeSlot: bookingInfo.timeSlot,\r\n          subject: bookingInfo.subject,\r\n          message: bookingInfo.message,\r\n          createdAt: new Date().toISOString()\r\n        },\r\n        message: '预约请求已发送，等待老师确认'\r\n      });\r\n    }, 800);\r\n  });\r\n};\r\n\r\n/**\r\n * @description 获取预约列表\r\n * @param {Object} params - 查询参数\r\n * @param {string} [params.role='student'] - 角色(student/teacher)\r\n * @param {string} [params.status] - 状态(pending/confirmed/cancelled/completed)\r\n * @returns {Promise<Object>} 预约列表\r\n */\r\nexport const getBookings = (params = {}) => {\r\n  const { role = 'student', status } = params;\r\n  \r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      const bookings = Array.from({ length: 5 }, (_, index) => {\r\n        const statuses = ['pending', 'confirmed', 'cancelled', 'completed'];\r\n        const currentStatus = status || statuses[index % statuses.length];\r\n        \r\n        return {\r\n          id: `booking_${Date.now() - index * 86400000}`,\r\n          teacherId: `t${index + 1}`,\r\n          teacherName: `老师${index + 1}`,\r\n          teacherAvatar: `https://example.com/avatars/teacher${index + 1}.png`,\r\n          studentId: 's1',\r\n          studentName: '当前学生',\r\n          studentAvatar: 'https://example.com/avatars/student1.png',\r\n          status: currentStatus,\r\n          day: ['周一', '周三', '周五'][index % 3],\r\n          timeSlot: ['9:00-11:00', '14:00-16:00'][index % 2],\r\n          subject: ['数学', '英语', '物理'][index % 3],\r\n          message: `我想学习${['数学', '英语', '物理'][index % 3]}中的难点问题`,\r\n          createdAt: new Date(Date.now() - index * 86400000).toISOString()\r\n        };\r\n      });\r\n      \r\n      resolve({\r\n        success: true,\r\n        data: bookings\r\n      });\r\n    }, 500);\r\n  });\r\n}; "],"names":[],"mappings":"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"}