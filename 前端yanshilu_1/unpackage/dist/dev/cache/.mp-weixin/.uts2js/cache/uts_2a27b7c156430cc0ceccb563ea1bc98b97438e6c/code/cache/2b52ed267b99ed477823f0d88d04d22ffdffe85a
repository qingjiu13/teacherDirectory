{"code":"import { __awaiter } from \"tslib\";\nimport { defineComponent } from \"vue\";\nimport choiceSelected from '../../components/combobox/combobox';\nimport { sendChatMessage, abortRequest } from '../../api/API.js';\n// 消息类型常量\nconst MESSAGE_TYPE = new UTSJSONObject({\n    USER: 'user',\n    AI: 'ai',\n    SYSTEM: 'system'\n}\n// 消息状态常量\n);\n// 消息状态常量\nconst MESSAGE_STATUS = new UTSJSONObject({\n    SENDING: 'sending',\n    SENT: 'sent',\n    ERROR: 'error'\n}\n// 对话模式常量\n);\n// 对话模式常量\nconst CHAT_MODE = new UTSJSONObject({\n    GENERAL: 'general',\n    SCHOOL: 'school',\n    CAREER: 'career'\n});\nexport default defineComponent({\n    components: {\n        choiceSelected\n    },\n    data() {\n        return {\n            // 用户基本信息\n            userInfo: new UTSJSONObject({\n                school: '',\n                major: ''\n            }),\n            // 消息相关\n            inputValue: '',\n            messages: [],\n            isProcessing: false,\n            isFullLoading: false,\n            loadingText: '正在加载...',\n            autoScrollId: '',\n            // 对话模式\n            currentMode: CHAT_MODE.GENERAL,\n            // 学校和专业选择相关\n            schoolIndex: -1,\n            majorIndex: -1,\n            schoolList: [\n                new UTSJSONObject({ choiceItemId: \"bjdx\", choiceItemContent: \"北京大学\" }),\n                new UTSJSONObject({ choiceItemId: \"qhdx\", choiceItemContent: \"清华大学\" }),\n                new UTSJSONObject({ choiceItemId: \"fddx\", choiceItemContent: \"复旦大学\" }),\n                new UTSJSONObject({ choiceItemId: \"zjdx\", choiceItemContent: \"浙江大学\" }),\n                new UTSJSONObject({ choiceItemId: \"njdx\", choiceItemContent: \"南京大学\" }),\n                new UTSJSONObject({ choiceItemId: \"scdx\", choiceItemContent: \"四川大学\" }),\n                new UTSJSONObject({ choiceItemId: \"whdx\", choiceItemContent: \"武汉大学\" }),\n                new UTSJSONObject({ choiceItemId: \"zsdx\", choiceItemContent: \"中山大学\" }),\n                new UTSJSONObject({ choiceItemId: \"xjtu\", choiceItemContent: \"西安交通大学\" }),\n                new UTSJSONObject({ choiceItemId: \"hust\", choiceItemContent: \"华中科技大学\" }),\n                new UTSJSONObject({ choiceItemId: \"hit\", choiceItemContent: \"哈尔滨工业大学\" }),\n                new UTSJSONObject({ choiceItemId: \"sjtu\", choiceItemContent: \"上海交通大学\" })\n            ],\n            majorList: [\n                new UTSJSONObject({ choiceItemId: \"jsjkx\", choiceItemContent: \"计算机科学\" }),\n                new UTSJSONObject({ choiceItemId: \"rjgc\", choiceItemContent: \"软件工程\" }),\n                new UTSJSONObject({ choiceItemId: \"sx\", choiceItemContent: \"数学\" }),\n                new UTSJSONObject({ choiceItemId: \"wl\", choiceItemContent: \"物理\" }),\n                new UTSJSONObject({ choiceItemId: \"hx\", choiceItemContent: \"化学\" }),\n                new UTSJSONObject({ choiceItemId: \"sw\", choiceItemContent: \"生物\" }),\n                new UTSJSONObject({ choiceItemId: \"jdxy\", choiceItemContent: \"机电工程\" }),\n                new UTSJSONObject({ choiceItemId: \"dqxy\", choiceItemContent: \"电气工程\" }),\n                new UTSJSONObject({ choiceItemId: \"jzxy\", choiceItemContent: \"建筑学\" }),\n                new UTSJSONObject({ choiceItemId: \"lyxy\", choiceItemContent: \"临床医学\" }),\n                new UTSJSONObject({ choiceItemId: \"yyxy\", choiceItemContent: \"药学\" }),\n                new UTSJSONObject({ choiceItemId: \"glxy\", choiceItemContent: \"管理学\" }),\n                new UTSJSONObject({ choiceItemId: \"jjxy\", choiceItemContent: \"经济学\" }),\n                new UTSJSONObject({ choiceItemId: \"flxy\", choiceItemContent: \"法学\" })\n            ],\n            // 滚动相关\n            isAutoScrollEnabled: true,\n            // 当前会话的请求控制器\n            currentController: null,\n            // 自定义的上下文信息\n            contextInfo: new UTSJSONObject({})\n        };\n    },\n    onLoad() {\n        /**\n         * @description 页面加载时的处理逻辑\n         */\n        // 尝试获取用户信息并初始化\n        this.getUserInfo();\n        // 添加欢迎消息\n        this.addSystemMessage('欢迎使用研师录AI助手，请选择您的所在学校和专业，然后开始提问');\n    },\n    onUnload() {\n        // 页面卸载时中断所有未完成的请求\n        this.abortCurrentRequest();\n    },\n    onReady() {\n        // 页面渲染完成\n        // 解决在某些平台上可能因为异步操作导致的定位问题\n        setTimeout(() => {\n            this.updateLayout();\n        }, 300);\n    },\n    methods: {\n        /**\n         * @description 更新布局，解决可能的定位问题\n         */\n        updateLayout() {\n            // 微信小程序环境下特殊处理\n            // 这里可以添加特定于微信小程序的布局调整\n        },\n        /**\n         * @description 获取用户信息\n         */\n        getUserInfo() {\n            try {\n                const userInfo = uni.getStorageSync('userInfo');\n                if (userInfo) {\n                    const parsedInfo = UTS.JSON.parse(userInfo);\n                    this.userInfo = parsedInfo;\n                    // 根据保存的用户信息设置选择框的索引\n                    if (this.userInfo.school) {\n                        const schoolIndex = this.schoolList.findIndex(item => { return item.choiceItemContent === this.userInfo.school; });\n                        if (schoolIndex !== -1) {\n                            this.schoolIndex = schoolIndex;\n                        }\n                    }\n                    if (this.userInfo.major) {\n                        const majorIndex = this.majorList.findIndex(item => { return item.choiceItemContent === this.userInfo.major; });\n                        if (majorIndex !== -1) {\n                            this.majorIndex = majorIndex;\n                        }\n                    }\n                }\n            }\n            catch (e) {\n                uni.__f__('error', 'at pages/AI/AI.uvue:289', '获取用户信息失败:', e);\n            }\n        },\n        /**\n         * @description 保存用户信息\n         */\n        saveUserInfo() {\n            try {\n                uni.setStorageSync('userInfo', UTS.JSON.stringify(this.userInfo));\n            }\n            catch (e) {\n                uni.__f__('error', 'at pages/AI/AI.uvue:300', '保存用户信息失败:', e);\n                this.showToast('保存用户信息失败，可能影响后续对话');\n            }\n        },\n        /**\n         * @description 页面点击事件，用于关闭下拉框\n         */\n        onPageClick() {\n            // 这里不需要做额外操作，combobox组件会处理自己的关闭逻辑\n        },\n        /**\n         * @description 学校选择事件处理\n         * @param {Number} position - 选择的索引位置\n         */\n        onSchoolClick(position = null) {\n            this.schoolIndex = position;\n            this.userInfo.school = this.schoolList[position].choiceItemContent;\n            this.saveUserInfo();\n            // 更新对话上下文\n            this.updateContextInfo();\n        },\n        /**\n         * @description 专业选择事件处理\n         * @param {Number} position - 选择的索引位置\n         */\n        onMajorClick(position = null) {\n            this.majorIndex = position;\n            this.userInfo.major = this.majorList[position].choiceItemContent;\n            this.saveUserInfo();\n            // 更新对话上下文\n            this.updateContextInfo();\n        },\n        /**\n         * @description 处理学校搜索输入\n         * @param {String} keyword - 搜索关键词\n         */\n        onSchoolSearch(keyword = null) {\n            uni.__f__('log', 'at pages/AI/AI.uvue:341', '学校搜索:', keyword);\n            // 这里可以实现动态学校搜索逻辑，例如从服务器获取匹配的学校\n            // 简单实现：如果需要从服务器获取，可以在这里添加API调用\n        },\n        /**\n         * @description 切换对话模式\n         * @param {String} mode - 对话模式\n         */\n        switchMode(mode = null) {\n            if (this.currentMode === mode)\n                return null;\n            this.currentMode = mode;\n            // 更新对话上下文\n            this.updateContextInfo();\n            // 添加系统消息\n            let modeName = '通用';\n            if (mode === CHAT_MODE.SCHOOL) {\n                modeName = '择校';\n            }\n            else if (mode === CHAT_MODE.CAREER) {\n                modeName = '职业规划';\n            }\n            this.addSystemMessage(`已切换到${modeName}模式`);\n        },\n        /**\n         * @description 更新对话上下文信息\n         */\n        updateContextInfo() {\n            this.contextInfo = new UTSJSONObject({\n                mode: this.currentMode,\n                userSchool: this.userInfo.school || '',\n                userMajor: this.userInfo.major || ''\n            });\n        },\n        /**\n         * @description 添加系统消息\n         * @param {String} content - 消息内容\n         */\n        addSystemMessage(content = null) {\n            this.messages.push({\n                type: MESSAGE_TYPE.SYSTEM,\n                content: content,\n                status: MESSAGE_STATUS.SENT\n            });\n            this.scrollToBottom();\n        },\n        /**\n         * @description 发送消息\n         */\n        sendMessage() {\n            return __awaiter(this, void 0, void 0, function* () {\n                if (!this.inputValue.trim() || this.isProcessing) {\n                    return Promise.resolve(null);\n                }\n                // 获取输入内容并清空输入框\n                const messageContent = this.inputValue.trim();\n                this.inputValue = '';\n                // 添加用户消息\n                const userMessageIndex = this.messages.length;\n                this.messages.push({\n                    type: MESSAGE_TYPE.USER,\n                    content: messageContent,\n                    status: MESSAGE_STATUS.SENT\n                });\n                // 添加AI消息（初始为加载状态）\n                const aiMessageIndex = this.messages.length;\n                this.messages.push({\n                    type: MESSAGE_TYPE.AI,\n                    content: '',\n                    status: MESSAGE_STATUS.SENDING,\n                    streaming: true\n                });\n                this.scrollToBottom();\n                this.isProcessing = true;\n                try {\n                    // 创建上下文\n                    this.updateContextInfo();\n                    // 准备请求参数\n                    const params = new UTSJSONObject({\n                        message: messageContent,\n                        context: this.contextInfo,\n                        history: this.getMessageHistory()\n                    });\n                    // 创建请求控制器（用于中断请求）\n                    this.abortCurrentRequest(); // 中断之前的请求\n                    // 兼容性处理 - 微信小程序不支持 AbortController\n                    let controller = null;\n                    this.currentController = controller;\n                    // 发送请求并处理流式响应\n                    let signal = null;\n                    yield this.sendStreamRequest(params, aiMessageIndex, signal);\n                    // 请求完成后更新状态\n                    this.updateMessageStatus(aiMessageIndex, MESSAGE_STATUS.SENT);\n                    this.messages[aiMessageIndex].streaming = false;\n                }\n                catch (error) {\n                    uni.__f__('error', 'at pages/AI/AI.uvue:460', '发送消息失败:', error);\n                    // 检查是否是用户主动取消的请求\n                    if (error.name === 'AbortError') {\n                        uni.__f__('log', 'at pages/AI/AI.uvue:464', '请求被用户取消');\n                        // 用户取消请求时，移除最后的AI消息（通常是不完整的）\n                        this.messages.splice(aiMessageIndex, 1);\n                    }\n                    else {\n                        // 其他错误，更新消息状态为错误\n                        this.updateMessageStatus(aiMessageIndex, MESSAGE_STATUS.ERROR);\n                        this.messages[aiMessageIndex].streaming = false;\n                        this.messages[aiMessageIndex].content = error.message || '获取回复失败，请重试';\n                    }\n                }\n                finally {\n                    this.isProcessing = false;\n                    this.currentController = null;\n                }\n            });\n        },\n        /**\n         * @description 发送流式请求并处理响应\n         * @param {Object} params - 请求参数\n         * @param {Number} messageIndex - 消息索引\n         * @param {AbortSignal} signal - 中断信号\n         */\n        sendStreamRequest(params = null, messageIndex = null, signal = null) {\n            return __awaiter(this, void 0, void 0, function* () {\n                try {\n                    yield sendChatMessage(params, (chunk = null) => {\n                        // 每收到一个数据块，就更新消息内容\n                        if (chunk && typeof chunk === 'string') {\n                            this.messages[messageIndex].content += chunk;\n                        }\n                        this.scrollToBottom();\n                    }, signal);\n                }\n                catch (error) {\n                    throw error;\n                }\n            });\n        },\n        /**\n         * @description 重试发送失败的消息\n         * @param {Number} index - 消息索引\n         */\n        retryMessage(index = null) {\n            // 只能重试AI消息\n            if (index < 1 || this.messages[index].type !== MESSAGE_TYPE.AI) {\n                return null;\n            }\n            // 获取对应的用户消息\n            const userMessage = this.messages[index - 1];\n            if (userMessage.type !== MESSAGE_TYPE.USER) {\n                return null;\n            }\n            // 更新消息状态\n            this.updateMessageStatus(index, MESSAGE_STATUS.SENDING);\n            this.messages[index].content = '';\n            this.messages[index].streaming = true;\n            // 重新发送消息\n            this.isProcessing = true;\n            // 创建请求控制器\n            this.abortCurrentRequest();\n            // 兼容性处理 - 微信小程序不支持 AbortController\n            let controller = null;\n            this.currentController = controller;\n            // 准备请求参数\n            const params = new UTSJSONObject({\n                message: userMessage.content,\n                context: this.contextInfo,\n                history: this.getMessageHistory(index - 1) // 获取到失败消息之前的历史\n            });\n            // 获取信号\n            let signal = null;\n            // 发送请求\n            this.sendStreamRequest(params, index, signal)\n                .then(() => {\n                // 请求成功\n                this.updateMessageStatus(index, MESSAGE_STATUS.SENT);\n                this.messages[index].streaming = false;\n            })\n                .catch((error = null) => {\n                uni.__f__('error', 'at pages/AI/AI.uvue:559', '重试发送消息失败:', error);\n                // 检查是否是用户主动取消的请求\n                if (error.name === 'AbortError') {\n                    uni.__f__('log', 'at pages/AI/AI.uvue:563', '重试请求被用户取消');\n                }\n                else {\n                    // 其他错误，更新消息状态为错误\n                    this.updateMessageStatus(index, MESSAGE_STATUS.ERROR);\n                    this.messages[index].content = error.message || '获取回复失败，请重试';\n                }\n            })\n                .finally(() => {\n                this.isProcessing = false;\n                this.currentController = null;\n            });\n        },\n        /**\n         * @description 中断当前请求\n         */\n        abortCurrentRequest() {\n            if (this.currentController) {\n                this.currentController = null;\n            }\n        },\n        /**\n         * @description 更新消息状态\n         * @param {Number} index - 消息索引\n         * @param {String} status - 新状态\n         */\n        updateMessageStatus(index = null, status = null) {\n            if (index >= 0 && index < this.messages.length) {\n                this.messages[index].status = status;\n            }\n        },\n        /**\n         * @description 获取消息历史用于发送到API\n         * @param {Number} [limit] - 可选，限制历史消息的数量\n         * @returns {Array} 消息历史数组\n         */\n        getMessageHistory(limit = null) {\n            // 筛选出有效的对话消息（用户和AI的消息）\n            let history = this.messages.filter(msg => {\n                return msg.type === MESSAGE_TYPE.USER ||\n                    (msg.type === MESSAGE_TYPE.AI && msg.status === MESSAGE_STATUS.SENT);\n            });\n            // 如果指定了limit，则只获取最近的limit条消息\n            if (typeof limit === 'number' && limit >= 0 && limit < history.length) {\n                history = history.slice(0, limit);\n            }\n            // 转换为API需要的格式\n            return history.map(msg => { return (new UTSJSONObject({\n                role: msg.type === MESSAGE_TYPE.USER ? 'user' : 'assistant',\n                content: msg.content\n            })); });\n        },\n        /**\n         * @description 滚动到底部\n         */\n        scrollToBottom() {\n            if (!this.isAutoScrollEnabled)\n                return null;\n            if (this.messages.length > 0) {\n                this.autoScrollId = 'msg-' + (this.messages.length - 1);\n            }\n        },\n        /**\n         * @description 处理滚动到顶部事件（加载更多历史消息）\n         */\n        onScrollToUpper(e = null) {\n            // 如果需要加载更多历史消息，可以在这里实现\n            uni.__f__('log', 'at pages/AI/AI.uvue:639', '滚动到顶部');\n        },\n        /**\n         * @description 处理滚动事件（用于控制是否启用自动滚动）\n         */\n        onScroll(e = null) {\n            // 这里可以实现根据用户滚动位置决定是否启用自动滚动\n            // 例如，当用户手动向上滚动时禁用自动滚动，当滚动到底部时再启用\n        },\n        /**\n         * @description 显示提示\n         * @param {String} message - 提示信息\n         */\n        showToast(message = null) {\n            uni.showToast({\n                title: message,\n                icon: 'none',\n                duration: 2000\n            });\n        },\n        /**\n         * @description 显示加载提示\n         * @param {String} [text] - 加载提示文本\n         */\n        showLoading(text = '正在加载...') {\n            this.loadingText = text;\n            this.isFullLoading = true;\n        },\n        /**\n         * @description 隐藏加载提示\n         */\n        hideLoading() {\n            this.isFullLoading = false;\n        }\n    }\n});\n//# sourceMappingURL=E:/yanshilu%E9%87%8D%E6%96%B0%E6%9D%A5%E8%BF%87/%E5%89%8D%E7%AB%AFyanshilu_1/pages/AI/AI.uvue?vue&type=script&lang.uts.js.map","references":["E:/yanshilu重新来过/前端yanshilu_1/components/combobox/combobox.uvue.ts","E:/yanshilu重新来过/前端yanshilu_1/api/API.js"],"uniExtApis":["uni.getStorageSync","uni.__f__","uni.setStorageSync","uni.showToast"],"map":"{\"version\":3,\"file\":\"AI.uvue?vue&type=script&lang.uts.js\",\"sourceRoot\":\"\",\"sources\":[\"AI.uvue?vue&type=script&lang.uts\"],\"names\":[],\"mappings\":\"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\"}"}
