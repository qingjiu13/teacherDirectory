{"code":"import { __awaiter } from \"tslib\";\nimport { defineComponent } from \"vue\";\nimport choiceSelected from '../../components/combobox/combobox';\nimport HistorySidebar from '../../components/ai-chat/HistorySidebar';\nimport MessageList from '../../components/ai-chat/MessageList';\nimport FilterSection from '../../components/ai-chat/FilterSection';\nimport ModeSelector from '../../components/ai-chat/ModeSelector';\nimport InputSection from '../../components/ai-chat/InputSection';\nimport { services } from '../../store';\nimport store from '../../store';\n// 消息类型常量\nconst MESSAGE_TYPE = new UTSJSONObject({\n    USER: 'user',\n    AI: 'ai',\n    SYSTEM: 'system'\n}\n// 消息状态常量\n);\n// 消息状态常量\nconst MESSAGE_STATUS = new UTSJSONObject({\n    SENDING: 'sending',\n    SENT: 'sent',\n    ERROR: 'error'\n}\n// 对话模式常量\n);\n// 对话模式常量\nconst CHAT_MODE = new UTSJSONObject({\n    GENERAL: 'general',\n    SCHOOL: 'school',\n    CAREER: 'career'\n});\nexport default defineComponent({\n    components: {\n        choiceSelected,\n        HistorySidebar,\n        MessageList,\n        FilterSection,\n        ModeSelector,\n        InputSection\n    },\n    computed: {\n        // 从Vuex中获取状态\n        testResult() {\n            return store.getters['aiChat/testResult'];\n        },\n        isTesting() {\n            return store.getters['aiChat/isTesting'];\n        },\n        isLoading() {\n            return store.getters['aiChat/isLoading'];\n        },\n        // 历史会话摘要\n        historySummaries() {\n            return store.getters['aiChat/historySummaries'] || [];\n        },\n        // 历史会话\n        historyChats() {\n            return store.getters['aiChat/historyChats'] || [];\n        },\n        // 当前选择的学校名称\n        currentSchool() {\n            return this.schoolIndex >= 0 ? this.schoolList[this.schoolIndex].choiceItemContent : '';\n        },\n        // 当前选择的专业名称\n        currentMajor() {\n            return this.majorIndex >= 0 ? this.majorList[this.majorIndex].choiceItemContent : '';\n        },\n        // 获取当前模式名称\n        currentModeName() {\n            const modeNames = new UTSJSONObject({\n                [CHAT_MODE.GENERAL]: '通用',\n                [CHAT_MODE.SCHOOL]: '择校',\n                [CHAT_MODE.CAREER]: '职业规划'\n            });\n            return modeNames[this.currentMode] || '通用';\n        }\n    },\n    data() {\n        return {\n            // 用户基本信息\n            userInfo: new UTSJSONObject({\n                school: '',\n                major: ''\n            }),\n            // 消息相关\n            messages: [],\n            isProcessing: false,\n            isFullLoading: false,\n            loadingText: '正在加载...',\n            autoScrollId: '',\n            // 对话模式\n            currentMode: CHAT_MODE.GENERAL,\n            // 学校和专业选择相关\n            schoolIndex: -1,\n            majorIndex: -1,\n            schoolList: [\n                new UTSJSONObject({ choiceItemId: \"bjdx\", choiceItemContent: \"北京大学\" }),\n                new UTSJSONObject({ choiceItemId: \"qhdx\", choiceItemContent: \"清华大学\" }),\n                new UTSJSONObject({ choiceItemId: \"fddx\", choiceItemContent: \"复旦大学\" }),\n                new UTSJSONObject({ choiceItemId: \"zjdx\", choiceItemContent: \"浙江大学\" }),\n                new UTSJSONObject({ choiceItemId: \"njdx\", choiceItemContent: \"南京大学\" }),\n                new UTSJSONObject({ choiceItemId: \"scdx\", choiceItemContent: \"四川大学\" }),\n                new UTSJSONObject({ choiceItemId: \"whdx\", choiceItemContent: \"武汉大学\" }),\n                new UTSJSONObject({ choiceItemId: \"zsdx\", choiceItemContent: \"中山大学\" }),\n                new UTSJSONObject({ choiceItemId: \"xjtu\", choiceItemContent: \"西安交通大学\" }),\n                new UTSJSONObject({ choiceItemId: \"hust\", choiceItemContent: \"华中科技大学\" }),\n                new UTSJSONObject({ choiceItemId: \"hit\", choiceItemContent: \"哈尔滨工业大学\" }),\n                new UTSJSONObject({ choiceItemId: \"sjtu\", choiceItemContent: \"上海交通大学\" })\n            ],\n            majorList: [\n                new UTSJSONObject({ choiceItemId: \"jsjkx\", choiceItemContent: \"计算机科学\" }),\n                new UTSJSONObject({ choiceItemId: \"rjgc\", choiceItemContent: \"软件工程\" }),\n                new UTSJSONObject({ choiceItemId: \"sx\", choiceItemContent: \"数学\" }),\n                new UTSJSONObject({ choiceItemId: \"wl\", choiceItemContent: \"物理\" }),\n                new UTSJSONObject({ choiceItemId: \"hx\", choiceItemContent: \"化学\" }),\n                new UTSJSONObject({ choiceItemId: \"sw\", choiceItemContent: \"生物\" }),\n                new UTSJSONObject({ choiceItemId: \"jdxy\", choiceItemContent: \"机电工程\" }),\n                new UTSJSONObject({ choiceItemId: \"dqxy\", choiceItemContent: \"电气工程\" }),\n                new UTSJSONObject({ choiceItemId: \"jzxy\", choiceItemContent: \"建筑学\" }),\n                new UTSJSONObject({ choiceItemId: \"lyxy\", choiceItemContent: \"临床医学\" }),\n                new UTSJSONObject({ choiceItemId: \"yyxy\", choiceItemContent: \"药学\" }),\n                new UTSJSONObject({ choiceItemId: \"glxy\", choiceItemContent: \"管理学\" }),\n                new UTSJSONObject({ choiceItemId: \"jjxy\", choiceItemContent: \"经济学\" }),\n                new UTSJSONObject({ choiceItemId: \"flxy\", choiceItemContent: \"法学\" })\n            ],\n            // 滚动相关\n            isAutoScrollEnabled: true,\n            // 当前会话的请求控制器\n            currentController: null,\n            // 自定义的上下文信息\n            contextInfo: new UTSJSONObject({}),\n            // 导航栏和侧边栏相关\n            sidebarVisible: false,\n            currentChatId: null // 当前会话ID\n        };\n    },\n    watch: {\n        // 监听historyChats变化\n        historyChats: {\n            handler(newVal = null) {\n                if (newVal && newVal.length) {\n                    // 历史会话在Store中维护，这里不需要额外逻辑\n                }\n            },\n            immediate: true\n        }\n    },\n    onLoad() {\n        /**\n         * @description 页面加载时的处理逻辑\n         */\n        // 尝试获取用户信息并初始化\n        this.getUserInfo();\n        // 添加欢迎消息\n        this.addSystemMessage('欢迎使用研师录AI助手，请选择您的所在学校和专业，然后开始提问');\n        // 加载历史会话\n        this.loadChatHistoryFromStorage();\n    },\n    onShow() {\n        // 页面显示时刷新历史记录\n        this.loadChatHistoryFromStorage();\n    },\n    onUnload() {\n        // 页面卸载时中断所有未完成的请求\n        this.abortCurrentRequest();\n    },\n    onReady() {\n        // 页面渲染完成后更新布局\n        setTimeout(() => {\n            this.updateLayout();\n        }, 300);\n    },\n    methods: {\n        /**\n         * @description 处理页面点击事件，用于关闭所有打开的下拉框\n         */\n        onPageClick() {\n            // 关闭筛选区域的下拉框\n            if (this.$refs && this.$refs.filterSection) {\n                this.$refs.filterSection.closeAllDropdowns();\n            }\n        },\n        /**\n         * @description 更新布局，解决可能的定位问题\n         */\n        updateLayout() {\n            // 微信小程序环境下特殊处理\n            // 这里可以添加特定于微信小程序的布局调整\n        },\n        /**\n         * @description 获取用户信息\n         */\n        getUserInfo() {\n            try {\n                const userInfo = uni.getStorageSync('userInfo');\n                if (userInfo) {\n                    const parsedInfo = UTS.JSON.parse(userInfo);\n                    this.userInfo = parsedInfo;\n                    // 根据保存的用户信息设置选择框的索引\n                    this.setUserSelectionIndexes();\n                }\n            }\n            catch (e) {\n                uni.__f__('error', 'at pages/AI/AI.uvue:301', '获取用户信息失败:', e);\n            }\n        },\n        /**\n         * @description 根据用户信息设置学校和专业的索引\n         */\n        setUserSelectionIndexes() {\n            if (this.userInfo.school) {\n                const schoolIndex = this.schoolList.findIndex(item => { return item.choiceItemContent === this.userInfo.school; });\n                if (schoolIndex !== -1) {\n                    this.schoolIndex = schoolIndex;\n                }\n            }\n            if (this.userInfo.major) {\n                const majorIndex = this.majorList.findIndex(item => { return item.choiceItemContent === this.userInfo.major; });\n                if (majorIndex !== -1) {\n                    this.majorIndex = majorIndex;\n                }\n            }\n        },\n        /**\n         * @description 保存用户信息\n         */\n        saveUserInfo() {\n            try {\n                uni.setStorageSync('userInfo', UTS.JSON.stringify(this.userInfo));\n            }\n            catch (e) {\n                uni.__f__('error', 'at pages/AI/AI.uvue:335', '保存用户信息失败:', e);\n                this.showToast('保存用户信息失败，可能影响后续对话');\n            }\n        },\n        /**\n         * @description 学校选择事件处理\n         * @param {Number} position - 选择的索引位置\n         */\n        onSchoolClick(position = null) {\n            this.schoolIndex = position;\n            this.userInfo.school = this.currentSchool;\n            this.saveUserInfo();\n            this.updateContextInfo();\n        },\n        /**\n         * @description 专业选择事件处理\n         * @param {Number} position - 选择的索引位置\n         */\n        onMajorClick(position = null) {\n            this.majorIndex = position;\n            this.userInfo.major = this.currentMajor;\n            this.saveUserInfo();\n            this.updateContextInfo();\n        },\n        /**\n         * @description 处理学校搜索输入\n         * @param {String} keyword - 搜索关键词\n         */\n        onSchoolSearch(keyword = null) {\n            // 这里可以实现动态学校搜索逻辑，例如从服务器获取匹配的学校\n        },\n        /**\n         * @description 切换对话模式\n         * @param {String} mode - 对话模式\n         */\n        switchMode(mode = null) {\n            if (this.currentMode === mode)\n                return null;\n            this.currentMode = mode;\n            this.updateContextInfo();\n            this.addSystemMessage(`已切换到${this.currentModeName}模式`);\n        },\n        /**\n         * @description 更新对话上下文信息\n         */\n        updateContextInfo() {\n            this.contextInfo = new UTSJSONObject({\n                mode: this.currentMode,\n                userSchool: this.currentSchool,\n                userMajor: this.currentMajor\n            });\n        },\n        /**\n         * @description 添加系统消息\n         * @param {String} content - 消息内容\n         */\n        addSystemMessage(content = null) {\n            this.messages.push({\n                type: MESSAGE_TYPE.SYSTEM,\n                content: content,\n                status: MESSAGE_STATUS.SENT\n            });\n            this.scrollToBottom();\n        },\n        /**\n         * @description 开始新对话\n         */\n        startNewChat() {\n            this.messages = [];\n            this.currentChatId = 'chat_' + Date.now();\n            store.dispatch('aiChat/setCurrentChat', this.currentChatId);\n            this.addSystemMessage('开始新对话，请输入您的问题');\n            this.closeSidebar();\n        },\n        /**\n         * @description 处理消息发送和重试的统一方法\n         * @param {String} messageContent - 消息内容\n         * @param {Number} [retryIndex] - 重试消息的索引，如果是新消息则为null\n         */\n        handleMessage(messageContent = null, retryIndex = null) {\n            var _a;\n            return __awaiter(this, void 0, void 0, function* () {\n                if (!messageContent || this.isProcessing)\n                    return Promise.resolve(null);\n                let userMessageIndex = null, aiMessageIndex = null;\n                // 处理新消息或重试\n                if (retryIndex === null) {\n                    // 新消息\n                    userMessageIndex = this.messages.length;\n                    this.messages.push({\n                        type: MESSAGE_TYPE.USER,\n                        content: messageContent,\n                        status: MESSAGE_STATUS.SENT\n                    });\n                    aiMessageIndex = this.messages.length;\n                    this.messages.push({\n                        type: MESSAGE_TYPE.AI,\n                        content: '',\n                        status: MESSAGE_STATUS.SENDING,\n                        streaming: false\n                    });\n                }\n                else {\n                    // 重试消息\n                    userMessageIndex = retryIndex - 1;\n                    aiMessageIndex = retryIndex;\n                    this.messages[aiMessageIndex].content = '';\n                    this.messages[aiMessageIndex].status = MESSAGE_STATUS.SENDING;\n                    this.messages[aiMessageIndex].streaming = false;\n                }\n                this.scrollToBottom();\n                this.isProcessing = true;\n                try {\n                    this.updateContextInfo();\n                    // 确保有当前会话ID\n                    if (!this.currentChatId) {\n                        this.currentChatId = 'chat_' + Date.now();\n                        store.dispatch('aiChat/setCurrentChat', this.currentChatId);\n                    }\n                    // 直接通过Vuex调用后端API\n                    const response = yield store.dispatch('aiChat/testAIQA', new UTSJSONObject({\n                        question: messageContent,\n                        contextInfo: this.contextInfo,\n                        chatId: this.currentChatId\n                    }));\n                    if (response.success) {\n                        this.messages[aiMessageIndex].content = response.data;\n                        this.messages[aiMessageIndex].status = MESSAGE_STATUS.SENT;\n                        this.saveChatHistory();\n                    }\n                    else {\n                        // 直接使用后端返回的错误信息\n                        this.messages[aiMessageIndex].content = ((_a = response.error) === null || _a === void 0 ? void 0 : _a.message) || response.message || '获取回复失败';\n                        this.messages[aiMessageIndex].status = MESSAGE_STATUS.ERROR;\n                    }\n                }\n                catch (error) {\n                    // 错误信息由后端提供\n                    this.messages[aiMessageIndex].content = '与服务器通信异常';\n                    this.messages[aiMessageIndex].status = MESSAGE_STATUS.ERROR;\n                }\n                finally {\n                    this.isProcessing = false;\n                    this.messages[aiMessageIndex].streaming = false;\n                    this.scrollToBottom();\n                }\n            });\n        },\n        /**\n         * @description 发送消息\n         * @param {String} messageContent - 消息内容\n         */\n        sendMessage(messageContent = null) {\n            this.handleMessage(messageContent);\n        },\n        /**\n         * @description 重试发送失败的消息\n         * @param {Number} index - 消息索引\n         */\n        retryMessage(index = null) {\n            // 只能重试AI消息\n            if (index < 1 || this.messages[index].type !== MESSAGE_TYPE.AI) {\n                return null;\n            }\n            // 获取对应的用户消息\n            const userMessage = this.messages[index - 1];\n            if (userMessage.type !== MESSAGE_TYPE.USER) {\n                return null;\n            }\n            this.handleMessage(userMessage.content, index);\n        },\n        /**\n         * @description 中断当前请求\n         */\n        abortCurrentRequest() {\n            if (this.currentController) {\n                this.currentController = null;\n            }\n        },\n        /**\n         * @description 滚动到底部\n         */\n        scrollToBottom() {\n            if (!this.isAutoScrollEnabled)\n                return null;\n            if (this.messages.length > 0) {\n                this.autoScrollId = 'msg-' + (this.messages.length - 1);\n            }\n        },\n        /**\n         * @description 处理滚动到顶部事件\n         */\n        onScrollToUpper(e = null) {\n            // 滚动到顶部的处理逻辑\n        },\n        /**\n         * @description 处理滚动事件\n         */\n        onScroll(e = null) {\n            // 滚动事件处理逻辑\n        },\n        /**\n         * @description 显示提示\n         * @param {String} message - 提示信息\n         * @param {String} [icon='none'] - 提示图标\n         * @param {Number} [duration=2000] - 提示持续时间\n         */\n        showToast(message = null, icon = 'none', duration = 2000) {\n            uni.showToast({\n                title: message,\n                icon: icon,\n                duration: duration\n            });\n        },\n        /**\n         * @description 显示/隐藏加载提示\n         * @param {String|Boolean} text - 加载提示文本，如果为false则隐藏\n         */\n        toggleLoading(text = '正在加载...') {\n            if (text === false) {\n                this.isFullLoading = false;\n            }\n            else {\n                this.loadingText = text;\n                this.isFullLoading = true;\n            }\n        },\n        // 侧边栏相关方法\n        toggleSidebar() {\n            this.sidebarVisible = !this.sidebarVisible;\n        },\n        closeSidebar() {\n            this.sidebarVisible = false;\n        },\n        /**\n         * @description 加载指定的聊天历史\n         * @param {String} chatId - 聊天历史ID\n         */\n        loadChatHistory(chatId = null) {\n            if (!chatId)\n                return null;\n            try {\n                this.toggleLoading('正在加载对话内容...');\n                // 通过Vuex从后端加载完整对话内容\n                store.dispatch('aiChat/loadChat', chatId).then((response = null) => {\n                    if (response.success) {\n                        // 设置当前会话ID（这个在action中已经设置了）\n                        this.currentChatId = chatId;\n                        // 替换当前消息列表为从后端获取的完整消息\n                        this.messages = response.data.messages || [];\n                        // 关闭侧边栏\n                        this.closeSidebar();\n                        // 滚动到底部\n                        this.$nextTick(() => {\n                            this.scrollToBottom();\n                        });\n                    }\n                    else {\n                        this.showToast('加载对话内容失败');\n                    }\n                }).finally(() => {\n                    this.toggleLoading(false);\n                });\n            }\n            catch (error) {\n                this.showToast('加载对话内容失败');\n                this.toggleLoading(false);\n            }\n        },\n        /**\n         * @description 从Vuex加载历史会话摘要\n         */\n        loadChatHistoryFromStorage() {\n            // 从Vuex获取历史会话摘要列表\n            store.dispatch('aiChat/getHistoryChats');\n        },\n        /**\n         * @description 保存聊天历史摘要到Vuex\n         */\n        saveChatHistory() {\n            if (!this.currentChatId || this.messages.length === 0)\n                return null;\n            // 寻找第一条用户消息作为标题\n            const firstUserMessage = UTS.arrayFind(this.messages, msg => { return msg.type === MESSAGE_TYPE.USER; });\n            const title = firstUserMessage ? firstUserMessage.content.substring(0, 20) : '新对话';\n            // 创建聊天摘要对象\n            const chatData = new UTSJSONObject({\n                id: this.currentChatId,\n                title: title + (title.length >= 20 ? '...' : ''),\n                // 完整消息内容由后端存储，客户端只保存摘要信息\n                createdAt: new Date(),\n                updatedAt: new Date()\n            });\n            // 保存到Vuex\n            store.dispatch('aiChat/saveChat', chatData);\n        },\n        /**\n         * @description 删除历史记录\n         * @param {String} chatId - 历史记录ID\n         */\n        deleteChatHistory(chatId = null) {\n            if (!chatId) {\n                uni.__f__('error', 'at pages/AI/AI.uvue:667', '删除历史记录失败: 无效的chatId');\n                this.showToast('删除失败: 无效的记录ID');\n                return null;\n            }\n            uni.__f__('log', 'at pages/AI/AI.uvue:672', '请求删除历史记录:', chatId);\n            // 弹窗确认是否删除\n            uni.showModal({\n                title: '确认删除',\n                content: '确定要删除这条对话记录吗？',\n                success: (res) => {\n                    if (res.confirm) {\n                        // 使用Vuex删除历史记录\n                        store.dispatch('aiChat/deleteChat', chatId).then((response = null) => {\n                            if (response.success) {\n                                // 如果删除的是当前会话，则清空当前会话\n                                if (this.currentChatId === chatId) {\n                                    this.startNewChat();\n                                }\n                                this.showToast('删除成功');\n                            }\n                            else {\n                                uni.__f__('error', 'at pages/AI/AI.uvue:689', '删除失败:', response.message || '未知错误');\n                                this.showToast(response.message || '删除失败');\n                            }\n                        }).catch((error = null) => {\n                            uni.__f__('error', 'at pages/AI/AI.uvue:693', '删除过程发生异常:', error);\n                            this.showToast('删除失败: ' + (error.message || '系统错误'));\n                        });\n                    }\n                }\n            });\n        },\n        /**\n         * @description 格式化时间\n         * @param {Date|String} time - 时间对象或时间字符串\n         * @returns {String} 格式化后的时间字符串\n         */\n        formatTime(time = null) {\n            if (!time)\n                return '';\n            const date = new Date(time);\n            const year = date.getFullYear();\n            const month = String(date.getMonth() + 1).padStart(2, '0');\n            const day = String(date.getDate()).padStart(2, '0');\n            const hours = String(date.getHours()).padStart(2, '0');\n            const minutes = String(date.getMinutes()).padStart(2, '0');\n            return `${year}-${month}-${day} ${hours}:${minutes}`;\n        }\n    }\n});\n//# sourceMappingURL=E:/yanshilu%E9%87%8D%E6%96%B0%E6%9D%A5%E8%BF%87/%E5%89%8D%E7%AB%AFyanshilu_1/pages/AI/AI.uvue?vue&type=script&lang.uts.js.map","references":["E:/yanshilu重新来过/前端yanshilu_1/components/combobox/combobox.uvue.ts","E:/yanshilu重新来过/前端yanshilu_1/components/ai-chat/HistorySidebar.uvue.ts","E:/yanshilu重新来过/前端yanshilu_1/components/ai-chat/MessageList.uvue.ts","E:/yanshilu重新来过/前端yanshilu_1/components/ai-chat/FilterSection.uvue.ts","E:/yanshilu重新来过/前端yanshilu_1/components/ai-chat/ModeSelector.uvue.ts","E:/yanshilu重新来过/前端yanshilu_1/components/ai-chat/InputSection.uvue.ts","E:/yanshilu重新来过/前端yanshilu_1/store/index.js","E:/yanshilu重新来过/前端yanshilu_1/store/index.js"],"uniExtApis":["uni.getStorageSync","uni.__f__","uni.setStorageSync","uni.showToast","uni.showModal"],"map":"{\"version\":3,\"file\":\"AI.uvue?vue&type=script&lang.uts.js\",\"sourceRoot\":\"\",\"sources\":[\"AI.uvue?vue&type=script&lang.uts\"],\"names\":[],\"mappings\":\"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\"}"}
