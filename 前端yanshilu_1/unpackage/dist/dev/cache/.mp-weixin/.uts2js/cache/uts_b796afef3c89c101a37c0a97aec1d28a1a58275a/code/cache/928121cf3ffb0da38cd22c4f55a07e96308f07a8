{"code":"import { __awaiter } from \"tslib\";\nimport { defineComponent } from \"vue\";\n/**\n * @description 用户资料修改页面\n */\nimport { mapState, mapGetters, mapActions } from 'vuex';\nimport { Navigator } from '@/router/Router.js';\nexport default defineComponent({\n    data() {\n        return {\n            userInfo: new UTSJSONObject({\n                avatar: '',\n                nickname: '',\n                tags: [],\n                certTag: '',\n                otherTags: [],\n                introduction: '',\n                gender: '',\n                phone: '',\n                wechat: '',\n                password: '未设置'\n            }),\n            showingTagInput: false,\n            newTag: '',\n            updating: false\n        };\n    },\n    computed: Object.assign(Object.assign({}, mapGetters('user', [\n        'profile',\n        'isTeacher',\n        'userRole',\n        'updateLoading',\n        'updateError',\n        'teacherCertTag',\n        'teacherOtherTags',\n        'studentTags'\n    ])), { \n        /**\n         * @description 获取要显示的标签，老师显示otherTags，学生显示全部tags\n         * @returns {Array} 要显示的标签数组\n         */\n        displayTags() {\n            if (this.isTeacher) {\n                return this.userInfo.otherTags || [];\n            }\n            else {\n                return this.userInfo.tags || [];\n            }\n        },\n        /**\n         * @description 获取认证标签\n         * @returns {String} 认证标签\n         */\n        certTag() {\n            return this.userInfo.certTag || '';\n        },\n        /**\n         * @description 获取最大标签数量\n         * @returns {Number} 最大标签数量\n         */\n        maxTagsCount() {\n            return this.isTeacher ? 4 : 5; // 老师除认证标签外最多4个，学生最多5个\n        } }),\n    watch: {\n        updateLoading(val = null) {\n            this.updating = val;\n        }\n    },\n    onLoad() {\n        // 初始化用户信息\n        this.initUserInfo();\n    },\n    methods: Object.assign(Object.assign({}, mapActions('user', [\n        'fetchProfile',\n        'updateProfile'\n    ])), { \n        /**\n         * @description 初始化用户信息\n         */\n        initUserInfo() {\n            return __awaiter(this, void 0, void 0, function* () {\n                try {\n                    // 从storage获取当前角色，确保使用正确的角色数据\n                    const currentRole = uni.getStorageSync('userRole') || 'student';\n                    uni.__f__('log', 'at pages/mine/modify.uvue:227', '当前角色:', currentRole);\n                    // 尝试获取最新的用户信息\n                    yield this.fetchProfile();\n                    // 复制用户信息到本地状态\n                    if (this.isTeacher) {\n                        // 老师角色：分离认证标签和其他标签\n                        this.userInfo = {\n                            avatar: this.profile.avatar || '',\n                            nickname: this.profile.nickname || '',\n                            tags: [...(this.profile.tags || [])],\n                            certTag: this.teacherCertTag || '',\n                            otherTags: [...(this.teacherOtherTags || [])],\n                            introduction: this.profile.introduction || '',\n                            gender: this.profile.gender || '',\n                            phone: this.profile.phone || '',\n                            wechat: this.profile.wechat || '',\n                            password: this.profile.password || '未设置'\n                        };\n                    }\n                    else {\n                        // 学生角色：直接使用tags\n                        this.userInfo = {\n                            avatar: this.profile.avatar || '',\n                            nickname: this.profile.nickname || '',\n                            tags: [...(this.studentTags || [])],\n                            introduction: this.profile.introduction || '',\n                            gender: this.profile.gender || '',\n                            phone: this.profile.phone || '',\n                            wechat: this.profile.wechat || '',\n                            password: this.profile.password || '未设置'\n                        };\n                    }\n                    uni.__f__('log', 'at pages/mine/modify.uvue:261', '获取的用户信息:', this.userInfo);\n                }\n                catch (error) {\n                    uni.__f__('error', 'at pages/mine/modify.uvue:263', '获取用户信息失败', error);\n                    uni.showToast({\n                        title: '获取用户信息失败',\n                        icon: 'none'\n                    });\n                }\n            });\n        },\n        /**\n         * @description 选择头像\n         */\n        chooseAvatar() {\n            uni.chooseImage({\n                count: 1,\n                sizeType: ['compressed'],\n                sourceType: ['album', 'camera'],\n                success: (res) => {\n                    const tempFilePath = res.tempFilePaths[0];\n                    // 在实际应用中，这里应该上传图片到服务器\n                    // 这里仅做演示，直接使用临时路径\n                    this.userInfo.avatar = tempFilePath;\n                }\n            });\n        },\n        /**\n         * @description 显示标签输入框\n         */\n        showTagInput() {\n            this.showingTagInput = true;\n        },\n        /**\n         * @description 添加标签\n         */\n        addTag() {\n            if (!this.newTag.trim())\n                return null;\n            const maxCount = this.maxTagsCount;\n            const currentTags = this.displayTags;\n            if (currentTags.length >= maxCount) {\n                uni.showToast({\n                    title: `最多添加${maxCount}个标签`,\n                    icon: 'none'\n                });\n                return null;\n            }\n            if (currentTags.includes(this.newTag.trim())) {\n                uni.showToast({\n                    title: '标签已存在',\n                    icon: 'none'\n                });\n                return null;\n            }\n            if (this.isTeacher) {\n                // 老师角色：添加到otherTags\n                this.userInfo.otherTags.push(this.newTag.trim());\n            }\n            else {\n                // 学生角色：添加到tags\n                this.userInfo.tags.push(this.newTag.trim());\n            }\n            this.newTag = '';\n            this.showingTagInput = false;\n        },\n        /**\n         * @description 删除标签\n         * @param {Number} index - 标签索引\n         */\n        removeTag(index = null) {\n            if (this.isTeacher) {\n                // 老师角色：从otherTags中删除\n                this.userInfo.otherTags.splice(index, 1);\n            }\n            else {\n                // 学生角色：从tags中删除\n                this.userInfo.tags.splice(index, 1);\n            }\n        },\n        /**\n         * @description 跳转到密码设置页面\n         */\n        navigateToPasswordPage() {\n            // 实际应用中应该跳转到密码设置页面\n            uni.showToast({\n                title: '密码设置功能开发中',\n                icon: 'none'\n            });\n        }, \n        /**\n         * @description 保存用户资料\n         */\n        saveProfile() {\n            return __awaiter(this, void 0, void 0, function* () {\n                // 基本验证\n                if (!this.userInfo.nickname) {\n                    uni.showToast({\n                        title: '昵称不能为空',\n                        icon: 'none'\n                    });\n                    return Promise.resolve(null);\n                }\n                // 手机号格式验证\n                if (this.userInfo.phone && !/^1\\d{10}$/.test(this.userInfo.phone)) {\n                    uni.showToast({\n                        title: '手机号格式不正确',\n                        icon: 'none'\n                    });\n                    return Promise.resolve(null);\n                }\n                try {\n                    this.updating = true;\n                    // 准备要更新的数据\n                    const profileData = new UTSJSONObject({\n                        avatar: this.userInfo.avatar,\n                        nickname: this.userInfo.nickname,\n                        introduction: this.userInfo.introduction,\n                        gender: this.userInfo.gender,\n                        phone: this.userInfo.phone,\n                        wechat: this.userInfo.wechat\n                    });\n                    // 根据角色添加标签信息\n                    if (this.isTeacher) {\n                        // 老师角色：分别设置certTag和otherTags\n                        profileData.certTag = this.userInfo.certTag;\n                        profileData.otherTags = this.userInfo.otherTags;\n                    }\n                    else {\n                        // 学生角色：直接设置tags\n                        profileData.tags = this.userInfo.tags;\n                    }\n                    // 提交更新 - 会调用user.api.js中的updateUserProfile方法\n                    yield this.updateProfile(profileData);\n                    uni.showToast({\n                        title: '保存成功',\n                        icon: 'success'\n                    });\n                    // 返回个人页面\n                    setTimeout(() => {\n                        uni.navigateBack();\n                    }, 1500);\n                }\n                catch (error) {\n                    uni.__f__('error', 'at pages/mine/modify.uvue:415', '保存失败', error);\n                    uni.showToast({\n                        title: error.message || '保存失败',\n                        icon: 'none'\n                    });\n                }\n                finally {\n                    this.updating = false;\n                }\n            });\n        } })\n});\n//# sourceMappingURL=E:/%E7%A0%94%E5%B8%88%E5%BD%95%E4%B8%8E%E5%85%B6%E4%BB%96%E4%BA%BA%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6/teacherDirectory/%E5%89%8D%E7%AB%AFyanshilu_1/pages/mine/modify.uvue?vue&type=script&lang.uts.js.map","references":["E:/HBuilderX/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/node_modules/vuex/types/index.d.ts","E:/研师录与其他人共享文件/teacherDirectory/前端yanshilu_1/router/Router.js"],"uniExtApis":["uni.getStorageSync","uni.__f__","uni.showToast","uni.chooseImage","uni.navigateBack"],"map":"{\"version\":3,\"file\":\"modify.uvue?vue&type=script&lang.uts.js\",\"sourceRoot\":\"\",\"sources\":[\"modify.uvue?vue&type=script&lang.uts\"],\"names\":[],\"mappings\":\";;AACA;;GAEG;AACH,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AACxD,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;AAE/C,+BAAe;IACd,IAAI;QACH,OAAO;YACN,QAAQ,oBAAE;gBACT,MAAM,EAAE,EAAE;gBACV,QAAQ,EAAE,EAAE;gBACZ,IAAI,EAAE,EAAE;gBACR,OAAO,EAAE,EAAE;gBACX,SAAS,EAAE,EAAE;gBACb,YAAY,EAAE,EAAE;gBAChB,MAAM,EAAE,EAAE;gBACV,KAAK,EAAE,EAAE;gBACT,MAAM,EAAE,EAAE;gBACV,QAAQ,EAAE,KAAK;aACf,CAAA;YACD,eAAe,EAAE,KAAK;YACtB,MAAM,EAAE,EAAE;YACV,QAAQ,EAAE,KAAK;SACf,CAAA;IACF,CAAC;IACD,QAAQ,kCACJ,UAAU,CAAC,MAAM,EAAE;QACrB,SAAS;QACT,WAAW;QACX,UAAU;QACV,eAAe;QACf,aAAa;QACb,gBAAgB;QAChB,kBAAkB;QAClB,aAAa;KACb,CAAC;QAEF;;;WAGG;QACH,WAAW;YACV,IAAI,IAAI,CAAC,SAAS,EAAE;gBACnB,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,IAAI,EAAE,CAAC;aACrC;iBAAM;gBACN,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,CAAC;aAChC;QACF,CAAC;QAED;;;WAGG;QACH,OAAO;YACN,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,EAAE,CAAC;QACpC,CAAC;QAED;;;WAGG;QACH,YAAY;YACX,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,sBAAsB;QACtD,CAAC,GACD;IACD,KAAK,EAAE;QACN,aAAa,CAAC,GAAG,OAAA;YAChB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QACrB,CAAC;KACD;IACD,MAAM;QACL,UAAU;QACV,IAAI,CAAC,YAAY,EAAE,CAAC;IACrB,CAAC;IACD,OAAO,kCACH,UAAU,CAAC,MAAM,EAAE;QACrB,cAAc;QACd,eAAe;KACf,CAAC;QAEF;;WAEG;QACG,YAAY;;gBACjB,IAAI;oBACH,6BAA6B;oBAC7B,MAAM,WAAW,GAAG,GAAG,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,SAAS,CAAC;oBAChE,GAAG,CAAC,KAAK,CAAC,KAAK,EAAC,+BAA+B,EAAC,OAAO,EAAE,WAAW,CAAC,CAAC;oBAEtE,cAAc;oBACd,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC;oBAE1B,cAAc;oBACd,IAAI,IAAI,CAAC,SAAS,EAAE;wBACnB,mBAAmB;wBACnB,IAAI,CAAC,QAAQ,GAAG;4BACf,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,EAAE;4BACjC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,EAAE;4BACrC,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;4BACpC,OAAO,EAAE,IAAI,CAAC,cAAc,IAAI,EAAE;4BAClC,SAAS,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,IAAI,EAAE,CAAC,CAAC;4BAC7C,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,IAAI,EAAE;4BAC7C,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,EAAE;4BACjC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;4BAC/B,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,EAAE;4BACjC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,KAAK;yBACxC,CAAC;qBACF;yBAAM;wBACN,gBAAgB;wBAChB,IAAI,CAAC,QAAQ,GAAG;4BACf,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,EAAE;4BACjC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,EAAE;4BACrC,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC;4BACnC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,IAAI,EAAE;4BAC7C,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,EAAE;4BACjC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;4BAC/B,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,EAAE;4BACjC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,KAAK;yBACxC,CAAC;qBACF;oBAED,GAAG,CAAC,KAAK,CAAC,KAAK,EAAC,+BAA+B,EAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC3E;gBAAC,OAAO,KAAK,EAAE;oBACf,GAAG,CAAC,KAAK,CAAC,OAAO,EAAC,+BAA+B,EAAC,UAAU,EAAE,KAAK,CAAC,CAAC;oBACrE,GAAG,CAAC,SAAS,CAAC;wBACb,KAAK,EAAE,UAAU;wBACjB,IAAI,EAAE,MAAM;qBACZ,CAAC,CAAC;iBACH;YACF,CAAC;SAAA;QAED;;WAEG;QACH,YAAY;YACX,GAAG,CAAC,WAAW,CAAC;gBACf,KAAK,EAAE,CAAC;gBACR,QAAQ,EAAE,CAAC,YAAY,CAAC;gBACxB,UAAU,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC;gBAC/B,OAAO,EAAE,CAAC,GAAG;oBACZ,MAAM,YAAY,GAAG,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;oBAC1C,sBAAsB;oBACtB,kBAAkB;oBAClB,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,YAAY,CAAC;gBACrC,CAAC;aACD,CAAC,CAAC;QACJ,CAAC;QAED;;WAEG;QACH,YAAY;YACX,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC7B,CAAC;QAED;;WAEG;QACH,MAAM;YACL,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;gBAAE,YAAO;YAEhC,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;YACnC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;YAErC,IAAI,WAAW,CAAC,MAAM,IAAI,QAAQ,EAAE;gBACnC,GAAG,CAAC,SAAS,CAAC;oBACb,KAAK,EAAE,OAAO,QAAQ,KAAK;oBAC3B,IAAI,EAAE,MAAM;iBACZ,CAAC,CAAC;gBACH,YAAO;aACP;YAED,IAAI,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,EAAE;gBAC7C,GAAG,CAAC,SAAS,CAAC;oBACb,KAAK,EAAE,OAAO;oBACd,IAAI,EAAE,MAAM;iBACZ,CAAC,CAAC;gBACH,YAAO;aACP;YAED,IAAI,IAAI,CAAC,SAAS,EAAE;gBACnB,oBAAoB;gBACpB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;aACjD;iBAAM;gBACN,eAAe;gBACf,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;aAC5C;YAED,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC9B,CAAC;QAED;;;WAGG;QACH,SAAS,CAAC,KAAK,OAAA;YACd,IAAI,IAAI,CAAC,SAAS,EAAE;gBACnB,qBAAqB;gBACrB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aACzC;iBAAM;gBACN,gBAAgB;gBAChB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aACpC;QACF,CAAC;QAED;;WAEG;QACH,sBAAsB;YACrB,mBAAmB;YACnB,GAAG,CAAC,SAAS,CAAC;gBACb,KAAK,EAAE,WAAW;gBAClB,IAAI,EAAE,MAAM;aACZ,CAAC,CAAC;QACJ,CAAC;QAED;;WAEG;QACG,WAAW;;gBAChB,OAAO;gBACP,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;oBAC5B,GAAG,CAAC,SAAS,CAAC;wBACb,KAAK,EAAE,QAAQ;wBACf,IAAI,EAAE,MAAM;qBACZ,CAAC,CAAC;oBACH,6BAAO;iBACP;gBAED,UAAU;gBACV,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;oBAClE,GAAG,CAAC,SAAS,CAAC;wBACb,KAAK,EAAE,UAAU;wBACjB,IAAI,EAAE,MAAM;qBACZ,CAAC,CAAC;oBACH,6BAAO;iBACP;gBAED,IAAI;oBACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBAErB,WAAW;oBACX,MAAM,WAAW,qBAAG;wBACnB,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM;wBAC5B,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ;wBAChC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY;wBACxC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM;wBAC5B,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK;wBAC1B,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM;qBAC5B,CAAA,CAAC;oBAEF,aAAa;oBACb,IAAI,IAAI,CAAC,SAAS,EAAE;wBACnB,6BAA6B;wBAC7B,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;wBAC5C,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;qBAChD;yBAAM;wBACN,gBAAgB;wBAChB,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;qBACtC;oBAED,6CAA6C;oBAC7C,MAAM,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;oBAEtC,GAAG,CAAC,SAAS,CAAC;wBACb,KAAK,EAAE,MAAM;wBACb,IAAI,EAAE,SAAS;qBACf,CAAC,CAAC;oBAEH,SAAS;oBACT,UAAU,CAAC;wBACV,GAAG,CAAC,YAAY,EAAE,CAAC;oBACpB,CAAC,EAAE,IAAI,CAAC,CAAC;iBACT;gBAAC,OAAO,KAAK,EAAE;oBACf,GAAG,CAAC,KAAK,CAAC,OAAO,EAAC,+BAA+B,EAAC,MAAM,EAAE,KAAK,CAAC,CAAC;oBACjE,GAAG,CAAC,SAAS,CAAC;wBACb,KAAK,EAAE,KAAK,CAAC,OAAO,IAAI,MAAM;wBAC9B,IAAI,EAAE,MAAM;qBACZ,CAAC,CAAC;iBACH;wBAAS;oBACT,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;iBACtB;YACF,CAAC;SAAA,GACD;CACD,EAAA\"}"}
