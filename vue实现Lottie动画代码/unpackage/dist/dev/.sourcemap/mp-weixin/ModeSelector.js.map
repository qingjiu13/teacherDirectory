{"version":3,"file":"ModeSelector.js","sources":["pages_AI_Login_Match/AI/ai-chat/ModeSelector.vue"],"sourcesContent":["<template>\n\t<view class=\"function-section\" :class=\"{ 'nav-mode': inNav }\">\n\t\t<view class=\"function-list nav-tab-list\" v-if=\"inNav\">\n\t\t\t<view class=\"function-item nav-tab-item\"\n\t\t\t\t:class=\"{active: activeChatMode === 'general'}\"\n\t\t\t\t@click=\"switchMode('general')\">\n\t\t\t\t<text class=\"function-item-text nav-tab-text\">通用</text>\n\t\t\t\t<view v-if=\"activeChatMode === 'general'\" class=\"tab-underline\"></view>\n\t\t\t</view>\n\t\t\t<view class=\"function-item nav-tab-item\"\n\t\t\t\t:class=\"{active: activeChatMode === 'school'}\"\n\t\t\t\t@click=\"switchMode('school')\">\n\t\t\t\t<text class=\"function-item-text nav-tab-text\">择校</text>\n\t\t\t\t<view v-if=\"activeChatMode === 'school'\" class=\"tab-underline\"></view>\n\t\t\t</view>\n\t\t\t<view class=\"function-item nav-tab-item\"\n\t\t\t\t:class=\"{active: activeChatMode === 'career'}\"\n\t\t\t\t@click=\"switchMode('career')\">\n\t\t\t\t<text class=\"function-item-text nav-tab-text\">职业规划</text>\n\t\t\t\t<view v-if=\"activeChatMode === 'career'\" class=\"tab-underline\"></view>\n\t\t\t</view>\n\t\t</view>\n\t\t<view class=\"function-list\" v-else>\n\t\t\t<view class=\"function-item\"\n\t\t\t\t:class=\"{active: activeChatMode === 'general'}\"\n\t\t\t\t@click=\"switchMode('general')\">\n\t\t\t\t<text class=\"function-item-text\">通用</text>\n\t\t\t</view>\n\t\t\t<view class=\"function-item\"\n\t\t\t\t:class=\"{active: activeChatMode === 'school'}\"\n\t\t\t\t@click=\"switchMode('school')\">\n\t\t\t\t<text class=\"function-item-text\">择校</text>\n\t\t\t</view>\n\t\t\t<view class=\"function-item\"\n\t\t\t\t:class=\"{active: activeChatMode === 'career'}\"\n\t\t\t\t@click=\"switchMode('career')\">\n\t\t\t\t<text class=\"function-item-text\">职业规划</text>\n\t\t\t</view>\n\t\t</view>\n\t</view>\n</template>\n\n<script lang=\"uts\">\n\timport { mapState } from 'vuex';\n\t\n\t/**\n\t * @description 功能模式选择组件\n\t * @property {String} currentMode - 当前选中的模式（父组件传递，优先级低于Vuex状态）\n\t * @property {Boolean} inNav - 组件是否在导航栏中显示\n\t * @event {Function} modeChange - 模式变更事件\n\t */\n\texport default {\n\t\tname: \"ModeSelector\",\n\t\tprops: {\n\t\t\tcurrentMode: {\n\t\t\t\ttype: String,\n\t\t\t\tdefault: 'general',\n\t\t\t\tvalidator: (value) => ['general', 'school', 'career'].includes(value)\n\t\t\t},\n\t\t\tinNav: {\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: false\n\t\t\t}\n\t\t},\n\t\tcomputed: {\n\t\t\t/**\n\t\t\t * @description 从 Vuex 状态中获取聊天模式\n\t\t\t */\n\t\t\t...mapState({\n\t\t\t\tvuexChatMode: state => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn state.user && state.user.aiChat && state.user.aiChat.aiChat \n\t\t\t\t\t\t\t? state.user.aiChat.aiChat.chatMode \n\t\t\t\t\t\t\t: null;\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tuni.__f__('error','at pages_AI_Login_Match/AI/ai-chat/ModeSelector.vue:76','获取 Vuex chatMode 状态出错:', e);\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t\t\n\t\t\t/**\n\t\t\t * @description 计算当前活跃的聊天模式\n\t\t\t * 优先使用 Vuex 中的状态，如果没有则使用父组件传递的 prop\n\t\t\t * @returns {String} 当前活跃的聊天模式\n\t\t\t */\n\t\t\tactiveChatMode() {\n\t\t\t\tconst mode = this.vuexChatMode || this.currentMode || 'general';\n\t\t\t\tuni.__f__('log','at pages_AI_Login_Match/AI/ai-chat/ModeSelector.vue:89','ModeSelector activeChatMode 计算:', {\n\t\t\t\t\tvuexChatMode: this.vuexChatMode,\n\t\t\t\t\tcurrentMode: this.currentMode,\n\t\t\t\t\tactiveChatMode: mode,\n\t\t\t\t\ttimestamp: new Date().toLocaleTimeString()\n\t\t\t\t});\n\t\t\t\treturn mode;\n\t\t\t}\n\t\t},\n\t\twatch: {\n\t\t\t/**\n\t\t\t * @description 监听 Vuex 中的聊天模式变化\n\t\t\t * @param {String} newMode - 新的聊天模式\n\t\t\t * @param {String} oldMode - 旧的聊天模式\n\t\t\t */\n\t\t\tvuexChatMode: {\n\t\t\t\thandler(newMode, oldMode) {\n\t\t\t\t\tuni.__f__('log','at pages_AI_Login_Match/AI/ai-chat/ModeSelector.vue:106','ModeSelector vuexChatMode watch 触发:', {\n\t\t\t\t\t\toldMode,\n\t\t\t\t\t\tnewMode,\n\t\t\t\t\t\tactiveChatMode: this.activeChatMode,\n\t\t\t\t\t\ttimestamp: new Date().toLocaleTimeString()\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t// 强制触发响应式更新\n\t\t\t\t\tthis.$forceUpdate();\n\t\t\t\t\t\n\t\t\t\t\t// 只有在真正发生变化且不是初始化时才处理\n\t\t\t\t\tif (newMode && oldMode && newMode !== oldMode) {\n\t\t\t\t\t\tuni.__f__('log','at pages_AI_Login_Match/AI/ai-chat/ModeSelector.vue:118','ModeSelector 检测到 Vuex 聊天模式变化:', {\n\t\t\t\t\t\t\toldMode,\n\t\t\t\t\t\t\tnewMode,\n\t\t\t\t\t\t\tsource: '外部变化（如历史记录加载）'\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 这里不需要emit modeChange，因为这是由外部变化引起的\n\t\t\t\t\t\t// 外部变化（如加载历史记录）不应该触发新对话创建\n\t\t\t\t\t\t// 只有用户主动点击切换按钮时才需要创建新对话\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\timmediate: false\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * @description 监听 activeChatMode 的变化，用于调试\n\t\t\t * @param {String} newMode - 新的模式\n\t\t\t * @param {String} oldMode - 旧的模式\n\t\t\t */\n\t\t\tactiveChatMode: {\n\t\t\t\thandler(newMode, oldMode) {\n\t\t\t\t\tuni.__f__('log','at pages_AI_Login_Match/AI/ai-chat/ModeSelector.vue:139','ModeSelector activeChatMode 发生变化:', {\n\t\t\t\t\t\toldMode,\n\t\t\t\t\t\tnewMode,\n\t\t\t\t\t\ttimestamp: new Date().toLocaleTimeString()\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\timmediate: true\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\t/**\n\t\t\t * @description 切换对话模式\n\t\t\t * @param {String} mode - 对话模式\n\t\t\t */\n\t\t\tswitchMode(mode) {\n\t\t\t\tuni.__f__('log','at pages_AI_Login_Match/AI/ai-chat/ModeSelector.vue:154','switchMode 被调用:', {\n\t\t\t\t\ttargetMode: mode,\n\t\t\t\t\tcurrentActiveChatMode: this.activeChatMode,\n\t\t\t\t\tvuexChatMode: this.vuexChatMode,\n\t\t\t\t\tshouldProceed: this.activeChatMode !== mode\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tif (this.activeChatMode === mode) {\n\t\t\t\t\tuni.__f__('log','at pages_AI_Login_Match/AI/ai-chat/ModeSelector.vue:162','模式相同，跳过切换');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tuni.__f__('log','at pages_AI_Login_Match/AI/ai-chat/ModeSelector.vue:166','ModeSelector 用户主动切换模式:', {\n\t\t\t\t\tfrom: this.activeChatMode,\n\t\t\t\t\tto: mode\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// 创建新对话状态 - 这会清空当前对话并设置新的聊天模式\n\t\t\t\tthis.$store.commit('user/aiChat/CREATE_NEW_CONVERSATION', {\n\t\t\t\t\tchatMode: mode\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// 验证状态是否已更新\n\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\tuni.__f__('log','at pages_AI_Login_Match/AI/ai-chat/ModeSelector.vue:178','switchMode 状态更新后验证:', {\n\t\t\t\t\t\ttargetMode: mode,\n\t\t\t\t\t\tvuexChatMode: this.vuexChatMode,\n\t\t\t\t\t\tactiveChatMode: this.activeChatMode,\n\t\t\t\t\t\tstateUpdated: this.vuexChatMode === mode\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t// 如果状态没有正确更新，强制更新\n\t\t\t\t\tif (this.vuexChatMode !== mode) {\n\t\t\t\t\t\tuni.__f__('warn','at pages_AI_Login_Match/AI/ai-chat/ModeSelector.vue:187','状态更新失败，尝试直接更新 chatMode');\n\t\t\t\t\t\tthis.$store.commit('user/aiChat/UPDATE_CHAT_MODE', mode);\n\t\t\t\t\t\tthis.$forceUpdate();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// 通知父组件模式已切换，需要开始新对话\n\t\t\t\tthis.$emit('modeChange', {\n\t\t\t\t\tmode: mode,\n\t\t\t\t\tisNewConversation: true,\n\t\t\t\t\taction: 'switch'\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tuni.__f__('log','at pages_AI_Login_Match/AI/ai-chat/ModeSelector.vue:200','已切换到新模式并准备新对话:', mode);\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n<style>\n\t.function-section {\n\t\twidth: 100%;\n\t\tpadding: 15rpx;\n\t\tbackground-color: #ffffff;\n\t\tborder-radius: 16rpx;\n\t\tmargin-bottom: 20rpx;\n\t\tbox-shadow: 0 2rpx 10rpx rgba(0, 0, 0, 0.05);\n\t\tbox-sizing: border-box;\n\t}\n\t\n\t/* 导航栏内样式覆盖 */\n\t.function-section.nav-mode {\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t\tbackground-color: transparent;\n\t\tbox-shadow: none;\n\t\tborder-radius: 0;\n\t}\n\n\t.function-list {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tjustify-content: space-around;\n\t}\n\n\t.function-item {\n\t\tpadding: 15rpx 30rpx;\n\t\tborder-radius: 30rpx;\n\t\tbackground-color: #f0f0f0;\n\t\ttransition: all 0.3s;\n\t}\n\n\t/* 导航栏内Tab样式 */\n\t.nav-tab-list {\n\t\twidth: 100%;\n\t\tbackground: transparent;\n\t\tjustify-content: center;\n\t\talign-items: flex-end;\n\t\tborder-bottom: 2rpx solid #e0e0e0;\n\t\tposition: relative;\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t}\n\t.nav-tab-item {\n\t\tbackground: transparent !important;\n\t\tborder-radius: 0 !important;\n\t\tpadding: 0 32rpx 0 32rpx !important;\n\t\tmargin: 0;\n\t\tposition: relative;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tjustify-content: flex-end;\n\t\theight: 90rpx;\n\t}\n\t.nav-tab-text {\n\t\tfont-size: 32rpx;\n\t\tcolor: rgba(0, 0, 0, 0.5);\n\t\tfont-weight: 500;\n\t\tline-height: 90rpx;\n\t}\n\t.nav-tab-item.active .nav-tab-text {\n\t\tcolor: #5F26F7;\n\t}\n\t.tab-underline {\n\t\tposition: absolute;\n\t\tbottom: -2rpx;\n\t\tleft: 50%;\n\t\ttransform: translateX(-50%);\n\t\twidth: 110rpx;\n\t\theight: 12rpx;\n\t\tbackground: #5F26F7;\n\t\tborder-radius: 4rpx;\n\t}\n\n\t/* 导航栏内按钮样式调整 */\n\t.nav-mode .function-item {\n\t\tpadding: 8rpx 20rpx;\n\t\tmargin: 0 5rpx;\n\t}\n\n\n\n\t.function-item-text {\n\t\tfont-family: 'PingFang SC';\n\t\tfont-style: normal;\n\t\tfont-size: 28rpx;\n\t\tcolor: rgba(0, 0, 0, 0.5);\n\t\tletter-spacing: -0.552147px;\n\t}\n\n\t.nav-mode .function-item-text {\n\t\tfont-size: 28rpx;\n\t}\n\n\t.function-item.active .function-item-text {\n\t\tcolor: #5F26F7;\n\t}\n</style> "],"names":["_sfc_main","defineComponent","value","mapState","state","e","uni","mode","newMode","oldMode"],"mappings":"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"}