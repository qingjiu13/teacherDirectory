{"version":3,"file":"undergraduate.js","sources":["pages_AI_Login_Match/components/combobox/undergraduate.js"],"sourcesContent":["import Fuse from 'fuse.js'\r\n\r\nexport default function createDataModule(dataList) {\r\n  return {\r\n    state: {\r\n      data: dataList,\r\n      filterKeyword: '',\r\n      dataFuse: null // 存储 Fuse 实例\r\n    },\r\n\r\n    mutations: {\r\n      setFilterKeyword(state, keyword) {\r\n        state.filterKeyword = keyword\r\n      },\r\n\r\n      // 初始化 Fuse 实例\r\n      initFuse(state) {\r\n        const dataItems = state.data.map(name => {\r\n          const shortNames = generateShortNames(name)\r\n          return {\r\n            name: name,         // 原数据名\r\n            short: shortNames,  // 生成的简称组合\r\n            display: name       // 可显示名（备用）\r\n          }\r\n        })\r\n\r\n        state.dataFuse = new Fuse(\r\n          dataItems,\r\n          {\r\n            keys: [\r\n              { name: 'name', weight: 0.7 },   // 正式全名匹配，权重大\r\n              { name: 'short', weight: 0.3 }   // 简称匹配，权重小\r\n            ],\r\n            threshold: 0.6,          // 宽松匹配\r\n            includeScore: true,\r\n            shouldSort: true,\r\n            minMatchCharLength: 1,\r\n            ignoreLocation: true,\r\n            findAllMatches: true,\r\n            distance: 1000,\r\n            location: 0,\r\n            includeMatches: true\r\n          }\r\n        )\r\n\r\n        console.log('数据搜索引擎初始化完成，总数量:', dataItems.length)\r\n      }\r\n    },\r\n\r\n    getters: {\r\n      filteredData(state) {\r\n        if (!state.filterKeyword) {\r\n          return state.data.slice(0, 30) // 限制初始显示数量（比如前30个）\r\n        }\r\n\r\n        if (!state.dataFuse) {\r\n          this.mutations.initFuse(state)\r\n        }\r\n\r\n        const keyword = state.filterKeyword.trim()\r\n\r\n        const results = state.dataFuse.search(keyword)\r\n\r\n        if (results.length > 0) {\r\n          console.log('搜索关键词:', keyword, '找到结果数:', results.length)\r\n        }\r\n\r\n        return results.map(result => result.item.name)\r\n      },\r\n\r\n      // 获取最佳匹配的数据（用于自动完成）\r\n      bestMatchedData(state, getters) {\r\n        if (!state.filterKeyword || !state.dataFuse) return ''\r\n\r\n        const results = state.dataFuse.search(state.filterKeyword.trim())\r\n        return results.length > 0 ? results[0].item.name : ''\r\n      }\r\n    },\r\n\r\n    actions: {\r\n      updateFilterKeyword({ commit }, keyword) {\r\n        commit('setFilterKeyword', keyword)\r\n      },\r\n\r\n      initSearch({ commit }) {\r\n        commit('initFuse')\r\n      },\r\n\r\n      autoSelectBestMatch({ state, getters }) {\r\n        return getters.bestMatchedData\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @description 为名称生成可能的简称组合，用于提高模糊搜索能力\r\n * @param {String} name - 完整名称\r\n * @returns {String} - 可能的简称组合（空格分隔）\r\n */\r\nfunction generateShortNames(name) {\r\n  let shortNames = []\r\n\r\n  const chineseChars = name.split('').filter(char => /[\\u4e00-\\u9fa5]/.test(char)).join('')\r\n\r\n  if (chineseChars.length >= 2) {\r\n    shortNames.push(chineseChars.substring(0, 2)) // 前两个字\r\n  }\r\n\r\n  if (chineseChars.length >= 3) {\r\n    shortNames.push(chineseChars.substring(0, 3)) // 前三个字\r\n    const match = chineseChars.match(/^([\\u4e00-\\u9fa5]{2})([\\u4e00-\\u9fa5]{1,3})/)\r\n    if (match) {\r\n      shortNames.push(match[1][0] + match[2]) // 地名+关键词，比如\"北理\"\r\n    }\r\n  }\r\n\r\n  if (chineseChars.length >= 4 && (name.includes('大学') || name.includes('学院'))) {\r\n    shortNames.push(chineseChars.substring(2)) // 去掉地名\r\n  }\r\n\r\n  return shortNames.join(' ')\r\n}\r\n"],"names":["createDataModule","dataList","state","keyword","dataItems","name","shortNames","generateShortNames","Fuse","uni","results","result","getters","commit","chineseChars","char","match"],"mappings":"0DAEe,SAASA,EAAiBC,EAAU,CACjD,MAAO,CACL,MAAO,CACL,KAAMA,EACN,cAAe,GACf,SAAU,IACX,EAED,UAAW,CACT,iBAAiBC,EAAOC,EAAS,CAC/BD,EAAM,cAAgBC,CACvB,EAGD,SAASD,EAAO,CACd,MAAME,EAAYF,EAAM,KAAK,IAAIG,GAAQ,CACvC,MAAMC,EAAaC,EAAmBF,CAAI,EAC1C,MAAO,CACL,KAAMA,EACN,MAAOC,EACP,QAASD,CACV,CACX,CAAS,EAEDH,EAAM,SAAW,IAAIM,EAAI,KACvBJ,EACA,CACE,KAAM,CACJ,CAAE,KAAM,OAAQ,OAAQ,EAAK,EAC7B,CAAE,KAAM,QAAS,OAAQ,EAAK,CAC/B,EACD,UAAW,GACX,aAAc,GACd,WAAY,GACZ,mBAAoB,EACpB,eAAgB,GAChB,eAAgB,GAChB,SAAU,IACV,SAAU,EACV,eAAgB,EACjB,CACF,EAEDK,sFAAY,mBAAoBL,EAAU,MAAM,CACjD,CACF,EAED,QAAS,CACP,aAAaF,EAAO,CAClB,GAAI,CAACA,EAAM,cACT,OAAOA,EAAM,KAAK,MAAM,EAAG,EAAE,EAG1BA,EAAM,UACT,KAAK,UAAU,SAASA,CAAK,EAG/B,MAAMC,EAAUD,EAAM,cAAc,KAAM,EAEpCQ,EAAUR,EAAM,SAAS,OAAOC,CAAO,EAE7C,OAAIO,EAAQ,OAAS,GACnBD,QAAA,MAAA,MAAA,kEAAY,SAAUN,EAAS,SAAUO,EAAQ,MAAM,EAGlDA,EAAQ,IAAIC,GAAUA,EAAO,KAAK,IAAI,CAC9C,EAGD,gBAAgBT,EAAOU,EAAS,CAC9B,GAAI,CAACV,EAAM,eAAiB,CAACA,EAAM,SAAU,MAAO,GAEpD,MAAMQ,EAAUR,EAAM,SAAS,OAAOA,EAAM,cAAc,MAAM,EAChE,OAAOQ,EAAQ,OAAS,EAAIA,EAAQ,CAAC,EAAE,KAAK,KAAO,EACpD,CACF,EAED,QAAS,CACP,oBAAoB,CAAE,OAAAG,CAAQ,EAAEV,EAAS,CACvCU,EAAO,mBAAoBV,CAAO,CACnC,EAED,WAAW,CAAE,OAAAU,GAAU,CACrBA,EAAO,UAAU,CAClB,EAED,oBAAoB,CAAE,MAAAX,EAAO,QAAAU,GAAW,CACtC,OAAOA,EAAQ,eAChB,CACF,CACF,CACH,CAOA,SAASL,EAAmBF,EAAM,CAChC,IAAIC,EAAa,CAAE,EAEnB,MAAMQ,EAAeT,EAAK,MAAM,EAAE,EAAE,OAAOU,GAAQ,kBAAkB,KAAKA,CAAI,CAAC,EAAE,KAAK,EAAE,EAMxF,GAJID,EAAa,QAAU,GACzBR,EAAW,KAAKQ,EAAa,UAAU,EAAG,CAAC,CAAC,EAG1CA,EAAa,QAAU,EAAG,CAC5BR,EAAW,KAAKQ,EAAa,UAAU,EAAG,CAAC,CAAC,EAC5C,MAAME,EAAQF,EAAa,MAAM,6CAA6C,EAC1EE,GACFV,EAAW,KAAKU,EAAM,CAAC,EAAE,CAAC,EAAIA,EAAM,CAAC,CAAC,CAEzC,CAED,OAAIF,EAAa,QAAU,IAAMT,EAAK,SAAS,IAAI,GAAKA,EAAK,SAAS,IAAI,IACxEC,EAAW,KAAKQ,EAAa,UAAU,CAAC,CAAC,EAGpCR,EAAW,KAAK,GAAG,CAC5B"}