{"version":3,"file":"login_detail.js","sources":["pages_AI_Login_Match/login/login_detail.vue","../../../HBuilderX/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXNfQUlfTG9naW5fTWF0Y2hcbG9naW5cbG9naW5fZGV0YWlsLnZ1ZQ"],"sourcesContent":["<template>\r\n  <Header :title=\"'登录详情'\" @back=\"handleBack\" class=\"header-container\"/>\r\n\t<view class=\"background-image\">\r\n    <image\r\n        src=\"../static/login/background1.png\"\r\n        mode=\"aspectFill\" alt=\"背景图\"\r\n      />\r\n    </view>\r\n    <view class=\"background-image\">\r\n      <image\r\n        src=\"../static/login/background.png\"\r\n        mode=\"aspectFill\" alt=\"背景图\"\r\n      />\r\n  </view>\r\n  <view class=\"form-container\">\r\n          <!-- 表单内容 -->\r\n    <view class=\"form-card\">\r\n      <view class=\"reminder-outer\">\r\n        <view class=\"reminder-inner\">\r\n          <text class=\"reminder-text\">以下信息为选填项，您可以选择填写您想提供的信息</text>\r\n        </view>\r\n      </view>\r\n      <!-- 普通学校和专业筛选框 - 仅学生显示 -->\r\n      <template v-if=\"userRole === '学生'\">\r\n        <!-- School - 使用单输入筛选框 -->\r\n        <view class=\"form-row\">\r\n          <view class=\"label-container\">\r\n            <text class=\"form-label\">就读学校</text>\r\n            <text class=\"optional-tag\">(选填)</text>\r\n          </view>\r\n          <ChoiceSelected\r\n            class=\"form-select\"\r\n            componentType=\"undergraduate\"\r\n            :choiceIndex=\"formData.schoolIndex\"\r\n            :choiceList=\"schoolList\"\r\n            defaultText=\"请选择学校\"\r\n            mode=\"search\"\r\n            searchPlaceholder=\"输入学校名称\"\r\n            @onChoiceClick=\"handleSchoolSelect\"\r\n            @search-input=\"handleSchoolSearch\"\r\n            ref=\"schoolDropdown\"\r\n          />\r\n        </view>\r\n        \r\n        <!-- Major - 使用单输入筛选框 -->\r\n        <view class=\"form-row\">\r\n          <view class=\"label-container\">\r\n            <text class=\"form-label\">就读专业</text>\r\n            <text class=\"optional-tag\">(选填)</text>\r\n          </view>\r\n          <ChoiceSelected\r\n            class=\"form-select\"\r\n            componentType=\"undergraduate\"\r\n            :choiceIndex=\"formData.majorIndex\"\r\n            :choiceList=\"majorList\"\r\n            defaultText=\"请选择专业\"\r\n            mode=\"search\"\r\n            searchPlaceholder=\"输入专业名称\"\r\n            @onChoiceClick=\"handleMajorSelect\"\r\n            @search-input=\"handleMajorSearch\"\r\n            ref=\"majorDropdown\"\r\n          />\r\n        </view>\r\n      </template>\r\n\r\n      <!-- Grade -->\r\n      <view class=\"form-row\">\r\n        <view class=\"label-container\">\r\n          <text class=\"form-label\">年级</text>\r\n          <text class=\"optional-tag\">(选填)</text>\r\n        </view>\r\n        <ChoiceSelected\r\n          class=\"form-select\"\r\n          :choiceIndex=\"formData.gradeIndex\"\r\n          :choiceList=\"gradeList\"\r\n          defaultText=\"请选择年级\"\r\n          mode=\"select\"\r\n          @onChoiceClick=\"handleGradeSelect\"\r\n        />\r\n      </view>\r\n      \r\n      <!-- 目标学校和目标专业筛选框 - 学生和老师都显示，但标签有区别 -->\r\n      <template>\r\n          <!-- Target School -->\r\n          <view class=\"form-row\">\r\n            <view class=\"label-container\">\r\n              <text class=\"form-label\">{{ userRole === '学生' ? '目标学校' : '就读学校' }}</text>\r\n              <text class=\"optional-tag\">(选填)</text>\r\n            </view>\r\n            <ChoiceSelected\r\n              class=\"form-select\"\r\n              componentType=\"graduateSchool\"\r\n              :choiceIndex=\"formData.targetSchoolIndex\"\r\n              :choiceList=\"targetSchoolList\"\r\n              :defaultText=\"userRole === '学生' ? '请选择目标学校' : '请选择学校'\"\r\n              mode=\"search\"\r\n              :searchPlaceholder=\"userRole === '学生' ? '输入目标学校名称' : '输入学校名称'\"\r\n              @onChoiceClick=\"handleTargetSchoolSelect\"\r\n              @search-input=\"handleTargetSchoolSearch\"\r\n              @linkage-change=\"handleSchoolChange\"\r\n              :enablePagination=\"true\"\r\n              :pageSize=\"10\"\r\n              ref=\"targetSchoolDropdown\"\r\n            />\r\n          </view>\r\n          \r\n          <!-- Target Major -->\r\n          <view class=\"form-row\">\r\n            <view class=\"label-container\">\r\n              <text class=\"form-label\">{{ userRole === '学生' ? '目标专业' : '就读专业' }}</text>\r\n              <text class=\"optional-tag\">(选填)</text>\r\n            </view>\r\n            <ChoiceSelected\r\n              class=\"form-select\"\r\n              componentType=\"graduateMajor\"\r\n              :choiceIndex=\"formData.targetMajorIndex\"\r\n              :choiceList=\"targetMajorList\"\r\n              :parentValue=\"formData.targetSchool\"\r\n              :isLinkage=\"true\"\r\n              :defaultText=\"formData.targetSchool ? '请选择专业' : '请先选择学校'\"\r\n              mode=\"search\"\r\n              :searchPlaceholder=\"!formData.targetSchool ? '请先选择学校' : (userRole === '学生' ? '请选择目标专业' : '请选择专业')\"\r\n              @onChoiceClick=\"handleTargetMajorSelect\"\r\n              @search-input=\"handleTargetMajorSearch\"\r\n              @reset-selection=\"resetMajorSelection\"\r\n              :enablePagination=\"true\"\r\n              :pageSize=\"10\"\r\n              ref=\"targetMajorDropdown\"\r\n            />\r\n          </view>\r\n      </template>\r\n      <!-- 按钮区域 -->\r\n      <view class=\"button-container\">\r\n        <button class=\"skip-btn\" @click=\"skipForm\">\r\n          <image src=\"../static/login/skip.png\" class=\"skip-btn-icon\"/>\r\n          <text class=\"btn-text\">跳过</text>\r\n        </button>\r\n        <button class=\"submit-btn\" @click=\"submitForm\">\r\n          <image src=\"../static/login/submit.png\" class=\"submit-btn-icon\"/>\r\n          <text class=\"btn-text\">提交</text>\r\n        </button>\r\n      </view>\r\n    </view>\r\n\r\n    \r\n    <!-- 老师角色协议确认浮窗 -->\r\n    <view class=\"modal-overlay\" v-if=\"showAgreementModal\" @click.stop=\"closeModal\">\r\n      <view class=\"modal-content\" @click.stop>\r\n        <view class=\"modal-title\">入驻协议</view>\r\n        <view class=\"modal-body\">\r\n          <view class=\"agreement-text\">\r\n            <view class=\"agreement-item\">就平台入驻涉及的权利和义务与您做出如下约定：</view>\r\n            <view class=\"agreement-item\">1、您知晓并同意，登署本协议即代表您依照本协议公布的规则履行义务并享有权利。</view>\r\n            <view class=\"agreement-item\">2、您同意，申请入驻平台认证老师后按照平台要求提供服务，包括并不限于向平台用户提供线上线下考研咨询及资料服务。</view>\r\n            <view class=\"agreement-item\">3、您同意，入驻平台认证学长通过后，进行线上服务时就服务标准内容进行回复，不得向用户索要用户私人联系方式包括(微信、手机号等)，平台会对站内聊天内容进行监控，若发现违规内容，平台有权进行处理，处理方式包括并不限于限制消息发送、删除消息等，若违规行为次数超过2次，平台有权对您的认证状态进行撤销。</view>\r\n          </view>\r\n        </view>\r\n        <view class=\"modal-footer\">\r\n          <button class=\"agree-btn\" @click=\"confirmAgreement\">我已悉知并同意</button>\r\n        </view>\r\n      </view>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script lang=\"uts\">\r\nimport ChoiceSelected from '@/components/combobox/combobox'\r\nimport { mapState, mapActions, mapGetters, mapMutations } from 'vuex'\r\nimport { Navigator } from '@/router/Router';\r\nimport GraduateStore from '@/components/combobox/graduate_school_major.js';\r\nimport createDataModule from '@/components/combobox/undergraduate.js';\r\nimport schoolData from '@/pages_AI_Login_Match/static/data/2886所大学.json';\r\nimport majorData from '@/pages_AI_Login_Match/static/data/本科专业.json';\r\nimport Header from '@/components/navigationTitleBar/header';\r\n\r\nexport default {\r\n  onPageScroll() {\r\n    // 通知所有组件页面已滚动\r\n    uni.$emit('page-scroll');\r\n  },\r\n  components: {\r\n    ChoiceSelected,\r\n    Header\r\n  },\r\n  onLoad() {\r\n    this.loadUniversityData();\r\n    this.initSchoolAndMajorSearch();\r\n    // 加载用户信息\r\n    this.initUserInfo();\r\n  },\r\n  data() {\r\n    return {\r\n      formData: {\r\n        nickname: '', // 用户昵称\r\n        avatar: '/static/image/defaultAvatar/teacher-man.png', // 默认头像\r\n        schoolIndex: -1,\r\n        majorIndex: -1,\r\n        targetSchoolIndex: -1,  // 目标学校索引\r\n        targetMajorIndex: -1,   // 目标专业索引\r\n        gradeIndex: -1,\r\n        targetSchool: '',\r\n        targetMajor: '', // 目标专业值\r\n      },\r\n      schoolList: [], // 普通学校列表\r\n      majorList: [], // 普通专业列表\r\n      targetSchoolList: [], // 目标学校列表（考研）\r\n      targetMajorList: [], // 目标专业列表（考研）\r\n      allGradeList: ['大一', '大二', '大三', '大四', '研一', '研二', '研三'],\r\n      showAgreementModal: false, // 控制协议浮窗显示\r\n      pendingUserInfo: null, // 暂存待提交的用户信息\r\n      // 分离筛选器状态\r\n      graduateStore: null, // 研究生数据状态\r\n      schoolStore: null, // 本科学校数据状态\r\n      majorStore: null, // 本科专业数据状态\r\n      token: '', // 用户token\r\n      userId: '', // 用户ID\r\n    };\r\n  },\r\n  computed: {\r\n    // 使用mapState映射userInfo相关状态\r\n    ...mapState('user/baseInfo', {\r\n      userRole: state => state.userInfo.role,\r\n      userSchool: state => state.userInfo.school,\r\n      userMajor: state => state.userInfo.major,\r\n      userTargetSchool: state => state.userInfo.targetSchool,\r\n      userTargetMajor: state => state.userInfo.targetMajor,\r\n      userStudentGrade: state => state.userInfo.studentGrade,\r\n      userTeacherGrade: state => state.userInfo.teacherGrade,\r\n    }),\r\n    \r\n    /**\r\n     * 根据用户角色筛选年级列表\r\n     * @returns {Array} 筛选后的年级列表\r\n     */\r\n    gradeList() {\r\n      if (this.userRole === '老师') {\r\n        return this.allGradeList.filter(grade => grade.includes('研'));\r\n      } else {\r\n        return this.allGradeList.filter(grade => grade.includes('大'));\r\n      }\r\n    },\r\n    /**\r\n     * @description 获取过滤后的目标学校列表\r\n     * @returns {Array} 过滤后的目标学校列表\r\n     */\r\n    filteredTargetSchoolList() {\r\n      if (!this.graduateStore) return [];\r\n      return GraduateStore.getters.filteredSchoolList(this.graduateStore);\r\n    },\r\n    \r\n    /**\r\n     * @description 获取过滤后的目标专业列表\r\n     * @returns {Array} 过滤后的目标专业列表\r\n     */\r\n    filteredTargetMajorList() {\r\n      if (!this.graduateStore) return [];\r\n      return GraduateStore.getters.filteredMajorList(this.graduateStore);\r\n    },\r\n\r\n    /**\r\n     * @description 获取过滤后的本科学校列表\r\n     * @returns {Array} 过滤后的本科学校列表\r\n     */\r\n    filteredSchoolList() {\r\n      if (!this.schoolStore) return [];\r\n      return this.schoolStore.getters.filteredData(this.schoolStore.state);\r\n    }\r\n  },\r\n  methods: {\r\n    // 使用mapMutations映射UPDATE_USER_INFO方法\r\n    ...mapMutations('user/baseInfo', ['UPDATE_USER_INFO', 'SET_USER_INFO']),\r\n    handleBack() {\r\n      Navigator.toLogin();\r\n    },\r\n    /**\r\n     * @description 初始化用户信息\r\n     */\r\n    initUserInfo() {\r\n      // 获取token和userId\r\n      this.token = uni.getStorageSync('token') || '';\r\n      this.userId = uni.getStorageSync('userId') || '';\r\n      \r\n      if (!this.token) {\r\n        // 如果没有token，可能需要重新登录\r\n        uni.showToast({\r\n          title: '请先登录',\r\n          icon: 'none'\r\n        });\r\n        return;\r\n      }\r\n      \r\n      // 如果有已存储的用户信息，显示它们\r\n      const storedNickname = uni.getStorageSync('nickname') || '';\r\n      const storedAvatar = uni.getStorageSync('avatar') || '';\r\n      \r\n      if (storedNickname) {\r\n        this.formData.nickname = storedNickname;\r\n      }\r\n      \r\n      if (storedAvatar) {\r\n        this.formData.avatar = storedAvatar;\r\n      }\r\n      \r\n      // 如果需要，可以尝试从后端获取最新的用户信息\r\n      this.fetchUserProfile();\r\n    },\r\n    \r\n    /**\r\n     * @description 从后端获取用户信息\r\n     */\r\n    fetchUserProfile() {\r\n      if (!this.token || !this.userId) return;\r\n      \r\n      uni.request({\r\n        url: `http://localhost:8080/users/profile/${this.userId}`,\r\n        method: 'GET',\r\n        header: {\r\n          'Authorization': `Bearer ${this.token}`\r\n        },\r\n        success: (res) => {\r\n          if (res.statusCode === 200 && res.data) {\r\n            const userData = res.data;\r\n            \r\n            // 更新表单数据\r\n            if (userData.nickname) {\r\n              this.formData.nickname = userData.nickname;\r\n              uni.setStorageSync('nickname', userData.nickname);\r\n            }\r\n            \r\n            if (userData.avatar) {\r\n              this.formData.avatar = userData.avatar;\r\n              uni.setStorageSync('avatar', userData.avatar);\r\n            }\r\n            \r\n            // 更新Vuex状态\r\n            this.SET_USER_INFO({\r\n              id: userData.id || this.userId,\r\n              name: userData.nickname || this.formData.nickname,\r\n              avatar: userData.avatar || this.formData.avatar,\r\n              isRegistered: 1\r\n            });\r\n            \r\n            uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:343','用户信息已更新');\r\n          }\r\n        },\r\n        fail: (err) => {\r\n          uni.__f__('error','at pages_AI_Login_Match/login/login_detail.vue:347','获取用户信息失败', err);\r\n        }\r\n      });\r\n    },\r\n    \r\n    /**\r\n     * @description 上传头像\r\n     */\r\n    uploadAvatar() {\r\n      uni.chooseImage({\r\n        count: 1,\r\n        sizeType: ['compressed'],\r\n        sourceType: ['album', 'camera'],\r\n        success: (res) => {\r\n          const tempFilePaths = res.tempFilePaths;\r\n          \r\n          // 显示加载中\r\n          uni.showLoading({\r\n            title: '上传中...'\r\n          });\r\n          \r\n          // 预览选择的图片\r\n          this.formData.avatar = tempFilePaths[0];\r\n          \r\n          // 真实环境中，这里应该调用上传API\r\n          // 模拟上传完成\r\n          setTimeout(() => {\r\n            uni.hideLoading();\r\n            uni.showToast({\r\n              title: '头像已更新',\r\n              icon: 'success'\r\n            });\r\n            \r\n            // 存储到本地以便下次显示\r\n            uni.setStorageSync('avatar', tempFilePaths[0]);\r\n          }, 1000);\r\n        }\r\n      });\r\n    },\r\n    \r\n    /**\r\n     * @description 初始化学校和专业搜索引擎\r\n     */\r\n    initSchoolAndMajorSearch() {\r\n      // 初始化本科学校数据状态\r\n      this.schoolStore = createDataModule(schoolData);\r\n      \r\n      // 初始化本科专业数据状态\r\n      this.majorStore = createDataModule(majorData);\r\n      \r\n      // 初始化搜索引擎\r\n      this.schoolStore.actions.initSearch({\r\n        commit: (mutation, payload) => {\r\n          this.schoolStore.mutations[mutation](this.schoolStore.state, payload);\r\n        }\r\n      });\r\n      \r\n      this.majorStore.actions.initSearch({\r\n        commit: (mutation, payload) => {\r\n          this.majorStore.mutations[mutation](this.majorStore.state, payload);\r\n        }\r\n      });\r\n      \r\n      // 初始填充数据\r\n      this.schoolList = this.schoolStore.getters.filteredData(this.schoolStore.state);\r\n      this.majorList = this.majorStore.getters.filteredData(this.majorStore.state);\r\n    },\r\n\r\n    /**\r\n     * @description 处理学校选择\r\n     * @param {Number} index - 选择的索引\r\n     * @param {String} school - 选择的学校名称\r\n     */\r\n    handleSchoolSelect(index, school) {\r\n      this.formData.schoolIndex = index;\r\n    },\r\n\r\n    /**\r\n     * @description 处理专业选择\r\n     * @param {Number} index - 选择的索引\r\n     * @param {String} major - 选择的专业名称\r\n     */\r\n    handleMajorSelect(index, major) {\r\n      this.formData.majorIndex = index;\r\n    },\r\n\r\n    /**\r\n     * @description 处理目标学校选择 - 级联选择的父项\r\n     * @param {Number} index - 选择的索引\r\n     * @param {String} school - 选择的学校名称\r\n     */\r\n    handleTargetSchoolSelect(index, school) {\r\n      this.formData.targetSchoolIndex = index;\r\n      this.formData.targetSchool = school;\r\n      \r\n      // 更新专业列表的依赖值\r\n      GraduateStore.actions.selectSchool({\r\n        commit: (mutation, payload) => {\r\n          GraduateStore.mutations[mutation](this.graduateStore, payload);\r\n        }\r\n      }, school);\r\n      \r\n      // 重置专业选择\r\n      this.resetMajorSelection();\r\n    },\r\n    /**\r\n     * @description 处理目标专业选择 - 级联选择的子项\r\n     * @param {Number} index - 选择的索引\r\n     * @param {String} major - 选择的专业名称\r\n     */\r\n    handleTargetMajorSelect(index, major) {\r\n      this.formData.targetMajorIndex = index;\r\n      this.formData.targetMajor = major;\r\n    },\r\n    /**\r\n     * @description 处理年级选择\r\n     * @param {Number} index - 选择的索引\r\n     */\r\n    handleGradeSelect(index) {\r\n      this.formData.gradeIndex = index;\r\n    },\r\n    \r\n    /**\r\n     * @description 处理学校搜索输入 - 使用本科学校搜索引擎\r\n     * @param {String} keyword - 搜索关键词\r\n     */\r\n    handleSchoolSearch(keyword) {\r\n      // 更新学校搜索关键词\r\n      this.schoolStore.actions.updateFilterKeyword({\r\n        commit: (mutation, payload) => {\r\n          this.schoolStore.mutations[mutation](this.schoolStore.state, payload);\r\n        }\r\n      }, keyword);\r\n      \r\n      // 获取过滤结果\r\n      this.schoolList = this.schoolStore.getters.filteredData(this.schoolStore.state);\r\n      \r\n      // 调试信息\r\n      uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:485',`学校搜索: \"${keyword}\", 结果数: ${this.schoolList.length}`);\r\n    },\r\n    \r\n    /**\r\n     * @description 处理专业搜索输入\r\n     * @param {String} keyword - 搜索关键词\r\n     */\r\n    handleMajorSearch(keyword) {\r\n      // 更新专业搜索关键词\r\n      this.majorStore.actions.updateFilterKeyword({\r\n        commit: (mutation, payload) => {\r\n          this.majorStore.mutations[mutation](this.majorStore.state, payload);\r\n        }\r\n      }, keyword);\r\n      \r\n      // 获取过滤结果\r\n      this.majorList = this.majorStore.getters.filteredData(this.majorStore.state);\r\n      \r\n      // 调试信息\r\n      uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:504',`专业搜索: \"${keyword}\", 结果数: ${this.majorList.length}`);\r\n    },\r\n    \r\n    /**\r\n     * @description 处理目标学校搜索输入 - 使用研究生学校搜索引擎\r\n     * @param {String} keyword - 搜索关键词\r\n     */\r\n    handleTargetSchoolSearch(keyword) {\r\n      uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:512','处理学校搜索:', keyword);\r\n      \r\n      // 特殊处理: 如果关键词为空，显示所有学校（但限制数量）\r\n      if (!keyword || keyword.trim() === '') {\r\n        const allSchools = Object.keys(this.graduateStore.schools).slice(0, 50);\r\n        this.targetSchoolList = allSchools;\r\n        uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:518','关键词为空，显示前50所学校');\r\n        return;\r\n      }\r\n      \r\n      // 确保搜索引擎已初始化\r\n      if (!this.graduateStore.schoolFuse) {\r\n        uni.__f__('warn','at pages_AI_Login_Match/login/login_detail.vue:524','Fuse搜索引擎未初始化，强制重新初始化中...');\r\n        // 强制重新初始化搜索引擎，确保搜索质量\r\n        GraduateStore.actions.reinitializeSearch({\r\n          commit: (mutation, payload) => {\r\n            GraduateStore.mutations[mutation](this.graduateStore, payload);\r\n          },\r\n          state: this.graduateStore\r\n        });\r\n      }\r\n      \r\n      // 更新学校搜索关键词\r\n      GraduateStore.mutations.setSchoolKeyword(this.graduateStore, keyword);\r\n      \r\n      // 手动获取过滤结果并更新列表\r\n      const filteredSchools = GraduateStore.getters.filteredSchoolList(this.graduateStore);\r\n      uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:539','过滤后的学校列表:', filteredSchools);\r\n      \r\n      // 直接更新目标学校列表，不依赖watch\r\n      this.targetSchoolList = filteredSchools;\r\n      \r\n      // 强制刷新组件\r\n      this.$nextTick(() => {\r\n        // 记录结果数量\r\n        uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:547',`最终显示学校数量: ${filteredSchools.length}`);\r\n        \r\n        // 确保下拉框组件刷新\r\n        if (this.$refs.targetSchoolDropdown) {\r\n          this.$refs.targetSchoolDropdown.$forceUpdate();\r\n        }\r\n      });\r\n    },\r\n    \r\n    /**\r\n     * @description 处理目标专业搜索输入 - 使用研究生专业搜索引擎\r\n     * @param {String} keyword - 搜索关键词\r\n     */\r\n    handleTargetMajorSearch(keyword) {\r\n      uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:561','处理专业搜索:', keyword);\r\n      \r\n      // 确保当前有选中的学校\r\n      if (!this.graduateStore.selectedSchool) {\r\n        uni.__f__('warn','at pages_AI_Login_Match/login/login_detail.vue:565','未选择学校，专业搜索无效');\r\n        return;\r\n      }\r\n      \r\n      // 如果关键词为空，显示所有专业（但限制数量）\r\n      if (!keyword || keyword.trim() === '') {\r\n        const allMajors = this.graduateStore.schools[this.graduateStore.selectedSchool] || [];\r\n        this.targetMajorList = allMajors.slice(0, 20); // 限制初始显示数量\r\n        uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:573','关键词为空，显示前20个专业');\r\n        return;\r\n      }\r\n      \r\n      // 确保专业搜索引擎已初始化\r\n      if (!this.graduateStore.majorFuse) {\r\n        uni.__f__('warn','at pages_AI_Login_Match/login/login_detail.vue:579','专业搜索引擎未初始化，重新初始化中...');\r\n        // 重新初始化当前学校的专业搜索引擎\r\n        GraduateStore.mutations.setSelectedSchool(this.graduateStore, this.graduateStore.selectedSchool);\r\n      }\r\n      \r\n      // 更新专业搜索关键词\r\n      GraduateStore.mutations.setMajorKeyword(this.graduateStore, keyword);\r\n      \r\n      // 手动获取过滤结果并更新列表\r\n      const filteredMajors = GraduateStore.getters.filteredMajorList(this.graduateStore);\r\n      uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:589','过滤后的专业列表:', filteredMajors);\r\n      \r\n      // 直接更新目标专业列表，不依赖watch\r\n      this.targetMajorList = filteredMajors;\r\n      \r\n      // 强制刷新组件\r\n      this.$nextTick(() => {\r\n        // 记录结果数量\r\n        uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:597',`最终显示专业数量: ${filteredMajors.length}`);\r\n        \r\n        // 确保下拉框组件刷新\r\n        if (this.$refs.targetMajorDropdown) {\r\n          this.$refs.targetMajorDropdown.$forceUpdate();\r\n        }\r\n      });\r\n    },\r\n    \r\n    /**\r\n     * @description 关闭所有下拉框\r\n     */\r\n    closeAllDropdowns() {\r\n      const dropdowns = ['schoolDropdown', 'majorDropdown', 'targetSchoolDropdown', 'targetMajorDropdown'];\r\n      dropdowns.forEach(dropdown => {\r\n        if (this.$refs && this.$refs[dropdown]) {\r\n          this.$refs[dropdown].closeDropdown && this.$refs[dropdown].closeDropdown();\r\n        }\r\n      });\r\n    },\r\n    \r\n    /**\r\n     * @description 加载大学数据\r\n     */\r\n    loadUniversityData() {\r\n      try {\r\n        // 初始化考研数据（目标学校和专业）\r\n        this.initGraduateData(); \r\n        \r\n        uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:626','成功加载学校数据');\r\n      } catch (error) {\r\n        uni.__f__('error','at pages_AI_Login_Match/login/login_detail.vue:628','加载大学数据失败:', error);\r\n        \r\n        // 设置默认学校列表\r\n        const defaultSchools = [\"北京大学\", \"清华大学\", \"复旦大学\"];\r\n        \r\n        // 设置普通学校列表（就读学校）\r\n        this.schoolList = defaultSchools;\r\n        \r\n        // 设置目标学校列表（考研学校）\r\n        this.targetSchoolList = defaultSchools;\r\n        \r\n        uni.showToast({\r\n          title: '加载大学数据失败，使用默认列表',\r\n          icon: 'none'\r\n        });\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * @description 关闭协议确认浮窗\r\n     */\r\n    closeModal() {\r\n      this.showAgreementModal = false;\r\n      this.pendingUserInfo = null;\r\n    },\r\n    \r\n    /**\r\n     * @description 确认同意协议并提交信息\r\n     */\r\n    confirmAgreement() {\r\n      if (this.pendingUserInfo) {\r\n        // 使用mapMutations映射的方法更新用户信息\r\n        this.UPDATE_USER_INFO(this.pendingUserInfo);\r\n        \r\n        // 提交到后端\r\n        this.submitToBackend(this.pendingUserInfo);\r\n        \r\n        // 本地存储用户昵称和头像，方便下次加载\r\n        uni.setStorageSync('nickname', this.pendingUserInfo.userInfo.nickname);\r\n        uni.setStorageSync('avatar', this.pendingUserInfo.userInfo.avatar);\r\n        \r\n        // 提示成功\r\n        uni.showToast({\r\n          title: '信息保存成功',\r\n          icon: 'success'\r\n        });\r\n        \r\n        // 关闭浮窗\r\n        this.showAgreementModal = false;\r\n        \r\n        // 跳转到下一个页面\r\n        setTimeout(() => {\r\n          Navigator.toMine();\r\n        }, 1500);\r\n      }\r\n    },\r\n    skipForm(){\r\n      Navigator.toIndex();\r\n    },\r\n    /**\r\n     * @description 提交表单信息\r\n     */\r\n    submitForm() {\r\n      try {\r\n        // 检查必填信息\r\n        if (!this.formData.nickname.trim()) {\r\n          uni.showToast({\r\n            title: '请输入昵称',\r\n            icon: 'none'\r\n          });\r\n          return;\r\n        }\r\n        \r\n        // 从Vuex获取角色，无需本地存储\r\n        const currentRole = this.userRole;\r\n        \r\n        // 构建用户信息对象，与state.js中的结构保持一致\r\n        const userInfo = {\r\n          // 顶级字段更新\r\n          id: this.userId || uni.getStorageSync('userId'), // 保持ID不变\r\n          name: this.formData.nickname, // 使用昵称更新name字段\r\n          avatar: this.formData.avatar, // 更新头像\r\n          isRegistered: 1, // 标记为已注册\r\n          \r\n          userInfo: {\r\n            // 保留证书状态\r\n            certificate: this.$store.state.user.baseInfo.userInfo.certificate,\r\n            role: currentRole, // 使用vuex中的角色\r\n            school: this.formData.schoolIndex >= 0 ? this.schoolList[this.formData.schoolIndex] : this.userSchool,\r\n            major: this.formData.majorIndex >= 0 ? this.majorList[this.formData.majorIndex] : this.userMajor,\r\n            studentGrade: (currentRole === '学生' && this.formData.gradeIndex >= 0) ? this.gradeList[this.formData.gradeIndex] : this.userStudentGrade,\r\n            teacherGrade: (currentRole === '老师' && this.formData.gradeIndex >= 0) ? this.gradeList[this.formData.gradeIndex] : this.userTeacherGrade,\r\n            // 保留原有的考研成绩\r\n            teacherScore: this.$store.state.user.baseInfo.userInfo.teacherScore,\r\n            // 新增昵称和头像\r\n            nickname: this.formData.nickname,\r\n            avatar: this.formData.avatar\r\n          }\r\n        };\r\n        \r\n        // 如果是学生角色，添加目标学校和目标专业\r\n        if (currentRole === '学生') {\r\n          // 使用保存的目标学校和专业值或者保留原有值\r\n          userInfo.userInfo.targetSchool = this.formData.targetSchool || this.userTargetSchool;\r\n          userInfo.userInfo.targetMajor = this.formData.targetMajor || this.userTargetMajor;\r\n        }\r\n        \r\n        // 如果是老师角色，显示协议确认浮窗\r\n        if (currentRole === '老师') {\r\n          this.pendingUserInfo = userInfo; // 暂存用户信息\r\n          this.showAgreementModal = true; // 显示协议浮窗\r\n          return; // 终止后续处理，等待用户确认\r\n        }\r\n        \r\n        // 学生角色直接提交信息，使用mapMutations映射的方法\r\n        this.UPDATE_USER_INFO(userInfo);\r\n        \r\n        // 提交到后端\r\n        this.submitToBackend(userInfo);\r\n        \r\n        // 本地存储用户昵称和头像，方便下次加载\r\n        uni.setStorageSync('nickname', this.formData.nickname);\r\n        uni.setStorageSync('avatar', this.formData.avatar);\r\n        \r\n        // 提示成功\r\n        uni.showToast({\r\n          title: '信息保存成功',\r\n          icon: 'success'\r\n        });\r\n        \r\n        // 跳转到下一个页面\r\n        setTimeout(() => {\r\n          Navigator.toIndex();\r\n        }, 1500);\r\n      } catch (error) {\r\n        uni.__f__('error','at pages_AI_Login_Match/login/login_detail.vue:763','提交表单时出错:', error);\r\n        uni.showToast({\r\n          title: '保存失败，请重试',\r\n          icon: 'none'\r\n        });\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * @description 提交用户信息到后端\r\n     * @param {Object} userInfo - 用户信息对象\r\n     */\r\n    submitToBackend(userInfo) {\r\n      // 确保有token\r\n      if (!this.token) {\r\n        uni.__f__('error','at pages_AI_Login_Match/login/login_detail.vue:778','没有token，无法提交用户信息');\r\n        return;\r\n      }\r\n      \r\n      // 显示加载中\r\n      uni.showLoading({\r\n        title: '提交中...'\r\n      });\r\n      \r\n      // 构造提交的数据\r\n      const submitData = {\r\n        id: userInfo.id, // 包含用户ID\r\n        nickname: userInfo.userInfo.nickname,\r\n        name: userInfo.name, // 使用顶级name字段\r\n        avatar: userInfo.avatar, // 使用顶级avatar字段\r\n        school: userInfo.userInfo.school,\r\n        major: userInfo.userInfo.major,\r\n        grade: userInfo.userInfo.role === '学生' ? userInfo.userInfo.studentGrade : userInfo.userInfo.teacherGrade\r\n      };\r\n      \r\n      // 如果是学生，添加目标学校和专业\r\n      if (userInfo.userInfo.role === '学生') {\r\n        submitData.targetSchool = userInfo.userInfo.targetSchool;\r\n        submitData.targetMajor = userInfo.userInfo.targetMajor;\r\n      }\r\n      \r\n      // 发送请求到后端\r\n      uni.request({\r\n        url: 'http://localhost:8080/users/profile/update',\r\n        method: 'POST',\r\n        header: {\r\n          'Authorization': `Bearer ${this.token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        data: submitData,\r\n        success: (res) => {\r\n          uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:814','用户信息提交成功', res);\r\n          uni.hideLoading();\r\n          \r\n          // 如果后端返回了更新后的用户信息，更新本地存储\r\n          if (res.data && res.data.user) {\r\n            const user = res.data.user;\r\n            \r\n            // 更新Vuex状态\r\n            const updateData = {\r\n              id: user.id || userInfo.id,\r\n              name: user.name || userInfo.name,\r\n              avatar: user.avatar || userInfo.avatar\r\n            };\r\n            \r\n            // 更新Vuex\r\n            this.UPDATE_USER_INFO(updateData);\r\n            \r\n            // 更新本地存储\r\n            uni.setStorageSync('userId', updateData.id);\r\n            uni.setStorageSync('nickname', updateData.name);\r\n            uni.setStorageSync('avatar', updateData.avatar);\r\n          }\r\n        },\r\n        fail: (err) => {\r\n          uni.__f__('error','at pages_AI_Login_Match/login/login_detail.vue:838','用户信息提交失败', err);\r\n          uni.hideLoading();\r\n          uni.showToast({\r\n            title: '网络异常，信息已本地保存',\r\n            icon: 'none'\r\n          });\r\n        }\r\n      });\r\n    },\r\n\r\n    /**\r\n     * @description 验证表单内容 - 所有字段均为选填，无需验证\r\n     * @returns {boolean} 验证是否通过\r\n     */\r\n    validateForm() {\r\n      // 所有字段均为选填，直接返回true\r\n      return true;\r\n    },\r\n\r\n    /**\r\n     * @description 初始化考研数据\r\n     */\r\n    initGraduateData() {\r\n      try {\r\n        // 初始化研究生数据状态 - 使用深拷贝确保数据完整性\r\n        this.graduateStore = JSON.parse(JSON.stringify(GraduateStore.state));\r\n        \r\n        // 确保数据结构完整\r\n        if (!this.graduateStore.schools) {\r\n          uni.__f__('error','at pages_AI_Login_Match/login/login_detail.vue:867','研究生学校数据不完整');\r\n          throw new Error('学校数据结构不完整');\r\n        }\r\n        \r\n        // 使用优化的搜索引擎配置初始化\r\n        GraduateStore.mutations.initSchoolFuse(this.graduateStore);\r\n        uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:873','Fuse引擎初始化状态:', !!this.graduateStore.schoolFuse);\r\n        \r\n        // 验证搜索引擎配置\r\n        if (this.graduateStore.schoolFuse) {\r\n          uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:877','Fuse配置验证:', {\r\n            keys: this.graduateStore.schoolFuse._docs[0] ? Object.keys(this.graduateStore.schoolFuse._docs[0]) : '未知',\r\n            ignoreLocation: this.graduateStore.schoolFuse.options.ignoreLocation,\r\n            threshold: this.graduateStore.schoolFuse.options.threshold\r\n          });\r\n        } else {\r\n          uni.__f__('error','at pages_AI_Login_Match/login/login_detail.vue:883','Fuse.js搜索引擎初始化失败');\r\n        }\r\n        \r\n        // 设置目标学校列表初始值 - 仅用于目标学校下拉框\r\n        const graduateSchools = Object.keys(this.graduateStore.schools).slice(0, 50); // 初始只显示前50所\r\n        this.targetSchoolList = graduateSchools;\r\n        \r\n        uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:890','初始化考研数据成功');\r\n        return true;\r\n      } catch (error) {\r\n        uni.__f__('error','at pages_AI_Login_Match/login/login_detail.vue:893','初始化考研数据失败:', error);\r\n        \r\n        // 设置默认数据\r\n        const defaultSchools = [\"北京大学\", \"清华大学\", \"复旦大学\"];\r\n        this.targetSchoolList = defaultSchools;\r\n        return false;\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * @description 处理学校变更事件\r\n     * @param {String} school - 变更后的学校名称\r\n     */\r\n    handleSchoolChange(school) {\r\n      uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:907','学校变更事件:', school);\r\n      \r\n      if (!school) {\r\n        // 学校被清空，重置专业选择\r\n        this.resetMajorSelection();\r\n        return;\r\n      }\r\n      \r\n      // 在选择新学校后，立即更新专业搜索实例\r\n      GraduateStore.actions.selectSchool({\r\n        commit: (mutation, payload) => {\r\n          GraduateStore.mutations[mutation](this.graduateStore, payload);\r\n        }\r\n      }, school);\r\n      \r\n      // 更新目标专业列表\r\n      if (this.graduateStore.schools[school]) {\r\n        this.targetMajorList = this.graduateStore.schools[school].slice(0, 30); // 初始显示前30个专业\r\n        uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:925',`已加载 ${school} 的专业列表，共 ${this.targetMajorList.length} 个`);\r\n      } else {\r\n        this.resetMajorSelection();\r\n        uni.__f__('warn','at pages_AI_Login_Match/login/login_detail.vue:928',`${school} 没有关联的专业数据`);\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * @description 重置专业选择\r\n     */\r\n    resetMajorSelection() {\r\n      this.formData.targetMajorIndex = -1;\r\n      this.formData.targetMajor = '';\r\n    }\r\n  },\r\n  // 监听页面显示时更新搜索引擎\r\n  onShow() {\r\n    // 每次显示页面时强制重新初始化搜索引擎，确保搜索功能正常工作\r\n    if (this.graduateStore) {\r\n      // 使用强制重新初始化搜索方法\r\n      GraduateStore.actions.reinitializeSearch({\r\n        commit: (mutation, payload) => {\r\n          GraduateStore.mutations[mutation](this.graduateStore, payload);\r\n        },\r\n        state: this.graduateStore\r\n      });\r\n      \r\n      uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:952','Fuse引擎强制重新初始化完成，状态:', !!this.graduateStore.schoolFuse);\r\n      \r\n      // 验证搜索引擎配置\r\n      if (this.graduateStore.schoolFuse) {\r\n        uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:956','重新初始化后的Fuse配置:', {\r\n          threshold: this.graduateStore.schoolFuse.options.threshold,\r\n          ignoreLocation: this.graduateStore.schoolFuse.options.ignoreLocation,\r\n          items: this.graduateStore.schoolFuse._docs.length\r\n        });\r\n      }\r\n    }\r\n    \r\n    // 重新初始化本科学校和专业搜索引擎\r\n    if (this.schoolStore && this.majorStore) {\r\n      this.initSchoolAndMajorSearch();\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.header-container {\r\n\t/**\r\n\t * @description 固定顶部导航栏，背景不透明，确保在最上层\r\n\t */\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\tbackground-color: #fff;\r\n\tz-index: 100;\r\n}\r\n.background-image {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100vh;\r\n  z-index: 0;\r\n  pointer-events: none;\r\n}\r\n.background-image image {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n.reminder-outer {\r\n  width: 100%;\r\n  border-radius: 10rpx;\r\n  padding: 2rpx 2rpx;\r\n  box-sizing: border-box;\r\n  background: linear-gradient(180deg, rgba(228, 241, 255, 1) 0%, rgba(34, 136, 249, 1) 100%);\r\n  margin-bottom: 30rpx;\r\n}\r\n\r\n.reminder-inner {\r\n  width: 100%;\r\n  border-radius: 10rpx;\r\n  background: #fff;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: row;\r\n  position: relative;\r\n  padding: 20rpx 30rpx;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.reminder-inner::after {\r\n  content: '';\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: linear-gradient(180deg, rgba(194, 221, 250, 0.1) 11.54%, rgba(34, 136, 249, 0.1) 111.54%);\r\n}\r\n\r\n.reminder-text {\r\n  color: rgba(0, 0, 0, 0.5);\r\n  z-index: 1;\r\n  position: relative;\r\n  font-family: PingFang SC;\r\n  font-weight: 400;\r\n  font-size: 24rpx;\r\n  line-height: 100%;\r\n  letter-spacing: -1.1rpx;\r\n}\r\n\r\n.form-card {\r\n  background-color: transparent;\r\n  border-radius: 20rpx;\r\n  padding: 30rpx;\r\n}\r\n\r\n.label-container {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-bottom: 15rpx;\r\n}\r\n\r\n.form-row {\r\n  margin-bottom: 30rpx;\r\n}\r\n\r\n.form-label {\r\n  display: block;\r\n  font-size: 30rpx;\r\n  font-weight: bold;\r\n  color: rgba(0, 0, 0, 1);\r\n  font-family: PingFang SC;\r\n  font-weight: 400;\r\n  line-height: 100%;\r\n  letter-spacing: -1.1rpx;\r\n\r\n}\r\n\r\n.optional-tag {\r\n  font-size: 24rpx;\r\n  color: #999;\r\n  margin-left: 10rpx;\r\n}\r\n\r\n.required-tag {\r\n  font-size: 24rpx;\r\n  color: #ff4d4f;\r\n  margin-left: 10rpx;\r\n}\r\n\r\n.form-input {\r\n  width: 100%;\r\n  height: 80rpx;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 8rpx;\r\n  padding: 0 20rpx;\r\n  font-size: 28rpx;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.radio-group {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n}\r\n\r\n.radio-item-row {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n}\r\n\r\n.radio-option {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-right: 30px;\r\n  margin-left: 30px;\r\n}\r\n\r\n.option-text {\r\n  margin-left: 8px;\r\n  font-size: 28rpx;\r\n  color: #333;\r\n}\r\n\r\n.form-select {\r\n  width: 100%;\r\n  border: 2rpx solid rgba(151, 151, 151, 1);\r\n  border-radius: 8rpx;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.button-container {\r\n  margin-top: 50rpx;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.skip-btn{\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 200rpx;\r\n  height: 76rpx;\r\n  border-radius: 10px;\r\n  background: linear-gradient(180deg, #B2D7FF 0%, #2288F9 100%);\r\n}\r\n.skip-btn-icon{\r\n  width: 36rpx;\r\n  height: 36rpx;\r\n}\r\n\r\n.submit-btn-icon{\r\n  width: 36rpx;\r\n  height: 36rpx;\r\n}\r\n.submit-btn {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 200rpx;\r\n  height: 76rpx;\r\n  border-radius: 10px;\r\n  background: linear-gradient(180deg, #A5A9F7 0%, rgba(70, 78, 248, 0.9) 100%);\r\n  margin-left: 80rpx;\r\n}\r\n.btn-text{\r\n  font-family: PingFang SC;\r\n  font-weight: 400;\r\n  font-size: 28rpx;\r\n  line-height: 100%;\r\n  letter-spacing: -1.1rpx;\r\n  text-align: center;\r\n  color:rgba(255, 255, 255, 1);\r\n  margin-left: 20rpx;\r\n}\r\n/* 头像上传相关样式 */\r\n.avatar-upload-container {\r\n  position: relative;\r\n  width: 140rpx;\r\n  height: 140rpx;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  margin: 10rpx 0;\r\n  box-shadow: 0 4rpx 12rpx rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.form-avatar {\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 50%;\r\n}\r\n\r\n.avatar-upload-mask {\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 50rpx;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.upload-text {\r\n  color: #fff;\r\n  font-size: 22rpx;\r\n}\r\n\r\n/* 协议浮窗样式 */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 999;\r\n}\r\n\r\n.modal-content {\r\n  width: 80%;\r\n  max-height: 70vh;\r\n  background-color: #fff;\r\n  border-radius: 20rpx;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.modal-title {\r\n  text-align: center;\r\n  font-size: 36rpx;\r\n  font-weight: bold;\r\n  padding: 30rpx 0;\r\n  color: #333;\r\n  border-bottom: 1px solid #f0f0f0;\r\n}\r\n\r\n.modal-body {\r\n  padding: 30rpx;\r\n  flex: 1;\r\n  overflow-y: auto;\r\n}\r\n\r\n.agreement-text {\r\n  font-size: 28rpx;\r\n  color: #333;\r\n  line-height: 1.6;\r\n}\r\n\r\n.agreement-item {\r\n  margin-bottom: 20rpx;\r\n}\r\n\r\n.modal-footer {\r\n  padding: 20rpx 30rpx 40rpx;\r\n  border-top: 1px solid #f0f0f0;\r\n}\r\n\r\n.agree-btn {\r\n  width: 100%;\r\n  height: 80rpx;\r\n  line-height: 80rpx;\r\n  text-align: center;\r\n  background-color: #007AFF;\r\n  color: #fff;\r\n  font-size: 30rpx;\r\n  border-radius: 40rpx;\r\n  border: none;\r\n}\r\n</style>","import MiniProgramPage from 'E:/研师录与其他人共享文件/teacherDirectory/vue实现Lottie动画代码/pages_AI_Login_Match/login/login_detail.vue'\nwx.createPage(MiniProgramPage)"],"names":["ChoiceSelected","Header","_sfc_main","defineComponent","uni","mapState","state","grade","GraduateStore","mapMutations","Navigator","storedNickname","storedAvatar","res","userData","err","tempFilePaths","createDataModule","schoolData","majorData","mutation","payload","index","school","major","keyword","allSchools","filteredSchools","allMajors","filteredMajors","dropdown","error","defaultSchools","currentRole","userInfo","submitData","user","updateData","graduateSchools","MiniProgramPage"],"mappings":"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"}