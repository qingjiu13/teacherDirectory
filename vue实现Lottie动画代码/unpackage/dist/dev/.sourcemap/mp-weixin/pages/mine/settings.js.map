{"version":3,"file":"settings.js","sources":["pages/mine/settings.vue","../../../HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvbWluZS9zZXR0aW5ncy52dWU"],"sourcesContent":["<template>\r\n  <view class=\"container\">\r\n    <view class=\"settings-list\">\r\n      <!-- 切换身份 -->\r\n      <view class=\"settings-item\" @click=\"handleSwitchRole\">\r\n        <view class=\"icon-circle info\">\r\n          <text class=\"icon-text\">🔄</text>\r\n        </view>\r\n        <text class=\"settings-text\">切换身份（当前：{{isTeacher ? '老师' : '学生'}}）</text>\r\n        <view class=\"role-badge\" v-if=\"useMockData\">\r\n          <text class=\"badge-text\">模拟</text>\r\n        </view>\r\n      </view>\r\n      \r\n      <!-- 联系我们 -->\r\n      <view class=\"settings-item\" @click=\"handleContactUs\">\r\n        <view class=\"icon-circle info\">\r\n          <text class=\"icon-text\">📞</text>\r\n        </view>\r\n        <text class=\"settings-text\">联系我们</text>\r\n      </view>\r\n      \r\n      <!-- 退出登录 -->\r\n      <view class=\"settings-item\" @click=\"handleLogout\" v-if=\"isLoggedIn\">\r\n        <view class=\"icon-circle warning\">\r\n          <text class=\"icon-text\">⚠</text>\r\n        </view>\r\n        <text class=\"settings-text\">退出登录</text>\r\n      </view>\r\n      \r\n      <!-- 模拟数据开关 -->\r\n      <view class=\"settings-item\" @click=\"toggleMockData\">\r\n        <view class=\"icon-circle\" :class=\"{'success': useMockData, 'info': !useMockData}\">\r\n          <text class=\"icon-text\">{{useMockData ? '✓' : '🔄'}}</text>\r\n        </view>\r\n        <text class=\"settings-text\">{{useMockData ? '关闭' : '开启'}}模拟数据</text>\r\n      </view>\r\n      \r\n      <!-- 当前使用的模拟数据状态 -->\r\n      <view class=\"mock-info\" v-if=\"useMockData\">\r\n        <view class=\"mock-info-header\">\r\n          <text class=\"mock-info-title\">模拟数据信息</text>\r\n        </view>\r\n        <view class=\"mock-info-content\">\r\n          <view class=\"mock-info-item\">\r\n            <text class=\"mock-label\">模拟用户：</text>\r\n            <text class=\"mock-value\">{{mockUserInfo}}</text>\r\n          </view>\r\n          <view class=\"mock-info-item\">\r\n            <text class=\"mock-label\">测试账号：</text>\r\n            <text class=\"mock-value\">学生：zhangsan/123456；老师：lisi/654321</text>\r\n          </view>\r\n        </view>\r\n      </view>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script lang=\"uts\">\r\n/**\r\n * @description 设置页面\r\n */\r\nimport { Navigator } from '@/router/Router.js';\r\nimport store from '@/store';\r\nimport { USE_MOCK_DATA, getApiImplementation } from '@/store/user/baseInfo/config.js';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      isLoggedIn: true, // 默认设为true方便调试\r\n      switching: false,  // 角色切换中状态\r\n      useMockData: false,  // 模拟数据开关\r\n      mockUserInfo: '' // 当前模拟用户信息\r\n    }\r\n  },\r\n  computed: {\r\n    // 直接从store获取数据，替代mapGetters\r\n    isTeacher() {\r\n      return store.getters['user/baseInfo/isTeacher'];\r\n    },\r\n    userRole() {\r\n      return store.getters['user/baseInfo/userRole'];\r\n    },\r\n    profile() {\r\n      return store.getters['user/baseInfo/profile'];\r\n    },\r\n    isStudent() {\r\n      return !this.isTeacher;\r\n    }\r\n  },\r\n  onLoad() {\r\n    // 检查登录状态\r\n    const token = uni.getStorageSync('token');\r\n    this.isLoggedIn = !!token;\r\n    \r\n    // 检查模拟数据设置\r\n    this.checkMockDataStatus();\r\n    \r\n    // 获取模拟用户信息\r\n    this.getMockUserInfo();\r\n  },\r\n  methods: {\r\n    // 直接调用store的dispatch方法，替代mapActions\r\n    \r\n    /**\r\n     * @description 检查模拟数据状态\r\n     */\r\n    checkMockDataStatus() {\r\n      // 首先检查全局配置\r\n      this.useMockData = USE_MOCK_DATA;\r\n      \r\n      // 然后检查本地存储设置，优先使用本地存储的设置\r\n      const localMockSetting = uni.getStorageSync('use_mock_api');\r\n      if (localMockSetting !== '') {\r\n        this.useMockData = localMockSetting === 'true';\r\n      }\r\n      \r\n      uni.__f__('log','at pages/mine/settings.vue:118','当前模拟数据状态:', this.useMockData ? '使用模拟数据' : '使用真实API');\r\n    },\r\n    \r\n    /**\r\n     * @description 获取模拟用户信息\r\n     */\r\n    async getMockUserInfo() {\r\n      if (this.useMockData) {\r\n        try {\r\n          await store.dispatch('user/baseInfo/getUserInfo');\r\n          this.mockUserInfo = `${this.profile.nickname || '未登录'} (${this.isTeacher ? '老师' : '学生'})`;\r\n        } catch (error) {\r\n          uni.__f__('error','at pages/mine/settings.vue:130','获取模拟用户信息失败:', error);\r\n          this.mockUserInfo = '未知用户';\r\n        }\r\n      } else {\r\n        this.mockUserInfo = '';\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * @description 处理切换身份\r\n     */\r\n    handleSwitchRole() {\r\n      if (this.switching) return;\r\n      \r\n      // 确定切换的目标角色\r\n      const newRole = this.isTeacher ? 'student' : 'teacher';\r\n      \r\n      uni.showModal({\r\n        title: '切换身份',\r\n        content: `确定要切换到${newRole === 'teacher' ? '老师' : '学生'}模式吗？`,\r\n        success: async (res) => {\r\n          if (res.confirm) {\r\n            try {\r\n              this.switching = true;\r\n              \r\n              // 使用store.dispatch调用action\r\n              await store.dispatch('user/baseInfo/updateRole', newRole);\r\n              \r\n              uni.showToast({\r\n                title: newRole === 'teacher' ? '已切换为老师模式' : '已切换为学生模式',\r\n                icon: 'none'\r\n              });\r\n              \r\n              // 返回到\"我的\"页面并刷新\r\n              setTimeout(() => {\r\n                Navigator.reLaunch('/pages/mine/mine/mine_common');\r\n              }, 1500);\r\n            } catch (error) {\r\n              uni.__f__('error','at pages/mine/settings.vue:168','切换角色失败:', error);\r\n              uni.showToast({\r\n                title: '切换角色失败',\r\n                icon: 'none'\r\n              });\r\n            } finally {\r\n              this.switching = false;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    },\r\n    \r\n    /**\r\n     * @description 处理联系我们\r\n     */\r\n    handleContactUs() {\r\n      uni.showModal({\r\n        title: '联系我们',\r\n        content: '客服电话：400-123-4567\\n客服邮箱：support@example.com\\n工作时间：周一至周五 9:00-18:00',\r\n        showCancel: false\r\n      });\r\n    },\r\n    \r\n    /**\r\n     * @description 处理退出登录\r\n     */\r\n    handleLogout() {\r\n      uni.showModal({\r\n        title: '提示',\r\n        content: '确定要退出登录吗？',\r\n        success: async (res) => {\r\n          if (res.confirm) {\r\n            try {\r\n              // 使用store.dispatch调用登出action\r\n              await store.dispatch('user/baseInfo/logout');\r\n              \r\n              uni.showToast({\r\n                title: '已退出登录',\r\n                icon: 'success'\r\n              });\r\n              \r\n              // 增加延迟确保数据清除\r\n              setTimeout(() => {\r\n                // 返回到\"我的\"页面\r\n                Navigator.reLaunch('/pages/mine/mine/mine_common');\r\n              }, 1500);\r\n            } catch (error) {\r\n              uni.__f__('error','at pages/mine/settings.vue:216','退出登录时出错:', error);\r\n              uni.showToast({\r\n                title: '退出登录时出错',\r\n                icon: 'none'\r\n              });\r\n            }\r\n          }\r\n        }\r\n      });\r\n    },\r\n    \r\n    /**\r\n     * @description 切换模拟数据开关\r\n     */\r\n    toggleMockData() {\r\n      // 切换设置\r\n      this.useMockData = !this.useMockData;\r\n      // 保存设置\r\n      uni.setStorageSync('use_mock_api', this.useMockData ? 'true' : 'false');\r\n      \r\n      // 更新模拟用户信息\r\n      this.getMockUserInfo();\r\n      \r\n      uni.showToast({\r\n        title: this.useMockData ? '已开启模拟数据' : '已关闭模拟数据',\r\n        icon: 'none'\r\n      });\r\n      \r\n      // 提示需要重启应用\r\n      setTimeout(() => {\r\n        uni.showModal({\r\n          title: '提示',\r\n          content: '设置已更改，推荐刷新或重启应用以使更改完全生效',\r\n          showCancel: true,\r\n          confirmText: '刷新',\r\n          success: (res) => {\r\n            if (res.confirm) {\r\n              // 刷新当前页面\r\n              Navigator.reLaunch('/pages/mine/settings');\r\n            }\r\n          }\r\n        });\r\n      }, 1000);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100%;\r\n  background-color: #ffffff;\r\n  padding: 20rpx 0;\r\n}\r\n\r\n.settings-list {\r\n  width: 100%;\r\n}\r\n\r\n.settings-item {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  padding: 30rpx 0;\r\n  border-bottom: 1px solid #f0f0f0;\r\n}\r\n\r\n.icon-circle {\r\n  width: 60rpx;\r\n  height: 60rpx;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0 30rpx;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.success {\r\n  background-color: rgba(76, 175, 80, 0.1);\r\n}\r\n\r\n.warning {\r\n  background-color: rgba(255, 82, 82, 0.1);\r\n}\r\n\r\n.info {\r\n  background-color: rgba(33, 150, 243, 0.1);\r\n}\r\n\r\n.icon-text {\r\n  font-size: 30rpx;\r\n  font-weight: bold;\r\n}\r\n\r\n.success .icon-text {\r\n  color: #4CAF50;\r\n}\r\n\r\n.warning .icon-text {\r\n  color: #FF5252;\r\n}\r\n\r\n.info .icon-text {\r\n  color: #2196F3;\r\n}\r\n\r\n.settings-text {\r\n  font-size: 30rpx;\r\n  color: #333;\r\n  text-align: left;\r\n  flex: 1;\r\n}\r\n\r\n.role-badge {\r\n  background-color: #FF9800;\r\n  border-radius: 20rpx;\r\n  padding: 4rpx 16rpx;\r\n  margin-right: 30rpx;\r\n}\r\n\r\n.badge-text {\r\n  color: #FFFFFF;\r\n  font-size: 20rpx;\r\n}\r\n\r\n/* 模拟数据信息样式 */\r\n.mock-info {\r\n  margin: 20rpx;\r\n  border-radius: 10rpx;\r\n  overflow: hidden;\r\n  box-shadow: 0 2rpx 10rpx rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.mock-info-header {\r\n  background-color: #FFB300;\r\n  padding: 20rpx;\r\n}\r\n\r\n.mock-info-title {\r\n  color: #FFFFFF;\r\n  font-size: 28rpx;\r\n  font-weight: bold;\r\n}\r\n\r\n.mock-info-content {\r\n  background-color: #FFF9C4;\r\n  padding: 20rpx;\r\n}\r\n\r\n.mock-info-item {\r\n  margin-bottom: 10rpx;\r\n}\r\n\r\n.mock-label {\r\n  font-size: 26rpx;\r\n  color: #FF6F00;\r\n  font-weight: bold;\r\n}\r\n\r\n.mock-value {\r\n  font-size: 26rpx;\r\n  color: #333333;\r\n}\r\n</style>","import MiniProgramPage from 'D:/github/teacherDirectory/vue实现Lottie动画代码/pages/mine/settings.vue'\nwx.createPage(MiniProgramPage)"],"names":["defineComponent","store","uni","USE_MOCK_DATA","__awaiter","Navigator"],"mappings":";;;;;AAkEA,MAAA,YAAeA,8BAAA;AAAA,EACb,OAAI;AACF,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,WAAW;AAAA,MACX,aAAa;AAAA,MACb,cAAc;AAAA;AAAA;EAEjB;AAAA,EACD,UAAU;AAAA;AAAA,IAER,YAAS;AACP,aAAOC,YAAK,MAAC,QAAQ,yBAAyB;AAAA,IAC/C;AAAA,IACD,WAAQ;AACN,aAAOA,YAAK,MAAC,QAAQ,wBAAwB;AAAA,IAC9C;AAAA,IACD,UAAO;AACL,aAAOA,YAAK,MAAC,QAAQ,uBAAuB;AAAA,IAC7C;AAAA,IACD,YAAS;AACP,aAAO,CAAC,KAAK;AAAA,IACf;AAAA,EACD;AAAA,EACD,SAAM;AAEJ,UAAM,QAAQC,cAAAA,MAAI,eAAe,OAAO;AACxC,SAAK,aAAa,CAAC,CAAC;AAGpB,SAAK,oBAAmB;AAGxB,SAAK,gBAAe;AAAA,EACrB;AAAA,EACD,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,IAMP,sBAAmB;AAEjB,WAAK,cAAcC;AAGnB,YAAM,mBAAmBD,cAAAA,MAAI,eAAe,cAAc;AAC1D,UAAI,qBAAqB,IAAI;AAC3B,aAAK,cAAc,qBAAqB;AAAA,MAC1C;AAEAA,0BAAI,MAAM,OAAM,kCAAiC,aAAa,KAAK,cAAc,WAAW,SAAS;AAAA,IACtG;AAAA;AAAA;AAAA;AAAA,IAKK,kBAAe;;AACnB,YAAI,KAAK,aAAa;AACpB,cAAI;AACF,kBAAMD,YAAK,MAAC,SAAS,2BAA2B;AAChD,iBAAK,eAAe,GAAG,KAAK,QAAQ,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO,IAAI;AAAA,UACtF,SAAO,OAAO;AACdC,0BAAG,MAAC,MAAM,SAAQ,kCAAiC,eAAe,KAAK;AACvE,iBAAK,eAAe;AAAA,UACtB;AAAA,QACA,OAAK;AACL,eAAK,eAAe;AAAA,QACtB;AAAA,OACD;AAAA,IAAA;AAAA;AAAA;AAAA;AAAA,IAKD,mBAAgB;AACd,UAAI,KAAK;AAAW,eAAM;AAG1B,YAAM,UAAU,KAAK,YAAY,YAAY;AAE7CA,oBAAAA,MAAI,UAAU;AAAA,QACZ,OAAO;AAAA,QACP,SAAS,SAAS,YAAY,YAAY,OAAO,IAAI;AAAA,QACrD,SAAS,CAAO,QAAG;AAAA,iBAAAE,cAAAA,UAAA,MAAA,QAAA,QAAA,aAAA;AACjB,gBAAI,IAAI,SAAS;AACf,kBAAI;AACF,qBAAK,YAAY;AAGjB,sBAAMH,kBAAM,SAAS,4BAA4B,OAAO;AAExDC,8BAAAA,MAAI,UAAU;AAAA,kBACZ,OAAO,YAAY,YAAY,aAAa;AAAA,kBAC5C,MAAM;AAAA,gBACP,CAAA;AAGD,2BAAW,MAAA;AACTG,0CAAU,SAAS,8BAA8B;AAAA,gBAClD,GAAE,IAAI;AAAA,cACP,SAAO,OAAO;AACdH,8BAAG,MAAC,MAAM,SAAQ,kCAAiC,WAAW,KAAK;AACnEA,8BAAAA,MAAI,UAAU;AAAA,kBACZ,OAAO;AAAA,kBACP,MAAM;AAAA,gBACP,CAAA;AAAA,cACH,UAAU;AACR,qBAAK,YAAY;AAAA,cACnB;AAAA,YACF;AAAA,UACF,CAAA;AAAA,QAAA;AAAA,MACD,CAAA;AAAA,IACF;AAAA;AAAA;AAAA;AAAA,IAKD,kBAAe;AACbA,oBAAAA,MAAI,UAAU;AAAA,QACZ,OAAO;AAAA,QACP,SAAS;AAAA,QACT,YAAY;AAAA,MACb,CAAA;AAAA,IACF;AAAA;AAAA;AAAA;AAAA,IAKD,eAAY;AACVA,oBAAAA,MAAI,UAAU;AAAA,QACZ,OAAO;AAAA,QACP,SAAS;AAAA,QACT,SAAS,CAAO,QAAG;AAAA,iBAAAE,cAAAA,UAAA,MAAA,QAAA,QAAA,aAAA;AACjB,gBAAI,IAAI,SAAS;AACf,kBAAI;AAEF,sBAAMH,YAAK,MAAC,SAAS,sBAAsB;AAE3CC,8BAAAA,MAAI,UAAU;AAAA,kBACZ,OAAO;AAAA,kBACP,MAAM;AAAA,gBACP,CAAA;AAGD,2BAAW,MAAA;AAETG,0CAAU,SAAS,8BAA8B;AAAA,gBAClD,GAAE,IAAI;AAAA,cACP,SAAO,OAAO;AACdH,8BAAG,MAAC,MAAM,SAAQ,kCAAiC,YAAY,KAAK;AACpEA,8BAAAA,MAAI,UAAU;AAAA,kBACZ,OAAO;AAAA,kBACP,MAAM;AAAA,gBACP,CAAA;AAAA,cACH;AAAA,YACF;AAAA,UACF,CAAA;AAAA,QAAA;AAAA,MACD,CAAA;AAAA,IACF;AAAA;AAAA;AAAA;AAAA,IAKD,iBAAc;AAEZ,WAAK,cAAc,CAAC,KAAK;AAEzBA,oBAAG,MAAC,eAAe,gBAAgB,KAAK,cAAc,SAAS,OAAO;AAGtE,WAAK,gBAAe;AAEpBA,oBAAAA,MAAI,UAAU;AAAA,QACZ,OAAO,KAAK,cAAc,YAAY;AAAA,QACtC,MAAM;AAAA,MACP,CAAA;AAGD,iBAAW,MAAA;AACTA,sBAAAA,MAAI,UAAU;AAAA,UACZ,OAAO;AAAA,UACP,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,aAAa;AAAA,UACb,SAAS,CAAC,QAAG;AACX,gBAAI,IAAI,SAAS;AAEfG,sCAAU,SAAS,sBAAsB;AAAA,YAC3C;AAAA,UACF;AAAA,QACD,CAAA;AAAA,MACF,GAAE,GAAI;AAAA,IACT;AAAA,EACF;CACF;;;;;;;;;;;;;;;;;;;;;;;;;ACnQA,GAAG,WAAW,eAAe;"}