{"version":3,"file":"index.js","sources":["pages/index/index.vue","../../../HBuilderX/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvaW5kZXgvaW5kZXgudnVl"],"sourcesContent":["<template>\n  <view class=\"container\">\n    <image class=\"background-image\" src=\"/static/index/background.png\" mode=\"aspectFill\" alt=\"背景图\" />\n    <!-- 主页面内容 -->\n    <view class=\"page-container\">\n      <view class=\"header\">\n        <view class=\"main-title\">一站式对接</view>\n        <view class=\"sub-title\">目标院校专业学长学姐</view>\n      </view>\n  \t\t<c-lottie class=\"match-animation\"\n  \t\t\tref=\"cLottieRef\"\n  \t\t\t:src=\"animationSrc\"\n  \t\t\twidth=\"600rpx\"\n        :autoPlay=\"false\"\n  \t\t\theight=\"600rpx\"\n  \t\t\t:loop=\"true\"\n        @dataReady=\"onDataReady\"\n  \t\t></c-lottie>\n      <view class=\"button-area\">\n        <button class=\"match-button\" @click.stop=\"matchAnimation\">\n          <view class=\"match-content\">\n            <image\n              class=\"match-icon\"\n              src=\"/static/index/matchsearch.png\"\n              mode=\"aspectFit\"\n              alt=\"匹配图标\"\n            />\n            <text class=\"match-text\">精准匹配</text>\n          </view>\n        </button>\n      </view>\n  \n      <!-- <AICartoon /> -->\n      <TabBar pageName=\"index\" />\n    </view>\n  </view>\n</template>\n\n<script setup lang=\"uts\">\n// import AICartoon from '@/components/AI-cartoon/AI-cartoon.vue'\nimport TabBar from '@/components/tab-bar/tab-bar.vue'\nimport { Navigator } from '@/router/Router.js'\nimport { ref, onMounted, onActivated, onBeforeUnmount } from \"vue\";\n\n// 创建一个缓存对象，用于存储动画数据\nconst animationCache = new Map();\n\nconst cLottieRef = ref()\nconst animationSrc = ref('')\nconst defaultSrc = 'https://lottie.host/b43a7279-b25d-460a-b48c-60e2a24ecf2f/GDx9VFTMQr.json'\nconst animationLoaded = ref(false)\nconst loading = ref(false)\nconst pageReady = ref(false)\nlet loadTimeout = null\n\n/**\n * 组件属性\n * @type {Object}\n */\nconst props = defineProps({\n  src: {\n    type: String,\n    default: defaultSrc\n  }\n})\n\n/**\n * 从URL中提取唯一键\n * @param {String} url - 动画URL\n * @returns {String} 唯一键\n */\nconst getAnimationKey = (url) => {\n  return url.split('/').pop().split('.')[0]\n}\n\n/**\n * 检查动画是否已缓存\n * @param {String} url - 动画URL\n * @returns {Boolean} 是否已缓存\n */\nconst isAnimationCached = (url) => {\n  return animationCache.has(url)\n}\n\n/**\n * 从缓存中获取动画数据\n * @param {String} url - 动画URL\n * @returns {Object|null} 动画数据或null\n */\nconst getAnimationFromCache = (url) => {\n  return animationCache.get(url) || null\n}\n\n/**\n * 将动画数据存入缓存\n * @param {String} url - 动画URL\n * @param {Object} data - 动画数据\n */\nconst saveAnimationToCache = (url, data) => {\n  animationCache.set(url, data)\n  \n  // 同时保存到本地存储，以便下次应用启动时可以恢复\n  try {\n    const key = `lottie_${getAnimationKey(url)}`\n    uni.setStorageSync(key, data)\n    uni.__f__('log','at pages/index/index.vue:106','动画数据已保存到本地存储', key)\n  } catch (e) {\n    uni.__f__('error','at pages/index/index.vue:108','保存到本地存储失败', e)\n  }\n}\n\n/**\n * 恢复本地存储中的动画数据到缓存\n * @param {String} url - 动画URL\n * @returns {Boolean} 是否成功恢复\n */\nconst restoreAnimationFromStorage = (url) => {\n  const key = `lottie_${getAnimationKey(url)}`\n  try {\n    const data = uni.getStorageSync(key)\n    if (data) {\n      animationCache.set(url, data)\n      uni.__f__('log','at pages/index/index.vue:123','已从本地存储恢复动画数据到缓存', key)\n      return true\n    }\n  } catch (e) {\n    uni.__f__('error','at pages/index/index.vue:127','从本地存储恢复失败', e)\n  }\n  return false\n}\n\n/**\n * 加载动画数据\n * @param {String} url - 动画URL\n * @returns {Promise<Object>} 动画数据\n */\nconst loadAnimationData = async (url) => {\n  if (loading.value) {\n    uni.__f__('log','at pages/index/index.vue:139','已有加载任务正在进行')\n    return null\n  }\n  \n  loading.value = true\n  \n  // 首先检查内存缓存\n  if (isAnimationCached(url)) {\n    uni.__f__('log','at pages/index/index.vue:147','从内存缓存获取动画数据')\n    loading.value = false\n    return getAnimationFromCache(url)\n  }\n  \n  // 然后检查本地存储\n  if (restoreAnimationFromStorage(url)) {\n    uni.__f__('log','at pages/index/index.vue:154','从本地存储恢复动画数据')\n    loading.value = false\n    return getAnimationFromCache(url)\n  }\n  \n  // 最后从网络加载\n  uni.__f__('log','at pages/index/index.vue:160','从网络加载动画数据', url)\n  try {\n    const { data } = await uni.request({\n      url: url,\n      method: 'GET'\n    })\n    \n    // 保存到缓存\n    saveAnimationToCache(url, data)\n    \n    loading.value = false\n    return data\n  } catch (e) {\n    uni.__f__('error','at pages/index/index.vue:173','网络加载动画数据失败', e)\n    loading.value = false\n    return null\n  }\n}\n\n/**\n * 初始化动画\n */\nconst initAnimation = async () => {\n  // 清除可能存在的超时计时器\n  if (loadTimeout) {\n    clearTimeout(loadTimeout)\n  }\n  \n  // 重置页面准备状态\n  pageReady.value = false\n  \n  // 设置动画源\n  const targetSrc = props.src || defaultSrc\n  animationSrc.value = targetSrc\n  \n  // 预加载动画数据\n  loadAnimationData(targetSrc).then(data => {\n    if (data) {\n      uni.__f__('log','at pages/index/index.vue:198','动画数据加载成功')\n      animationLoaded.value = true\n    }\n  })\n  \n  // 设置超时处理，最长等待3秒\n  loadTimeout = setTimeout(() => {\n    uni.__f__('log','at pages/index/index.vue:205','动画加载超时，强制显示页面')\n    pageReady.value = true\n  }, 3000)\n  \n  // 如果已经缓存，可能不会触发dataReady事件，需要主动检查\n  if (isAnimationCached(targetSrc)) {\n    uni.__f__('log','at pages/index/index.vue:211','检测到缓存数据，预先设置动画加载状态')\n    animationLoaded.value = true\n    // 短暂延迟后显示页面\n    setTimeout(() => {\n      pageReady.value = true\n    }, 500)\n  }\n}\n\n/**\n * 数据准备完成回调\n */\nconst onDataReady = () => {\n  uni.__f__('log','at pages/index/index.vue:224','动画数据准备完成，触发dataReady事件')\n  animationLoaded.value = true\n  \n  // 清除加载超时计时器\n  if (loadTimeout) {\n    clearTimeout(loadTimeout)\n    loadTimeout = null\n  }\n  \n  // 动画准备好后，标记页面可以显示\n  setTimeout(() => {\n    uni.__f__('log','at pages/index/index.vue:235','设置页面为可显示状态')\n    pageReady.value = true\n  }, 100)\n}\n\n/**\n * 执行匹配动画\n */\nconst matchAnimation = () => {\n  if (!animationLoaded.value) {\n    uni.__f__('log','at pages/index/index.vue:245','动画尚未加载完成')\n    return\n  }\n  \n  cLottieRef.value.call('play')\n  setTimeout(() => {\n    cLottieRef.value.call('stop')\n    navigateToMatch()\n  }, 1000)\n}\n\n/**\n * 导航到匹配页面\n */\nconst navigateToMatch = () => {\n  Navigator.toMatch()\n}\n\n/**\n * 清理函数，在组件销毁前清除超时计时器\n */\nconst cleanup = () => {\n  if (loadTimeout) {\n    clearTimeout(loadTimeout)\n    loadTimeout = null\n  }\n}\n\n// 组件挂载时初始化\nonMounted(() => {\n  uni.__f__('log','at pages/index/index.vue:275','组件挂载，初始化动画')\n  initAnimation()\n})\n\n// 在页面被激活时确保动画已加载（如从其他页面返回时）\nonActivated(() => {\n  uni.__f__('log','at pages/index/index.vue:281','页面激活')\n  if (!animationSrc.value) {\n    initAnimation()\n  } else {\n    // 如果已有源但页面未准备好，强制准备\n    if (!pageReady.value) {\n      uni.__f__('log','at pages/index/index.vue:287','动画源已存在但页面未准备好，强制显示')\n      pageReady.value = true\n    }\n  }\n})\n\n// 在组件卸载前清理资源\nonBeforeUnmount(() => {\n  cleanup()\n})\n</script>\n\n<style >\n.container {\n  position: relative;\n  width: 100%;\n  min-height: 100vh;\n}\n\n.background-image {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 0;\n  pointer-events: none; /* 保证背景图不影响交互 */\n}\n\n.page-container {\n  position: relative;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-sizing: border-box;\n  padding-bottom: 180rpx; /* 调整底部间距，确保内容不被tab-bar遮挡 */\n  /* background-color: #f8f8f8; */\n  z-index: 1;\n}\n\n.header {\n  display: flex;\n  flex-direction: column;\n  margin-left: 100px;\n  margin-top: 110px;\n  width: 100%;\n}\n\n/**\n * main-title 主标题样式\n * @font-family PingFang SC\n * @font-weight 400\n * @font-size 24px (约48rpx)\n * @line-height 35px (约70rpx)\n * @letter-spacing -0.55px (约-1.1rpx)\n */\n .main-title {\n  font-family: 'PingFang SC', 'Microsoft YaHei', Arial, sans-serif;\n  font-weight: 550;\n  font-size: 48rpx;\n  line-height: 70rpx;\n  letter-spacing: -1.1rpx;\n  color: #333;\n}\n\n/**\n * sub-title 副标题样式\n * @font-family PingFang SC\n * @font-weight 400\n * @font-size 20px (约40rpx)\n * @line-height 35px (约70rpx)\n * @letter-spacing -0.55px (约-1.1rpx)\n */\n .sub-title {\n  font-family: 'PingFang SC', 'Microsoft YaHei', Arial, sans-serif;\n  font-weight: 400;\n  font-size: 40rpx;\n  line-height: 70rpx;\n  letter-spacing: -1.1rpx;\n  color: #666;\n  text-align: left;\n}\n\n.button-area {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 60rpx;\n}\n\n/**\n * match-button 精准匹配按钮样式\n * @width 159px (约318rpx)\n * @height 53px (约106rpx)\n * @border-radius 10px (约20rpx)\n * @background 渐变色 linear-gradient(180deg, #A5A9F7 0%, rgba(70, 78, 248, 0.9) 100%)\n */\n .match-button {\n  width: 318rpx;\n  height: 106rpx;\n  border-radius: 20rpx;\n  background: linear-gradient(180deg, #A5A9F7 0%, rgba(70, 78, 248, 0.9) 100%);\n  color: #fff;\n  font-size: 32rpx;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  border: none;\n  box-shadow: none;\n  padding-left: 32rpx;\n  padding: 0;\n  gap: 16rpx;\n  /* 可选：去除原有边框和阴影 */\n}\n\n/**\n * match-content 按钮内容容器，横向排列图标和文字\n */\n.match-content {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-top: 33rpx;\n}\n\n/**\n * match-icon 按钮内左侧图标样式\n * @width 20.3px (约40rpx)\n * @height 20.3px (约40rpx)\n * @margin-right 16rpx（图标与文字间距）\n */\n.match-icon {\n  width: 40rpx;\n  height: 40rpx;\n  margin-right: 40rpx;\n}\n\n.match-animation {\n  position: relative;\n  margin-top: 50rpx;\n  top: 0;\n  left: 0;\n}\n\n/**\n * match-text 精准匹配文字样式\n * @font-family PingFang SC\n * @font-weight 400\n * @font-size 18px (约36rpx)\n * @line-height 100%\n * @letter-spacing -0.68px (约-1.36rpx)\n * @text-align center\n */\n.match-text {\n  font-family: 'PingFang SC', 'Microsoft YaHei', Arial, sans-serif;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1;\n  letter-spacing: -1.36rpx;\n  text-align: center;\n  color: #fff;\n}\n\n</style>","import MiniProgramPage from 'E:/研师录与其他人共享文件/teacherDirectory/vue实现Lottie动画代码/pages/index/index.vue'\nwx.createPage(MiniProgramPage)"],"names":["TabBar","defaultSrc","animationCache","cLottieRef","ref","animationSrc","animationLoaded","loading","pageReady","loadTimeout","props","__props","getAnimationKey","url","isAnimationCached","getAnimationFromCache","saveAnimationToCache","data","key","uni","e","restoreAnimationFromStorage","loadAnimationData","__awaiter","initAnimation","targetSrc","onDataReady","matchAnimation","navigateToMatch","Navigator","cleanup","onMounted","onActivated","onBeforeUnmount","MiniProgramPage"],"mappings":"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"}