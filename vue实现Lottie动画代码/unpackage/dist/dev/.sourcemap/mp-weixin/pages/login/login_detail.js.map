{"version":3,"file":"login_detail.js","sources":["pages/login/login_detail.vue","../../../HBuilderX/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvbG9naW4vbG9naW5fZGV0YWlsLnZ1ZQ"],"sourcesContent":["<template>\r\n  <view class=\"form-container\">\r\n    \r\n          <!-- 表单内容 -->\r\n    <view class=\"form-card\">\r\n      <!-- Gender -->\r\n      <view class=\"form-row\">\r\n        <view class=\"label-container\">\r\n          <text class=\"form-label\">性别</text>\r\n          <text class=\"optional-tag\">(选填)</text>\r\n        </view>\r\n        <view class=\"radio-group\">\r\n          <view class=\"radio-item-row\">\r\n            <view class=\"radio-option\" @click=\"formData.gender = '男'\">\r\n              <radio :checked=\"formData.gender === '男'\" color=\"#007AFF\" />\r\n              <text class=\"option-text\">男</text>\r\n            </view>\r\n            <view class=\"radio-option\" @click=\"formData.gender = '女'\">\r\n              <radio :checked=\"formData.gender === '女'\" color=\"#007AFF\" />\r\n              <text class=\"option-text\">女</text>\r\n            </view>\r\n          </view>\r\n        </view>\r\n      </view>\r\n      <!-- 普通学校和专业筛选框 - 仅学生显示 -->\r\n      <template v-if=\"userRole === '学生'\">\r\n        <!-- School - 使用单输入筛选框 -->\r\n        <view class=\"form-row\">\r\n          <view class=\"label-container\">\r\n            <text class=\"form-label\">就读学校</text>\r\n            <text class=\"optional-tag\">(选填)</text>\r\n          </view>\r\n          <ChoiceSelected\r\n            class=\"form-select\"\r\n            componentType=\"undergraduate\"\r\n            :choiceIndex=\"formData.schoolIndex\"\r\n            :choiceList=\"schoolList\"\r\n            defaultText=\"请选择学校\"\r\n            mode=\"search\"\r\n            searchPlaceholder=\"输入学校名称\"\r\n            @onChoiceClick=\"handleSchoolSelect\"\r\n            @search-input=\"handleSchoolSearch\"\r\n            ref=\"schoolDropdown\"\r\n          />\r\n        </view>\r\n        \r\n        <!-- Major - 使用单输入筛选框 -->\r\n        <view class=\"form-row\">\r\n          <view class=\"label-container\">\r\n            <text class=\"form-label\">就读专业</text>\r\n            <text class=\"optional-tag\">(选填)</text>\r\n          </view>\r\n          <ChoiceSelected\r\n            class=\"form-select\"\r\n            componentType=\"undergraduate\"\r\n            :choiceIndex=\"formData.majorIndex\"\r\n            :choiceList=\"majorList\"\r\n            defaultText=\"请选择专业\"\r\n            mode=\"search\"\r\n            searchPlaceholder=\"输入专业名称\"\r\n            @onChoiceClick=\"handleMajorSelect\"\r\n            @search-input=\"handleMajorSearch\"\r\n            ref=\"majorDropdown\"\r\n          />\r\n        </view>\r\n      </template>\r\n\r\n      <!-- Grade -->\r\n      <view class=\"form-row\">\r\n        <view class=\"label-container\">\r\n          <text class=\"form-label\">年级</text>\r\n          <text class=\"optional-tag\">(选填)</text>\r\n        </view>\r\n        <ChoiceSelected\r\n          class=\"form-select\"\r\n          :choiceIndex=\"formData.gradeIndex\"\r\n          :choiceList=\"gradeList\"\r\n          defaultText=\"请选择年级\"\r\n          mode=\"select\"\r\n          @onChoiceClick=\"handleGradeSelect\"\r\n        />\r\n      </view>\r\n      \r\n      <!-- 目标学校和目标专业筛选框 - 学生和老师都显示，但标签有区别 -->\r\n      <template>\r\n          <!-- Target School -->\r\n          <view class=\"form-row\">\r\n            <view class=\"label-container\">\r\n              <text class=\"form-label\">{{ userRole === '学生' ? '目标学校' : '就读学校' }}</text>\r\n              <text class=\"optional-tag\">(选填)</text>\r\n            </view>\r\n            <ChoiceSelected\r\n              class=\"form-select\"\r\n              componentType=\"graduateSchool\"\r\n              :choiceIndex=\"formData.targetSchoolIndex\"\r\n              :choiceList=\"targetSchoolList\"\r\n              :defaultText=\"userRole === '学生' ? '请选择目标学校' : '请选择学校'\"\r\n              mode=\"search\"\r\n              :searchPlaceholder=\"userRole === '学生' ? '输入目标学校名称' : '输入学校名称'\"\r\n              @onChoiceClick=\"handleTargetSchoolSelect\"\r\n              @search-input=\"handleTargetSchoolSearch\"\r\n              @linkage-change=\"handleSchoolChange\"\r\n              :enablePagination=\"true\"\r\n              :pageSize=\"10\"\r\n              ref=\"targetSchoolDropdown\"\r\n            />\r\n          </view>\r\n          \r\n          <!-- Target Major -->\r\n          <view class=\"form-row\">\r\n            <view class=\"label-container\">\r\n              <text class=\"form-label\">{{ userRole === '学生' ? '目标专业' : '就读专业' }}</text>\r\n              <text class=\"optional-tag\">(选填)</text>\r\n            </view>\r\n            <ChoiceSelected\r\n              class=\"form-select\"\r\n              componentType=\"graduateMajor\"\r\n              :choiceIndex=\"formData.targetMajorIndex\"\r\n              :choiceList=\"targetMajorList\"\r\n              :parentValue=\"formData.targetSchool\"\r\n              :isLinkage=\"true\"\r\n              :defaultText=\"formData.targetSchool ? (userRole === '学生' ? '请选择专业' : '请选择专业') : '请先选择学校'\"\r\n              mode=\"search\"\r\n              :searchPlaceholder=\"userRole === '学生' ? '输入目标专业名称' : '输入专业名称'\"\r\n              @onChoiceClick=\"handleTargetMajorSelect\"\r\n              @search-input=\"handleTargetMajorSearch\"\r\n              @reset-selection=\"resetMajorSelection\"\r\n              :enablePagination=\"true\"\r\n              :pageSize=\"10\"\r\n              ref=\"targetMajorDropdown\"\r\n            />\r\n          </view>\r\n      </template>\r\n      <!-- 按钮区域 -->\r\n      <view class=\"button-container\">\r\n        <button class=\"submit-btn\" @click=\"submitForm\">提交信息</button>\r\n      </view>\r\n    </view>\r\n\r\n    \r\n    <!-- 老师角色协议确认浮窗 -->\r\n    <view class=\"modal-overlay\" v-if=\"showAgreementModal\" @click.stop=\"closeModal\">\r\n      <view class=\"modal-content\" @click.stop>\r\n        <view class=\"modal-title\">入驻协议</view>\r\n        <view class=\"modal-body\">\r\n          <view class=\"agreement-text\">\r\n            <view class=\"agreement-item\">就平台入驻涉及的权利和义务与您做出如下约定：</view>\r\n            <view class=\"agreement-item\">1、您知晓并同意，登署本协议即代表您依照本协议公布的规则履行义务并享有权利。</view>\r\n            <view class=\"agreement-item\">2、您同意，申请入驻平台认证老师后按照平台要求提供服务，包括并不限于向平台用户提供线上线下考研咨询及资料服务。</view>\r\n            <view class=\"agreement-item\">3、您同意，入驻平台认证学长通过后，进行线上服务时就服务标准内容进行回复，不得向用户索要用户私人联系方式包括(微信、手机号等)，平台会对站内聊天内容进行监控，若发现违规内容，平台有权进行处理，处理方式包括并不限于限制消息发送、删除消息等，若违规行为次数超过2次，平台有权对您的认证状态进行撤销。</view>\r\n          </view>\r\n        </view>\r\n        <view class=\"modal-footer\">\r\n          <button class=\"agree-btn\" @click=\"confirmAgreement\">我已悉知并同意</button>\r\n        </view>\r\n      </view>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script lang=\"uts\">\r\nimport ChoiceSelected from '../../components/combobox/combobox'\r\nimport { mapState, mapActions, mapGetters, mapMutations } from 'vuex'\r\nimport { Navigator } from '../../router/Router';\r\nimport GraduateStore from '../../components/combobox/graduate_school_major.js';\r\nimport createDataModule from '../../components/combobox/undergraduate.js';\r\nimport schoolData from '../../static/data/2886所大学.json';\r\nimport majorData from '../../static/data/本科专业.json';\r\n\r\nexport default {\r\n  onPageScroll() {\r\n    // 通知所有组件页面已滚动\r\n    uni.$emit('page-scroll');\r\n  },\r\n  components: {\r\n    ChoiceSelected,\r\n  },\r\n  onLoad() {\r\n    this.loadUniversityData();\r\n    this.initSchoolAndMajorSearch();\r\n    // 加载用户信息\r\n    this.initUserInfo();\r\n  },\r\n  data() {\r\n    return {\r\n      formData: {\r\n        nickname: '', // 用户昵称\r\n        avatar: '/static/image/defaultAvatar/teacher-man.png', // 默认头像\r\n        schoolIndex: -1,\r\n        majorIndex: -1,\r\n        targetSchoolIndex: -1,  // 目标学校索引\r\n        targetMajorIndex: -1,   // 目标专业索引\r\n        gradeIndex: -1,\r\n        targetSchool: '',\r\n        targetMajor: '', // 目标专业值\r\n      },\r\n      schoolList: [], // 普通学校列表\r\n      majorList: [], // 普通专业列表\r\n      targetSchoolList: [], // 目标学校列表（考研）\r\n      targetMajorList: [], // 目标专业列表（考研）\r\n      allGradeList: ['大一', '大二', '大三', '大四', '研一', '研二', '研三'],\r\n      showAgreementModal: false, // 控制协议浮窗显示\r\n      pendingUserInfo: null, // 暂存待提交的用户信息\r\n      // 分离筛选器状态\r\n      graduateStore: null, // 研究生数据状态\r\n      schoolStore: null, // 本科学校数据状态\r\n      majorStore: null, // 本科专业数据状态\r\n      token: '', // 用户token\r\n      userId: '', // 用户ID\r\n    };\r\n  },\r\n  computed: {\r\n    // 使用mapState映射userInfo相关状态\r\n    ...mapState('user/baseInfo', {\r\n      userRole: state => state.userInfo.role,\r\n      userSchool: state => state.userInfo.school,\r\n      userMajor: state => state.userInfo.major,\r\n      userTargetSchool: state => state.userInfo.targetSchool,\r\n      userTargetMajor: state => state.userInfo.targetMajor,\r\n      userStudentGrade: state => state.userInfo.studentGrade,\r\n      userTeacherGrade: state => state.userInfo.teacherGrade,\r\n    }),\r\n    \r\n    /**\r\n     * 根据用户角色筛选年级列表\r\n     * @returns {Array} 筛选后的年级列表\r\n     */\r\n    gradeList() {\r\n      if (this.userRole === '老师') {\r\n        return this.allGradeList.filter(grade => grade.includes('研'));\r\n      } else {\r\n        return this.allGradeList.filter(grade => grade.includes('大'));\r\n      }\r\n    },\r\n    /**\r\n     * @description 获取过滤后的目标学校列表\r\n     * @returns {Array} 过滤后的目标学校列表\r\n     */\r\n    filteredTargetSchoolList() {\r\n      if (!this.graduateStore) return [];\r\n      return GraduateStore.getters.filteredSchoolList(this.graduateStore);\r\n    },\r\n    \r\n    /**\r\n     * @description 获取过滤后的目标专业列表\r\n     * @returns {Array} 过滤后的目标专业列表\r\n     */\r\n    filteredTargetMajorList() {\r\n      if (!this.graduateStore) return [];\r\n      return GraduateStore.getters.filteredMajorList(this.graduateStore);\r\n    },\r\n\r\n    /**\r\n     * @description 获取过滤后的本科学校列表\r\n     * @returns {Array} 过滤后的本科学校列表\r\n     */\r\n    filteredSchoolList() {\r\n      if (!this.schoolStore) return [];\r\n      return this.schoolStore.getters.filteredData(this.schoolStore.state);\r\n    }\r\n  },\r\n  methods: {\r\n    // 使用mapMutations映射UPDATE_USER_INFO方法\r\n    ...mapMutations('user/baseInfo', ['UPDATE_USER_INFO', 'SET_USER_INFO']),\r\n    \r\n    /**\r\n     * @description 初始化用户信息\r\n     */\r\n    initUserInfo() {\r\n      // 获取token和userId\r\n      this.token = uni.getStorageSync('token') || '';\r\n      this.userId = uni.getStorageSync('userId') || '';\r\n      \r\n      if (!this.token) {\r\n        // 如果没有token，可能需要重新登录\r\n        uni.showToast({\r\n          title: '请先登录',\r\n          icon: 'none',\r\n          complete: () => {\r\n            setTimeout(() => {\r\n              Navigator.redirectTo('/pages/login/wechat_login');\r\n            }, 1500);\r\n          }\r\n        });\r\n        return;\r\n      }\r\n      \r\n      // 如果有已存储的用户信息，显示它们\r\n      const storedNickname = uni.getStorageSync('nickname') || '';\r\n      const storedAvatar = uni.getStorageSync('avatar') || '';\r\n      \r\n      if (storedNickname) {\r\n        this.formData.nickname = storedNickname;\r\n      }\r\n      \r\n      if (storedAvatar) {\r\n        this.formData.avatar = storedAvatar;\r\n      }\r\n      \r\n      // 如果需要，可以尝试从后端获取最新的用户信息\r\n      this.fetchUserProfile();\r\n    },\r\n    \r\n    /**\r\n     * @description 从后端获取用户信息\r\n     */\r\n    fetchUserProfile() {\r\n      if (!this.token || !this.userId) return;\r\n      \r\n      uni.request({\r\n        url: `http://localhost:8080/users/profile/${this.userId}`,\r\n        method: 'GET',\r\n        header: {\r\n          'Authorization': `Bearer ${this.token}`\r\n        },\r\n        success: (res) => {\r\n          if (res.statusCode === 200 && res.data) {\r\n            const userData = res.data;\r\n            \r\n            // 更新表单数据\r\n            if (userData.nickname) {\r\n              this.formData.nickname = userData.nickname;\r\n              uni.setStorageSync('nickname', userData.nickname);\r\n            }\r\n            \r\n            if (userData.avatar) {\r\n              this.formData.avatar = userData.avatar;\r\n              uni.setStorageSync('avatar', userData.avatar);\r\n            }\r\n            \r\n            // 更新Vuex状态\r\n            this.SET_USER_INFO({\r\n              id: userData.id || this.userId,\r\n              name: userData.nickname || this.formData.nickname,\r\n              avatar: userData.avatar || this.formData.avatar,\r\n              isRegistered: 1\r\n            });\r\n            \r\n            uni.__f__('log','at pages/login/login_detail.vue:339','用户信息已更新');\r\n          }\r\n        },\r\n        fail: (err) => {\r\n          uni.__f__('error','at pages/login/login_detail.vue:343','获取用户信息失败', err);\r\n        }\r\n      });\r\n    },\r\n    \r\n    /**\r\n     * @description 上传头像\r\n     */\r\n    uploadAvatar() {\r\n      uni.chooseImage({\r\n        count: 1,\r\n        sizeType: ['compressed'],\r\n        sourceType: ['album', 'camera'],\r\n        success: (res) => {\r\n          const tempFilePaths = res.tempFilePaths;\r\n          \r\n          // 显示加载中\r\n          uni.showLoading({\r\n            title: '上传中...'\r\n          });\r\n          \r\n          // 预览选择的图片\r\n          this.formData.avatar = tempFilePaths[0];\r\n          \r\n          // 真实环境中，这里应该调用上传API\r\n          // 模拟上传完成\r\n          setTimeout(() => {\r\n            uni.hideLoading();\r\n            uni.showToast({\r\n              title: '头像已更新',\r\n              icon: 'success'\r\n            });\r\n            \r\n            // 存储到本地以便下次显示\r\n            uni.setStorageSync('avatar', tempFilePaths[0]);\r\n          }, 1000);\r\n        }\r\n      });\r\n    },\r\n    \r\n    /**\r\n     * @description 初始化学校和专业搜索引擎\r\n     */\r\n    initSchoolAndMajorSearch() {\r\n      // 初始化本科学校数据状态\r\n      this.schoolStore = createDataModule(schoolData);\r\n      \r\n      // 初始化本科专业数据状态\r\n      this.majorStore = createDataModule(majorData);\r\n      \r\n      // 初始化搜索引擎\r\n      this.schoolStore.actions.initSearch({\r\n        commit: (mutation, payload) => {\r\n          this.schoolStore.mutations[mutation](this.schoolStore.state, payload);\r\n        }\r\n      });\r\n      \r\n      this.majorStore.actions.initSearch({\r\n        commit: (mutation, payload) => {\r\n          this.majorStore.mutations[mutation](this.majorStore.state, payload);\r\n        }\r\n      });\r\n      \r\n      // 初始填充数据\r\n      this.schoolList = this.schoolStore.getters.filteredData(this.schoolStore.state);\r\n      this.majorList = this.majorStore.getters.filteredData(this.majorStore.state);\r\n    },\r\n\r\n    /**\r\n     * @description 处理学校选择\r\n     * @param {Number} index - 选择的索引\r\n     * @param {String} school - 选择的学校名称\r\n     */\r\n    handleSchoolSelect(index, school) {\r\n      this.formData.schoolIndex = index;\r\n    },\r\n\r\n    /**\r\n     * @description 处理专业选择\r\n     * @param {Number} index - 选择的索引\r\n     * @param {String} major - 选择的专业名称\r\n     */\r\n    handleMajorSelect(index, major) {\r\n      this.formData.majorIndex = index;\r\n    },\r\n\r\n    /**\r\n     * @description 处理目标学校选择 - 级联选择的父项\r\n     * @param {Number} index - 选择的索引\r\n     * @param {String} school - 选择的学校名称\r\n     */\r\n    handleTargetSchoolSelect(index, school) {\r\n      this.formData.targetSchoolIndex = index;\r\n      this.formData.targetSchool = school;\r\n      \r\n      // 更新专业列表的依赖值\r\n      GraduateStore.actions.selectSchool({\r\n        commit: (mutation, payload) => {\r\n          GraduateStore.mutations[mutation](this.graduateStore, payload);\r\n        }\r\n      }, school);\r\n      \r\n      // 重置专业选择\r\n      this.resetMajorSelection();\r\n    },\r\n    /**\r\n     * @description 处理目标专业选择 - 级联选择的子项\r\n     * @param {Number} index - 选择的索引\r\n     * @param {String} major - 选择的专业名称\r\n     */\r\n    handleTargetMajorSelect(index, major) {\r\n      this.formData.targetMajorIndex = index;\r\n      this.formData.targetMajor = major;\r\n    },\r\n    /**\r\n     * @description 处理年级选择\r\n     * @param {Number} index - 选择的索引\r\n     */\r\n    handleGradeSelect(index) {\r\n      this.formData.gradeIndex = index;\r\n    },\r\n    \r\n    /**\r\n     * @description 处理学校搜索输入 - 使用本科学校搜索引擎\r\n     * @param {String} keyword - 搜索关键词\r\n     */\r\n    handleSchoolSearch(keyword) {\r\n      // 更新学校搜索关键词\r\n      this.schoolStore.actions.updateFilterKeyword({\r\n        commit: (mutation, payload) => {\r\n          this.schoolStore.mutations[mutation](this.schoolStore.state, payload);\r\n        }\r\n      }, keyword);\r\n      \r\n      // 获取过滤结果\r\n      this.schoolList = this.schoolStore.getters.filteredData(this.schoolStore.state);\r\n      \r\n      // 调试信息\r\n      uni.__f__('log','at pages/login/login_detail.vue:481',`学校搜索: \"${keyword}\", 结果数: ${this.schoolList.length}`);\r\n    },\r\n    \r\n    /**\r\n     * @description 处理专业搜索输入\r\n     * @param {String} keyword - 搜索关键词\r\n     */\r\n    handleMajorSearch(keyword) {\r\n      // 更新专业搜索关键词\r\n      this.majorStore.actions.updateFilterKeyword({\r\n        commit: (mutation, payload) => {\r\n          this.majorStore.mutations[mutation](this.majorStore.state, payload);\r\n        }\r\n      }, keyword);\r\n      \r\n      // 获取过滤结果\r\n      this.majorList = this.majorStore.getters.filteredData(this.majorStore.state);\r\n      \r\n      // 调试信息\r\n      uni.__f__('log','at pages/login/login_detail.vue:500',`专业搜索: \"${keyword}\", 结果数: ${this.majorList.length}`);\r\n    },\r\n    \r\n    /**\r\n     * @description 处理目标学校搜索输入 - 使用研究生学校搜索引擎\r\n     * @param {String} keyword - 搜索关键词\r\n     */\r\n    handleTargetSchoolSearch(keyword) {\r\n      uni.__f__('log','at pages/login/login_detail.vue:508','处理学校搜索:', keyword);\r\n      \r\n      // 特殊处理: 如果关键词为空，显示所有学校（但限制数量）\r\n      if (!keyword || keyword.trim() === '') {\r\n        const allSchools = Object.keys(this.graduateStore.schools).slice(0, 50);\r\n        this.targetSchoolList = allSchools;\r\n        uni.__f__('log','at pages/login/login_detail.vue:514','关键词为空，显示前50所学校');\r\n        return;\r\n      }\r\n      \r\n      // 确保搜索引擎已初始化\r\n      if (!this.graduateStore.schoolFuse) {\r\n        uni.__f__('warn','at pages/login/login_detail.vue:520','Fuse搜索引擎未初始化，强制重新初始化中...');\r\n        // 强制重新初始化搜索引擎，确保搜索质量\r\n        GraduateStore.actions.reinitializeSearch({\r\n          commit: (mutation, payload) => {\r\n            GraduateStore.mutations[mutation](this.graduateStore, payload);\r\n          },\r\n          state: this.graduateStore\r\n        });\r\n      }\r\n      \r\n      // 更新学校搜索关键词\r\n      GraduateStore.mutations.setSchoolKeyword(this.graduateStore, keyword);\r\n      \r\n      // 手动获取过滤结果并更新列表\r\n      const filteredSchools = GraduateStore.getters.filteredSchoolList(this.graduateStore);\r\n      uni.__f__('log','at pages/login/login_detail.vue:535','过滤后的学校列表:', filteredSchools);\r\n      \r\n      // 直接更新目标学校列表，不依赖watch\r\n      this.targetSchoolList = filteredSchools;\r\n      \r\n      // 强制刷新组件\r\n      this.$nextTick(() => {\r\n        // 记录结果数量\r\n        uni.__f__('log','at pages/login/login_detail.vue:543',`最终显示学校数量: ${filteredSchools.length}`);\r\n        \r\n        // 确保下拉框组件刷新\r\n        if (this.$refs.targetSchoolDropdown) {\r\n          this.$refs.targetSchoolDropdown.$forceUpdate();\r\n        }\r\n      });\r\n    },\r\n    \r\n    /**\r\n     * @description 处理目标专业搜索输入 - 使用研究生专业搜索引擎\r\n     * @param {String} keyword - 搜索关键词\r\n     */\r\n    handleTargetMajorSearch(keyword) {\r\n      uni.__f__('log','at pages/login/login_detail.vue:557','处理专业搜索:', keyword);\r\n      \r\n      // 确保当前有选中的学校\r\n      if (!this.graduateStore.selectedSchool) {\r\n        uni.__f__('warn','at pages/login/login_detail.vue:561','未选择学校，专业搜索无效');\r\n        return;\r\n      }\r\n      \r\n      // 如果关键词为空，显示所有专业（但限制数量）\r\n      if (!keyword || keyword.trim() === '') {\r\n        const allMajors = this.graduateStore.schools[this.graduateStore.selectedSchool] || [];\r\n        this.targetMajorList = allMajors.slice(0, 20); // 限制初始显示数量\r\n        uni.__f__('log','at pages/login/login_detail.vue:569','关键词为空，显示前20个专业');\r\n        return;\r\n      }\r\n      \r\n      // 确保专业搜索引擎已初始化\r\n      if (!this.graduateStore.majorFuse) {\r\n        uni.__f__('warn','at pages/login/login_detail.vue:575','专业搜索引擎未初始化，重新初始化中...');\r\n        // 重新初始化当前学校的专业搜索引擎\r\n        GraduateStore.mutations.setSelectedSchool(this.graduateStore, this.graduateStore.selectedSchool);\r\n      }\r\n      \r\n      // 更新专业搜索关键词\r\n      GraduateStore.mutations.setMajorKeyword(this.graduateStore, keyword);\r\n      \r\n      // 手动获取过滤结果并更新列表\r\n      const filteredMajors = GraduateStore.getters.filteredMajorList(this.graduateStore);\r\n      uni.__f__('log','at pages/login/login_detail.vue:585','过滤后的专业列表:', filteredMajors);\r\n      \r\n      // 直接更新目标专业列表，不依赖watch\r\n      this.targetMajorList = filteredMajors;\r\n      \r\n      // 强制刷新组件\r\n      this.$nextTick(() => {\r\n        // 记录结果数量\r\n        uni.__f__('log','at pages/login/login_detail.vue:593',`最终显示专业数量: ${filteredMajors.length}`);\r\n        \r\n        // 确保下拉框组件刷新\r\n        if (this.$refs.targetMajorDropdown) {\r\n          this.$refs.targetMajorDropdown.$forceUpdate();\r\n        }\r\n      });\r\n    },\r\n    \r\n    /**\r\n     * @description 关闭所有下拉框\r\n     */\r\n    closeAllDropdowns() {\r\n      const dropdowns = ['schoolDropdown', 'majorDropdown', 'targetSchoolDropdown', 'targetMajorDropdown'];\r\n      dropdowns.forEach(dropdown => {\r\n        if (this.$refs && this.$refs[dropdown]) {\r\n          this.$refs[dropdown].closeDropdown && this.$refs[dropdown].closeDropdown();\r\n        }\r\n      });\r\n    },\r\n    \r\n    /**\r\n     * @description 加载大学数据\r\n     */\r\n    loadUniversityData() {\r\n      try {\r\n        // 初始化考研数据（目标学校和专业）\r\n        this.initGraduateData(); \r\n        \r\n        uni.__f__('log','at pages/login/login_detail.vue:622','成功加载学校数据');\r\n      } catch (error) {\r\n        uni.__f__('error','at pages/login/login_detail.vue:624','加载大学数据失败:', error);\r\n        \r\n        // 设置默认学校列表\r\n        const defaultSchools = [\"北京大学\", \"清华大学\", \"复旦大学\"];\r\n        \r\n        // 设置普通学校列表（就读学校）\r\n        this.schoolList = defaultSchools;\r\n        \r\n        // 设置目标学校列表（考研学校）\r\n        this.targetSchoolList = defaultSchools;\r\n        \r\n        uni.showToast({\r\n          title: '加载大学数据失败，使用默认列表',\r\n          icon: 'none'\r\n        });\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * @description 关闭协议确认浮窗\r\n     */\r\n    closeModal() {\r\n      this.showAgreementModal = false;\r\n      this.pendingUserInfo = null;\r\n    },\r\n    \r\n    /**\r\n     * @description 确认同意协议并提交信息\r\n     */\r\n    confirmAgreement() {\r\n      if (this.pendingUserInfo) {\r\n        // 使用mapMutations映射的方法更新用户信息\r\n        this.UPDATE_USER_INFO(this.pendingUserInfo);\r\n        \r\n        // 提交到后端\r\n        this.submitToBackend(this.pendingUserInfo);\r\n        \r\n        // 本地存储用户昵称和头像，方便下次加载\r\n        uni.setStorageSync('nickname', this.pendingUserInfo.userInfo.nickname);\r\n        uni.setStorageSync('avatar', this.pendingUserInfo.userInfo.avatar);\r\n        \r\n        // 提示成功\r\n        uni.showToast({\r\n          title: '信息保存成功',\r\n          icon: 'success'\r\n        });\r\n        \r\n        // 关闭浮窗\r\n        this.showAgreementModal = false;\r\n        \r\n        // 跳转到下一个页面\r\n        setTimeout(() => {\r\n          Navigator.toMine();\r\n        }, 1500);\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * @description 提交表单信息\r\n     */\r\n    submitForm() {\r\n      try {\r\n        // 检查必填信息\r\n        if (!this.formData.nickname.trim()) {\r\n          uni.showToast({\r\n            title: '请输入昵称',\r\n            icon: 'none'\r\n          });\r\n          return;\r\n        }\r\n        \r\n        // 从Vuex获取角色，无需本地存储\r\n        const currentRole = this.userRole;\r\n        \r\n        // 构建用户信息对象，与state.js中的结构保持一致\r\n        const userInfo = {\r\n          // 顶级字段更新\r\n          id: this.userId || uni.getStorageSync('userId'), // 保持ID不变\r\n          name: this.formData.nickname, // 使用昵称更新name字段\r\n          avatar: this.formData.avatar, // 更新头像\r\n          isRegistered: 1, // 标记为已注册\r\n          \r\n          userInfo: {\r\n            // 保留证书状态\r\n            certificate: this.$store.state.user.baseInfo.userInfo.certificate,\r\n            role: currentRole, // 使用vuex中的角色\r\n            school: this.formData.schoolIndex >= 0 ? this.schoolList[this.formData.schoolIndex] : this.userSchool,\r\n            major: this.formData.majorIndex >= 0 ? this.majorList[this.formData.majorIndex] : this.userMajor,\r\n            studentGrade: (currentRole === '学生' && this.formData.gradeIndex >= 0) ? this.gradeList[this.formData.gradeIndex] : this.userStudentGrade,\r\n            teacherGrade: (currentRole === '老师' && this.formData.gradeIndex >= 0) ? this.gradeList[this.formData.gradeIndex] : this.userTeacherGrade,\r\n            // 保留原有的考研成绩\r\n            teacherScore: this.$store.state.user.baseInfo.userInfo.teacherScore,\r\n            // 新增昵称和头像\r\n            nickname: this.formData.nickname,\r\n            avatar: this.formData.avatar\r\n          }\r\n        };\r\n        \r\n        // 如果是学生角色，添加目标学校和目标专业\r\n        if (currentRole === '学生') {\r\n          // 使用保存的目标学校和专业值或者保留原有值\r\n          userInfo.userInfo.targetSchool = this.formData.targetSchool || this.userTargetSchool;\r\n          userInfo.userInfo.targetMajor = this.formData.targetMajor || this.userTargetMajor;\r\n        }\r\n        \r\n        // 如果是老师角色，显示协议确认浮窗\r\n        if (currentRole === '老师') {\r\n          this.pendingUserInfo = userInfo; // 暂存用户信息\r\n          this.showAgreementModal = true; // 显示协议浮窗\r\n          return; // 终止后续处理，等待用户确认\r\n        }\r\n        \r\n        // 学生角色直接提交信息，使用mapMutations映射的方法\r\n        this.UPDATE_USER_INFO(userInfo);\r\n        \r\n        // 提交到后端\r\n        this.submitToBackend(userInfo);\r\n        \r\n        // 本地存储用户昵称和头像，方便下次加载\r\n        uni.setStorageSync('nickname', this.formData.nickname);\r\n        uni.setStorageSync('avatar', this.formData.avatar);\r\n        \r\n        // 提示成功\r\n        uni.showToast({\r\n          title: '信息保存成功',\r\n          icon: 'success'\r\n        });\r\n        \r\n        // 跳转到下一个页面\r\n        setTimeout(() => {\r\n          Navigator.toIndex();\r\n        }, 1500);\r\n      } catch (error) {\r\n        uni.__f__('error','at pages/login/login_detail.vue:757','提交表单时出错:', error);\r\n        uni.showToast({\r\n          title: '保存失败，请重试',\r\n          icon: 'none'\r\n        });\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * @description 提交用户信息到后端\r\n     * @param {Object} userInfo - 用户信息对象\r\n     */\r\n    submitToBackend(userInfo) {\r\n      // 确保有token\r\n      if (!this.token) {\r\n        uni.__f__('error','at pages/login/login_detail.vue:772','没有token，无法提交用户信息');\r\n        return;\r\n      }\r\n      \r\n      // 显示加载中\r\n      uni.showLoading({\r\n        title: '提交中...'\r\n      });\r\n      \r\n      // 构造提交的数据\r\n      const submitData = {\r\n        id: userInfo.id, // 包含用户ID\r\n        nickname: userInfo.userInfo.nickname,\r\n        name: userInfo.name, // 使用顶级name字段\r\n        avatar: userInfo.avatar, // 使用顶级avatar字段\r\n        school: userInfo.userInfo.school,\r\n        major: userInfo.userInfo.major,\r\n        grade: userInfo.userInfo.role === '学生' ? userInfo.userInfo.studentGrade : userInfo.userInfo.teacherGrade\r\n      };\r\n      \r\n      // 如果是学生，添加目标学校和专业\r\n      if (userInfo.userInfo.role === '学生') {\r\n        submitData.targetSchool = userInfo.userInfo.targetSchool;\r\n        submitData.targetMajor = userInfo.userInfo.targetMajor;\r\n      }\r\n      \r\n      // 发送请求到后端\r\n      uni.request({\r\n        url: 'http://localhost:8080/users/profile/update',\r\n        method: 'POST',\r\n        header: {\r\n          'Authorization': `Bearer ${this.token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        data: submitData,\r\n        success: (res) => {\r\n          uni.__f__('log','at pages/login/login_detail.vue:808','用户信息提交成功', res);\r\n          uni.hideLoading();\r\n          \r\n          // 如果后端返回了更新后的用户信息，更新本地存储\r\n          if (res.data && res.data.user) {\r\n            const user = res.data.user;\r\n            \r\n            // 更新Vuex状态\r\n            const updateData = {\r\n              id: user.id || userInfo.id,\r\n              name: user.name || userInfo.name,\r\n              avatar: user.avatar || userInfo.avatar\r\n            };\r\n            \r\n            // 更新Vuex\r\n            this.UPDATE_USER_INFO(updateData);\r\n            \r\n            // 更新本地存储\r\n            uni.setStorageSync('userId', updateData.id);\r\n            uni.setStorageSync('nickname', updateData.name);\r\n            uni.setStorageSync('avatar', updateData.avatar);\r\n          }\r\n        },\r\n        fail: (err) => {\r\n          uni.__f__('error','at pages/login/login_detail.vue:832','用户信息提交失败', err);\r\n          uni.hideLoading();\r\n          uni.showToast({\r\n            title: '网络异常，信息已本地保存',\r\n            icon: 'none'\r\n          });\r\n        }\r\n      });\r\n    },\r\n\r\n    /**\r\n     * @description 验证表单内容 - 所有字段均为选填，无需验证\r\n     * @returns {boolean} 验证是否通过\r\n     */\r\n    validateForm() {\r\n      // 所有字段均为选填，直接返回true\r\n      return true;\r\n    },\r\n\r\n    /**\r\n     * @description 初始化考研数据\r\n     */\r\n    initGraduateData() {\r\n      try {\r\n        // 初始化研究生数据状态 - 使用深拷贝确保数据完整性\r\n        this.graduateStore = JSON.parse(JSON.stringify(GraduateStore.state));\r\n        \r\n        // 确保数据结构完整\r\n        if (!this.graduateStore.schools) {\r\n          uni.__f__('error','at pages/login/login_detail.vue:861','研究生学校数据不完整');\r\n          throw new Error('学校数据结构不完整');\r\n        }\r\n        \r\n        // 使用优化的搜索引擎配置初始化\r\n        GraduateStore.mutations.initSchoolFuse(this.graduateStore);\r\n        uni.__f__('log','at pages/login/login_detail.vue:867','Fuse引擎初始化状态:', !!this.graduateStore.schoolFuse);\r\n        \r\n        // 验证搜索引擎配置\r\n        if (this.graduateStore.schoolFuse) {\r\n          uni.__f__('log','at pages/login/login_detail.vue:871','Fuse配置验证:', {\r\n            keys: this.graduateStore.schoolFuse._docs[0] ? Object.keys(this.graduateStore.schoolFuse._docs[0]) : '未知',\r\n            ignoreLocation: this.graduateStore.schoolFuse.options.ignoreLocation,\r\n            threshold: this.graduateStore.schoolFuse.options.threshold\r\n          });\r\n        } else {\r\n          uni.__f__('error','at pages/login/login_detail.vue:877','Fuse.js搜索引擎初始化失败');\r\n        }\r\n        \r\n        // 设置目标学校列表初始值 - 仅用于目标学校下拉框\r\n        const graduateSchools = Object.keys(this.graduateStore.schools).slice(0, 50); // 初始只显示前50所\r\n        this.targetSchoolList = graduateSchools;\r\n        \r\n        uni.__f__('log','at pages/login/login_detail.vue:884','初始化考研数据成功');\r\n        return true;\r\n      } catch (error) {\r\n        uni.__f__('error','at pages/login/login_detail.vue:887','初始化考研数据失败:', error);\r\n        \r\n        // 设置默认数据\r\n        const defaultSchools = [\"北京大学\", \"清华大学\", \"复旦大学\"];\r\n        this.targetSchoolList = defaultSchools;\r\n        return false;\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * @description 处理学校变更事件\r\n     * @param {String} school - 变更后的学校名称\r\n     */\r\n    handleSchoolChange(school) {\r\n      uni.__f__('log','at pages/login/login_detail.vue:901','学校变更事件:', school);\r\n      \r\n      if (!school) {\r\n        // 学校被清空，重置专业选择\r\n        this.resetMajorSelection();\r\n        return;\r\n      }\r\n      \r\n      // 在选择新学校后，立即更新专业搜索实例\r\n      GraduateStore.actions.selectSchool({\r\n        commit: (mutation, payload) => {\r\n          GraduateStore.mutations[mutation](this.graduateStore, payload);\r\n        }\r\n      }, school);\r\n      \r\n      // 更新目标专业列表\r\n      if (this.graduateStore.schools[school]) {\r\n        this.targetMajorList = this.graduateStore.schools[school].slice(0, 30); // 初始显示前30个专业\r\n        uni.__f__('log','at pages/login/login_detail.vue:919',`已加载 ${school} 的专业列表，共 ${this.targetMajorList.length} 个`);\r\n      } else {\r\n        this.resetMajorSelection();\r\n        uni.__f__('warn','at pages/login/login_detail.vue:922',`${school} 没有关联的专业数据`);\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * @description 重置专业选择\r\n     */\r\n    resetMajorSelection() {\r\n      this.formData.targetMajorIndex = -1;\r\n      this.formData.targetMajor = '';\r\n    }\r\n  },\r\n  // 监听页面显示时更新搜索引擎\r\n  onShow() {\r\n    // 每次显示页面时强制重新初始化搜索引擎，确保搜索功能正常工作\r\n    if (this.graduateStore) {\r\n      // 使用强制重新初始化搜索方法\r\n      GraduateStore.actions.reinitializeSearch({\r\n        commit: (mutation, payload) => {\r\n          GraduateStore.mutations[mutation](this.graduateStore, payload);\r\n        },\r\n        state: this.graduateStore\r\n      });\r\n      \r\n      uni.__f__('log','at pages/login/login_detail.vue:946','Fuse引擎强制重新初始化完成，状态:', !!this.graduateStore.schoolFuse);\r\n      \r\n      // 验证搜索引擎配置\r\n      if (this.graduateStore.schoolFuse) {\r\n        uni.__f__('log','at pages/login/login_detail.vue:950','重新初始化后的Fuse配置:', {\r\n          threshold: this.graduateStore.schoolFuse.options.threshold,\r\n          ignoreLocation: this.graduateStore.schoolFuse.options.ignoreLocation,\r\n          items: this.graduateStore.schoolFuse._docs.length\r\n        });\r\n      }\r\n    }\r\n    \r\n    // 重新初始化本科学校和专业搜索引擎\r\n    if (this.schoolStore && this.majorStore) {\r\n      this.initSchoolAndMajorSearch();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.form-container {\r\n  padding: 30rpx;\r\n}\r\n\r\n.form-card {\r\n  background-color: #fff;\r\n  border-radius: 20rpx;\r\n  padding: 30rpx;\r\n  box-shadow: 0 2rpx 12rpx rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n\r\n\r\n.label-container {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-bottom: 15rpx;\r\n}\r\n\r\n.form-row {\r\n  margin-bottom: 30rpx;\r\n}\r\n\r\n.form-label {\r\n  display: block;\r\n  font-size: 28rpx;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.optional-tag {\r\n  font-size: 24rpx;\r\n  color: #999;\r\n  margin-left: 10rpx;\r\n}\r\n\r\n.required-tag {\r\n  font-size: 24rpx;\r\n  color: #ff4d4f;\r\n  margin-left: 10rpx;\r\n}\r\n\r\n.form-input {\r\n  width: 100%;\r\n  height: 80rpx;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 8rpx;\r\n  padding: 0 20rpx;\r\n  font-size: 28rpx;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.radio-group {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n}\r\n\r\n.radio-item-row {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n}\r\n\r\n.radio-option {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-right: 30px;\r\n  margin-left: 30px;\r\n}\r\n\r\n.option-text {\r\n  margin-left: 8px;\r\n  font-size: 28rpx;\r\n  color: #333;\r\n}\r\n\r\n.form-select {\r\n  width: 100%;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 8rpx;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.button-container {\r\n  margin-top: 50rpx;\r\n}\r\n\r\n.submit-btn {\r\n  width: 100%;\r\n  height: 90rpx;\r\n  line-height: 90rpx;\r\n  text-align: center;\r\n  background-color: #007AFF;\r\n  color: #fff;\r\n  font-size: 32rpx;\r\n  border-radius: 45rpx;\r\n}\r\n\r\n/* 头像上传相关样式 */\r\n.avatar-upload-container {\r\n  position: relative;\r\n  width: 140rpx;\r\n  height: 140rpx;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  margin: 10rpx 0;\r\n  box-shadow: 0 4rpx 12rpx rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.form-avatar {\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 50%;\r\n}\r\n\r\n.avatar-upload-mask {\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 50rpx;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.upload-text {\r\n  color: #fff;\r\n  font-size: 22rpx;\r\n}\r\n\r\n/* 协议浮窗样式 */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 999;\r\n}\r\n\r\n.modal-content {\r\n  width: 80%;\r\n  max-height: 70vh;\r\n  background-color: #fff;\r\n  border-radius: 20rpx;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.modal-title {\r\n  text-align: center;\r\n  font-size: 36rpx;\r\n  font-weight: bold;\r\n  padding: 30rpx 0;\r\n  color: #333;\r\n  border-bottom: 1px solid #f0f0f0;\r\n}\r\n\r\n.modal-body {\r\n  padding: 30rpx;\r\n  flex: 1;\r\n  overflow-y: auto;\r\n}\r\n\r\n.agreement-text {\r\n  font-size: 28rpx;\r\n  color: #333;\r\n  line-height: 1.6;\r\n}\r\n\r\n.agreement-item {\r\n  margin-bottom: 20rpx;\r\n}\r\n\r\n.modal-footer {\r\n  padding: 20rpx 30rpx 40rpx;\r\n  border-top: 1px solid #f0f0f0;\r\n}\r\n\r\n.agree-btn {\r\n  width: 100%;\r\n  height: 80rpx;\r\n  line-height: 80rpx;\r\n  text-align: center;\r\n  background-color: #007AFF;\r\n  color: #fff;\r\n  font-size: 30rpx;\r\n  border-radius: 40rpx;\r\n  border: none;\r\n}\r\n</style>","import MiniProgramPage from 'E:/研师录与其他人共享文件/teacherDirectory/vue实现Lottie动画代码/pages/login/login_detail.vue'\nwx.createPage(MiniProgramPage)"],"names":["defineComponent","uni","mapState","GraduateStore","mapMutations","Navigator","createDataModule","schoolData","majorData"],"mappings":"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"}