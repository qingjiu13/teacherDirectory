{"version":3,"file":"request.js","sources":["pagesChat/common/request.js"],"sourcesContent":["import UNI_APP from '/pagesChat/env.js'\n\n// 请求队列\nlet requestList = [];\n// 是否正在刷新中\nlet isRefreshToken = false;\n\nconst request = (options) => {\n\tconst header = options.header || {};\n\tconst loginInfo = uni.getStorageSync(\"loginInfo\");\n\tif (loginInfo) {\n\t\theader.accessToken = loginInfo.accessToken;\n\t}\n\treturn new Promise(function (resolve, reject) {\n\t\tuni.request({\n\t\t\turl: UNI_APP.BASE_URL + options.url,\n\t\t\tmethod: options.method || 'GET',\n\t\t\theader: header,\n\t\t\tdata: options.data || {},\n\t\t\tasync success(res) {\n\t\t\t\tif (res.data.code == 200) {\n\t\t\t\t\treturn resolve(res.data.data)\n\t\t\t\t} else if (res.data.code == 400) {\n\t\t\t\t\tgetApp().$vm.exit();\n\t\t\t\t} else if (res.data.code == 401) {\n\t\t\t\t\tconsole.log(\"token失效，尝试重新获取\")\n\t\t\t\t\tif (isRefreshToken) {\n\t\t\t\t\t\t// 正在刷新token,把其他请求存起来\n\t\t\t\t\t\trequestList.push(() => {\n\t\t\t\t\t\t\tresolve(request(options))\n\t\t\t\t\t\t})\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tisRefreshToken = true;\n\t\t\t\t\t// 发送请求, 进行刷新token操作, 获取新的token\n\t\t\t\t\tconst res = await reqRefreshToken(loginInfo);\n\t\t\t\t\tif (!res || res.data.code != 200) {\n\t\t\t\t\t\trequestList = [];\n\t\t\t\t\t\tisRefreshToken = false;\n\t\t\t\t\t\tconsole.log(\"刷新token失败\")\n\t\t\t\t\t\tgetApp().$vm.exit();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tlet newInfo = res.data.data;\n\t\t\t\t\tuni.setStorageSync(\"loginInfo\", newInfo);\n\t\t\t\t\trequestList.forEach(cb => cb());\n\t\t\t\t\trequestList = [];\n\t\t\t\t\tisRefreshToken = false;\n\t\t\t\t\t// 重新发送刚才的请求\n\t\t\t\t\treturn resolve(request(options))\n\n\t\t\t\t} else {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ticon: \"none\",\n\t\t\t\t\t\ttitle: res.data.message,\n\t\t\t\t\t\tduration: 1500\n\t\t\t\t\t})\n\t\t\t\t\treturn reject(res.data)\n\t\t\t\t}\n\t\t\t},\n\t\t\tfail(error) {\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: \"网络似乎有点不给力哟\",\n\t\t\t\t\ticon: \"none\",\n\t\t\t\t\tduration: 1500\n\t\t\t\t})\n\t\t\t\treturn reject(error)\n\t\t\t}\n\t\t});\n\t});\n}\n\n\nconst reqRefreshToken = (loginInfo) => {\n\treturn new Promise(function (resolve, reject) {\n\t\tuni.request({\n\t\t\tmethod: 'PUT',\n\t\t\turl: UNI_APP.BASE_URL + '/refreshToken',\n\t\t\theader: {\n\t\t\t\trefreshToken: loginInfo.refreshToken\n\t\t\t},\n\t\t\tsuccess: (res) => {\n\t\t\t\tresolve(res);\n\t\t\t},\n\t\t\tfail: (res) => {\n\t\t\t\treject(res);\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport default request;"],"names":["requestList","isRefreshToken","request","options","header","loginInfo","uni","resolve","reject","UNI_APP","res","reqRefreshToken","newInfo","cb","error"],"mappings":"8EAGA,IAAIA,EAAc,CAAA,EAEdC,EAAiB,GAEhB,MAACC,EAAWC,GAAY,CAC5B,MAAMC,EAASD,EAAQ,QAAU,GAC3BE,EAAYC,EAAAA,MAAI,eAAe,WAAW,EAChD,OAAID,IACHD,EAAO,YAAcC,EAAU,aAEzB,IAAI,QAAQ,SAAUE,EAASC,EAAQ,CAC7CF,EAAAA,MAAI,QAAQ,CACX,IAAKG,EAAO,QAAC,SAAWN,EAAQ,IAChC,OAAQA,EAAQ,QAAU,MAC1B,OAAQC,EACR,KAAMD,EAAQ,MAAQ,CAAE,EACxB,MAAM,QAAQO,EAAK,CAClB,GAAIA,EAAI,KAAK,MAAQ,IACpB,OAAOH,EAAQG,EAAI,KAAK,IAAI,EACtB,GAAIA,EAAI,KAAK,MAAQ,IAC3B,OAAQ,EAAC,IAAI,eACHA,EAAI,KAAK,MAAQ,IAAK,CAEhC,GADAJ,EAAAA,sDAAY,gBAAgB,EACxBL,EAAgB,CAEnBD,EAAY,KAAK,IAAM,CACtBO,EAAQL,EAAQC,CAAO,CAAC,CAC/B,CAAO,EACD,MACA,CACDF,EAAiB,GAEjB,MAAMS,EAAM,MAAMC,EAAgBN,CAAS,EAC3C,GAAI,CAACK,GAAOA,EAAI,KAAK,MAAQ,IAAK,CACjCV,EAAc,CAAA,EACdC,EAAiB,GACjBK,EAAAA,sDAAY,WAAW,EACvB,OAAQ,EAAC,IAAI,OACb,MACA,CACD,IAAIM,EAAUF,EAAI,KAAK,KACvBJ,OAAAA,EAAAA,MAAI,eAAe,YAAaM,CAAO,EACvCZ,EAAY,QAAQa,GAAMA,EAAI,CAAA,EAC9Bb,EAAc,CAAA,EACdC,EAAiB,GAEVM,EAAQL,EAAQC,CAAO,CAAC,CAEpC,KACKG,QAAAA,EAAAA,MAAI,UAAU,CACb,KAAM,OACN,MAAOI,EAAI,KAAK,QAChB,SAAU,IAChB,CAAM,EACMF,EAAOE,EAAI,IAAI,CAEvB,EACD,KAAKI,EAAO,CACXR,OAAAA,EAAAA,MAAI,UAAU,CACb,MAAO,aACP,KAAM,OACN,SAAU,IACf,CAAK,EACME,EAAOM,CAAK,CACnB,CACJ,CAAG,CACH,CAAE,CACF,EAGMH,EAAmBN,GACjB,IAAI,QAAQ,SAAUE,EAASC,EAAQ,CAC7CF,EAAAA,MAAI,QAAQ,CACX,OAAQ,MACR,IAAKG,EAAAA,QAAQ,SAAW,gBACxB,OAAQ,CACP,aAAcJ,EAAU,YACxB,EACD,QAAUK,GAAQ,CACjBH,EAAQG,CAAG,CACX,EACD,KAAOA,GAAQ,CACdF,EAAOE,CAAG,CACV,CACJ,CAAG,CACH,CAAE"}