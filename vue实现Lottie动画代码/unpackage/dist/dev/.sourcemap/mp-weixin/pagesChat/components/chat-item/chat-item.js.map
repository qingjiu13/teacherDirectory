{"version":3,"file":"chat-item.js","sources":["pagesChat/components/chat-item/chat-item.vue","../../../HBuilderX/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/uniComponent:/RTov56CU5biI5b2V5LiO5YW25LuW5Lq65YWx5Lqr5paH5Lu2L3RlYWNoZXJEaXJlY3RvcnkvdnVl5a6e546wTG90dGll5Yqo55S75Luj56CBL3BhZ2VzQ2hhdC9jb21wb25lbnRzL2NoYXQtaXRlbS9jaGF0LWl0ZW0udnVl"],"sourcesContent":["<template>\n  <view class=\"chat-item\" @click=\"showChatBox\" :class=\"{ active: active }\">\n    <view class=\"avatar-section\">\n      <head-image\n        :url=\"chat.headImage\"\n        :name=\"chat.showName\"\n        :size=\"96\"\n      ></head-image>\n      <view v-if=\"chat.unreadCount > 0\" class=\"unread-badge-container\">\n        <uni-badge\n          :text=\"chat.unreadCount\"\n          type=\"error\"\n          :max-num=\"99\"\n          size=\"small\"\n        ></uni-badge>\n      </view>\n    </view>\n\n    <view class=\"content-section\">\n      <view class=\"content-top\">\n        <text class=\"name\">{{ chat.showName }}</text>\n        <text class=\"time\">{{ formatTime(chat.lastSendTime, true) }}</text>\n      </view>\n      <view class=\"content-bottom\">\n        <text class=\"message\" :class=\"{ 'at-text': atText }\">{{\n          atText || chat.lastContent\n        }}</text>\n      </view>\n    </view>\n  </view>\n</template>\n\n<script setup lang=\"uts\">\nimport { computed } from \"vue\";\nimport { toTimeText } from \"../../common/date.js\";\nimport HeadImage from \"/pagesChat/components/head-image/head-image\";\n\nconst props = defineProps({\n  chat: Object,\n  active: {\n    type: Boolean,\n    default: false,\n  },\n});\n\nconst emit = defineEmits([\"click\"]);\n\nconst formatTime = (timestamp, simple) => {\n  if (!timestamp) return \"\";\n  return toTimeText(timestamp, simple);\n};\n\nconst showChatBox = () => {\n  emit(\"click\");\n};\n\nconst atText = computed(() => {\n  if (props.chat.atMe) return \"[有人@我]\";\n  if (props.chat.atAll) return \"[@全体成员]\";\n  return \"\";\n});\n</script>\n\n<style scoped lang=\"scss\">\n.chat-item {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 24rpx 30rpx;\n  background-color: #fff;\n  transition: background-color 0.2s;\n  border-bottom: 1px solid #efefef;\n\n  &:active {\n    background-color: #f7f7f7;\n  }\n}\n\n.avatar-section {\n  position: relative;\n  margin-right: 24rpx;\n\n  .unread-badge-container {\n    position: absolute;\n    top: -8rpx;\n    right: -8rpx;\n    ::v-deep .uni-badge {\n      font-size: 20rpx;\n      line-height: 1.4;\n    }\n  }\n}\n\n.content-section {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  min-width: 0;\n  text-align: left;\n}\n\n.content-top {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  margin-bottom: 12rpx;\n\n  .name {\n    font-size: 34rpx;\n    color: #1a1a1a;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    font-weight: bold;\n  }\n\n  .time {\n    font-size: 24rpx;\n    color: #b3b3b3;\n    padding-left: 20rpx;\n    white-space: nowrap;\n    flex-shrink: 0;\n  }\n}\n\n.content-bottom {\n  text-align: left;\n  .message {\n    font-size: 28rpx;\n    color: #999999;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n    &.at-text {\n      color: #e64340;\n    }\n  }\n}\n</style>\n","import Component from 'E:/研师录与其他人共享文件/teacherDirectory/vue实现Lottie动画代码/pagesChat/components/chat-item/chat-item.vue'\nwx.createComponent(Component)"],"names":["HeadImage","props","__props","emit","__emit","formatTime","timestamp","simple","toTimeText","showChatBox","atText","computed","Component"],"mappings":"2OAmCA,MAAOA,EAAe,IAAA,sLAEtB,MAAMC,EAAQC,EAQRC,EAAOC,EAEPC,EAAa,CAACC,EAAS,KAAEC,EAAM,OAC9BD,EACEE,EAAU,WAACF,EAAWC,CAAM,EADZ,GAInBE,EAAc,IAAA,CAClBN,EAAK,OAAO,CACd,EAEMO,EAASC,EAAAA,SAAS,IAClBV,EAAM,KAAK,KAAa,SACxBA,EAAM,KAAK,MAAc,UACtB,EACR,+hBC3DD,GAAG,gBAAgBW,CAAS"}