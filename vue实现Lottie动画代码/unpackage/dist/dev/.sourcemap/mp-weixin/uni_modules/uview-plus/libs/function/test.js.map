{"version":3,"file":"test.js","sources":["uni_modules/uview-plus/libs/function/test.js"],"sourcesContent":["/**\n * 验证电子邮箱格式\n */\nexport function email(value) {\n    return /^\\w+((-\\w+)|(\\.\\w+))*\\@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z0-9]+$/.test(value)\n}\n\n/**\n * 验证手机格式\n */\nexport function mobile(value) {\n    return /^1[23456789]\\d{9}$/.test(value)\n}\n\n/**\n * 验证URL格式\n */\nexport function url(value) {\n    return /^((https|http|ftp|rtsp|mms):\\/\\/)(([0-9a-zA-Z_!~*'().&=+$%-]+: )?[0-9a-zA-Z_!~*'().&=+$%-]+@)?(([0-9]{1,3}.){3}[0-9]{1,3}|([0-9a-zA-Z_!~*'()-]+.)*([0-9a-zA-Z][0-9a-zA-Z-]{0,61})?[0-9a-zA-Z].[a-zA-Z]{2,6})(:[0-9]{1,4})?((\\/?)|(\\/[0-9a-zA-Z_!~*'().;?:@&=+$,%#-]+)+\\/?)$/\n        .test(value)\n}\n\n/**\n * 验证日期格式\n */\nexport function date(value) {\n    if (!value) return false\n    // 判断是否数值或者字符串数值(意味着为时间戳)，转为数值，否则new Date无法识别字符串时间戳\n    if (number(value)) value = +value\n    return !/Invalid|NaN/.test(new Date(value).toString())\n}\n\n/**\n * 验证ISO类型的日期格式\n */\nexport function dateISO(value) {\n    return /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/.test(value)\n}\n\n/**\n * 验证十进制数字\n */\nexport function number(value) {\n    return /^[\\+-]?(\\d+\\.?\\d*|\\.\\d+|\\d\\.\\d+e\\+\\d+)$/.test(value)\n}\n\n/**\n * 验证字符串\n */\nexport function string(value) {\n    return typeof value === 'string'\n}\n\n/**\n * 验证整数\n */\nexport function digits(value) {\n    return /^\\d+$/.test(value)\n}\n\n/**\n * 验证身份证号码\n */\nexport function idCard(value) {\n    return /^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}([0-9]|X)$/.test(\n        value\n    )\n}\n\n/**\n * 是否车牌号\n */\nexport function carNo(value) {\n    // 新能源车牌\n    const xreg = /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}(([0-9]{5}[DF]$)|([DF][A-HJ-NP-Z0-9][0-9]{4}$))/\n    // 旧车牌\n    const creg = /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9挂学警港澳]{1}$/\n    if (value.length === 7) {\n        return creg.test(value)\n    } if (value.length === 8) {\n        return xreg.test(value)\n    }\n    return false\n}\n\n/**\n * 金额,只允许2位小数\n */\nexport function amount(value) {\n    // 金额，只允许保留两位小数\n    return /^[1-9]\\d*(,\\d{3})*(\\.\\d{1,2})?$|^0\\.\\d{1,2}$/.test(value)\n}\n\n/**\n * 中文\n */\nexport function chinese(value) {\n    const reg = /^[\\u4e00-\\u9fa5]+$/gi\n    return reg.test(value)\n}\n\n/**\n * 只能输入字母\n */\nexport function letter(value) {\n    return /^[a-zA-Z]*$/.test(value)\n}\n\n/**\n * 只能是字母或者数字\n */\nexport function enOrNum(value) {\n    // 英文或者数字\n    const reg = /^[0-9a-zA-Z]*$/g\n    return reg.test(value)\n}\n\n/**\n * 验证是否包含某个值\n */\nexport function contains(value, param) {\n    return value.indexOf(param) >= 0\n}\n\n/**\n * 验证一个值范围[min, max]\n */\nexport function range(value, param) {\n    return value >= param[0] && value <= param[1]\n}\n\n/**\n * 验证一个长度范围[min, max]\n */\nexport function rangeLength(value, param) {\n    return value.length >= param[0] && value.length <= param[1]\n}\n\n/**\n * 是否固定电话\n */\nexport function landline(value) {\n    const reg = /^\\d{3,4}-\\d{7,8}(-\\d{3,4})?$/\n    return reg.test(value)\n}\n\n/**\n * 判断是否为空\n */\nexport function empty(value) {\n    switch (typeof value) {\n    case 'undefined':\n        return true\n    case 'string':\n        if (value.replace(/(^[ \\t\\n\\r]*)|([ \\t\\n\\r]*$)/g, '').length == 0) return true\n        break\n    case 'boolean':\n        if (!value) return true\n        break\n    case 'number':\n        if (value === 0 || isNaN(value)) return true\n        break\n    case 'object':\n        if (value === null || value.length === 0) return true\n        for (const i in value) {\n            return false\n        }\n        return true\n    }\n    return false\n}\n\n/**\n * 是否json字符串\n */\nexport function jsonString(value) {\n    if (typeof value === 'string') {\n        try {\n            const obj = JSON.parse(value)\n            if (typeof obj === 'object' && obj) {\n                return true\n            }\n            return false\n        } catch (e) {\n            return false\n        }\n    }\n    return false\n}\n\n/**\n * 是否数组\n */\nexport function array(value) {\n    if (typeof Array.isArray === 'function') {\n        return Array.isArray(value)\n    }\n    return Object.prototype.toString.call(value) === '[object Array]'\n}\n\n/**\n * 是否对象\n */\nexport function object(value) {\n    return Object.prototype.toString.call(value) === '[object Object]'\n}\n\n/**\n * 是否短信验证码\n */\nexport function code(value, len = 6) {\n    return new RegExp(`^\\\\d{${len}}$`).test(value)\n}\n\n/**\n * 是否函数方法\n * @param {Object} value\n */\nexport function func(value) {\n    return typeof value === 'function'\n}\n\n/**\n * 是否promise对象\n * @param {Object} value\n */\nexport function promise(value) {\n    return object(value) && func(value.then) && func(value.catch)\n}\n\n/** 是否图片格式\n * @param {Object} value\n */\nexport function image(value) {\n    const newValue = value.split('?')[0]\n    const IMAGE_REGEXP = /\\.(jpeg|jpg|gif|png|svg|webp|jfif|bmp|dpg)/i\n    return IMAGE_REGEXP.test(newValue)\n}\n\n/**\n * 是否视频格式\n * @param {Object} value\n */\nexport function video(value) {\n    const VIDEO_REGEXP = /\\.(mp4|mpg|mpeg|dat|asf|avi|rm|rmvb|mov|wmv|flv|mkv|m3u8)/i\n    return VIDEO_REGEXP.test(value)\n}\n\n/**\n * 是否为正则对象\n * @param {Object}\n * @return {Boolean}\n */\nexport function regExp(o) {\n    return o && Object.prototype.toString.call(o) === '[object RegExp]'\n}\n\nexport default {\n    email,\n    mobile,\n    url,\n    date,\n    dateISO,\n    number,\n    digits,\n    idCard,\n    carNo,\n    amount,\n    chinese,\n    letter,\n    enOrNum,\n    contains,\n    range,\n    rangeLength,\n    empty,\n    isEmpty: empty,\n    jsonString,\n    landline,\n    object,\n    array,\n    code,\n    func,\n    promise,\n    video,\n    image,\n    regExp,\n    string\n}\n"],"names":["email","value","mobile","url","date","number","dateISO","string","digits","idCard","carNo","xreg","creg","amount","chinese","letter","enOrNum","contains","param","range","rangeLength","landline","empty","i","jsonString","obj","array","object","code","len","func","promise","image","newValue","video","regExp","o","test"],"mappings":"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"}