{"version":3,"file":"undergraduate_school.js","sources":["components/combobox/undergraduate_school.js"],"sourcesContent":["import Fuse from 'fuse.js'\r\nimport schoolList from '../../static/data/2886所大学.json'\r\n\r\nexport default {\r\n  state: {\r\n    schools: schoolList,\r\n    filterKeyword: '',\r\n    schoolFuse: null // 存储 Fuse 实例\r\n  },\r\n\r\n  mutations: {\r\n    setFilterKeyword(state, keyword) {\r\n      state.filterKeyword = keyword\r\n    },\r\n\r\n    // 初始化 Fuse 实例\r\n    initFuse(state) {\r\n      const schoolItems = state.schools.map(name => {\r\n        const shortNames = generateShortNames(name)\r\n        return {\r\n          name: name,         // 原学校名\r\n          short: shortNames,  // 生成的简称组合\r\n          display: name       // 可显示名（备用）\r\n        }\r\n      })\r\n\r\n      state.schoolFuse = new Fuse(\r\n        schoolItems,\r\n        {\r\n          keys: [\r\n            { name: 'name', weight: 0.7 },   // 正式全名匹配，权重大\r\n            { name: 'short', weight: 0.3 }   // 简称匹配，权重小\r\n          ],\r\n          threshold: 0.6,          // 宽松匹配\r\n          includeScore: true,\r\n          shouldSort: true,\r\n          minMatchCharLength: 1,\r\n          ignoreLocation: true,\r\n          findAllMatches: true,\r\n          distance: 1000,\r\n          location: 0,\r\n          includeMatches: true\r\n        }\r\n      )\r\n\r\n      console.log('学校搜索引擎初始化完成，总数量:', schoolItems.length)\r\n    }\r\n  },\r\n\r\n  getters: {\r\n    filteredSchools(state) {\r\n      if (!state.filterKeyword) {\r\n        return state.schools.slice(0, 50) // 限制初始显示数量（比如前50所）\r\n      }\r\n\r\n      if (!state.schoolFuse) {\r\n        // 防止未初始化\r\n        this.mutations.initFuse(state)\r\n      }\r\n\r\n      const keyword = state.filterKeyword.trim()\r\n\r\n      const results = state.schoolFuse.search(keyword)\r\n\r\n      if (results.length > 0) {\r\n        console.log('搜索关键词:', keyword, '找到结果数:', results.length)\r\n      }\r\n\r\n      return results.map(result => result.item.name)\r\n    },\r\n\r\n    // 获取最佳匹配的学校（用于自动完成）\r\n    bestMatchedSchool(state, getters) {\r\n      if (!state.filterKeyword || !state.schoolFuse) return ''\r\n\r\n      const results = state.schoolFuse.search(state.filterKeyword.trim())\r\n      return results.length > 0 ? results[0].item.name : ''\r\n    }\r\n  },\r\n\r\n  actions: {\r\n    updateFilterKeyword({ commit }, keyword) {\r\n      commit('setFilterKeyword', keyword)\r\n    },\r\n\r\n    initSearch({ commit }) {\r\n      commit('initFuse')\r\n    },\r\n\r\n    autoSelectBestMatch({ state, getters }) {\r\n      return getters.bestMatchedSchool\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @description 为学校名称生成可能的简称组合，用于提高模糊搜索能力\r\n * @param {String} name - 学校完整名称\r\n * @returns {String} - 可能的简称组合（空格分隔）\r\n */\r\nfunction generateShortNames(name) {\r\n  let shortNames = []\r\n\r\n  const chineseChars = name.split('').filter(char => /[\\u4e00-\\u9fa5]/.test(char)).join('')\r\n\r\n  if (chineseChars.length >= 2) {\r\n    shortNames.push(chineseChars.substring(0, 2)) // 前两个字\r\n  }\r\n\r\n  if (chineseChars.length >= 3) {\r\n    shortNames.push(chineseChars.substring(0, 3)) // 前三个字\r\n    const match = chineseChars.match(/^([\\u4e00-\\u9fa5]{2})([\\u4e00-\\u9fa5]{1,3})/)\r\n    if (match) {\r\n      shortNames.push(match[1][0] + match[2]) // 地名+学校关键词，比如\"北理\"\r\n    }\r\n  }\r\n\r\n  if (chineseChars.length >= 4 && (name.includes('大学') || name.includes('学院'))) {\r\n    shortNames.push(chineseChars.substring(2)) // 去掉地名，比如\"理工大学\"\r\n  }\r\n\r\n  return shortNames.join(' ')\r\n}\r\n"],"names":["Fuse","uni"],"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"}