{"version":3,"file":"loading.js","sources":["components/loading-animation/loading.vue","../../../HBuilderX/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/uniComponent:/RTov56CU5biI5b2V5LiO5YW25LuW5Lq65YWx5Lqr5paH5Lu2L3RlYWNoZXJEaXJlY3RvcnkvdnVl5a6e546wTG90dGll5Yqo55S75Luj56CBL2NvbXBvbmVudHMvbG9hZGluZy1hbmltYXRpb24vbG9hZGluZy52dWU"],"sourcesContent":["<template>\r\n\t<view v-show=\"visible\" class=\"loading-overlay\">\r\n\t\t<c-lottie\r\n\t\t\tref=\"lottieRef\"\r\n\t\t\t:src=\"src\"\r\n\t\t\twidth=\"300rpx\"\r\n\t\t\theight=\"300rpx\"\r\n\t\t\t:loop=\"true\"\r\n\t\t\t:autoplay=\"autoplay\"\r\n\t\t\t@ready=\"handleLottieReady\"\r\n\t\t></c-lottie>\r\n\t</view>\r\n</template>\r\n\r\n<script setup lang=\"uts\">\r\nimport { ref, onMounted, onBeforeMount, watch, computed, nextTick } from 'vue'\r\nimport { useLottieReady } from './useLottieReady.js'\r\n\r\nconst props = defineProps({\r\n\tsrc: {\r\n\t\ttype: String,\r\n\t\tdefault: 'https://lottie.host/1f64310d-d1a9-44c9-ac77-3c29ae849559/c3yfKGAzCm.json'\r\n\t},\r\n\t/**\r\n\t * 是否自动播放\r\n\t * @type {Boolean}\r\n\t */\r\n\tautoplay: {\r\n\t\ttype: Boolean,\r\n\t\tdefault: true\r\n\t},\r\n\t/**\r\n\t * 是否预加载\r\n\t * @type {Boolean}\r\n\t */\r\n\tpreload: {\r\n\t\ttype: Boolean,\r\n\t\tdefault: true\r\n\t},\r\n\t/**\r\n\t * 加载超时时间（毫秒）\r\n\t * @type {Number}\r\n\t */\r\n\ttimeout: {\r\n\t\ttype: Number,\r\n\t\tdefault: 5000\r\n\t}\r\n})\r\n\r\n/**\r\n * 定义组件事件\r\n */\r\nconst emit = defineEmits(['mounted', 'ready', 'preloaded', 'timeout', 'error'])\r\n\r\n/**\r\n * 内部可见性状态\r\n * @type {import('vue').Ref<boolean>}\r\n */\r\nconst visible = ref(false)\r\n\r\n/**\r\n * 是否已预加载\r\n * @type {import('vue').Ref<boolean>}\r\n */\r\nconst isPreloaded = ref(false)\r\n\r\n/**\r\n * 组件是否已挂载\r\n * @type {import('vue').Ref<boolean>}\r\n */\r\nconst isMounted = ref(false)\r\n\r\n/**\r\n * Lottie组件引用\r\n * @type {import('vue').Ref<any>}\r\n */\r\nconst lottieRef = ref(null)\r\n\r\n/**\r\n * 使用Lottie准备状态钩子\r\n */\r\nconst { \r\n\tisReady, \r\n\tisLoading, \r\n\tpreloadAnimation, \r\n\tgetFromCache,\r\n\tcacheStats, \r\n\tgetCacheStatus, \r\n\tglobalState,\r\n\tisPending \r\n} = useLottieReady(lottieRef)\r\n\r\n/**\r\n * 当前动画源的加载状态\r\n */\r\nconst currentSrcStatus = computed(() => {\r\n\treturn getCacheStatus(props.src)\r\n})\r\n\r\n/**\r\n * 当前动画是否已加载\r\n */\r\nconst isCurrentSrcLoaded = computed(() => {\r\n\tconst status = currentSrcStatus.value\r\n\treturn status.isCached || status.isLoaded\r\n})\r\n\r\n/**\r\n * 处理Lottie动画就绪事件\r\n */\r\nconst handleLottieReady = () => {\r\n\tisReady.value = true\r\n\temit('ready')\r\n}\r\n\r\n/**\r\n * 显示加载动画\r\n */\r\nconst show = () => {\r\n\tvisible.value = true\r\n\t\r\n\t// 如果已经预加载了，但还在等待加载完成，设置超时\r\n\tif (props.preload && !isCurrentSrcLoaded.value) {\r\n\t\tsetupTimeout()\r\n\t}\r\n}\r\n\r\n/**\r\n * 设置加载超时\r\n */\r\nconst setupTimeout = () => {\r\n\tif (props.timeout <= 0) return\r\n\t\r\n\tsetTimeout(() => {\r\n\t\tif (isLoading.value && visible.value) {\r\n\t\t\tuni.__f__('warn','at components/loading-animation/loading.vue:136',`动画加载超时: ${props.src}`)\r\n\t\t\temit('timeout', props.src)\r\n\t\t}\r\n\t}, props.timeout)\r\n}\r\n\r\n/**\r\n * 隐藏加载动画\r\n */\r\nconst hide = () => {\r\n\tvisible.value = false\r\n}\r\n\r\n/**\r\n * 预加载动画资源\r\n * @returns {Promise<boolean>} 预加载结果\r\n */\r\nconst preload = async () => {\r\n\tif (isPreloaded.value && isCurrentSrcLoaded.value) return true\r\n\t\r\n\t// 首先检查缓存\r\n\tconst cachedData = getFromCache(props.src)\r\n\tif (cachedData) {\r\n\t\tisPreloaded.value = true\r\n\t\tuni.__f__('log','at components/loading-animation/loading.vue:160','从缓存中获取动画资源')\r\n\t\temit('preloaded')\r\n\t\treturn true\r\n\t}\r\n\t\r\n\t// 检查是否已有加载中的相同请求\r\n\tif (isPending(props.src)) {\r\n\t\tuni.__f__('log','at components/loading-animation/loading.vue:167','已有相同动画请求正在处理中，等待完成')\r\n\t}\r\n\t\r\n\ttry {\r\n\t\tawait preloadAnimation(props.src)\r\n\t\tisPreloaded.value = true\r\n\t\tuni.__f__('log','at components/loading-animation/loading.vue:173','动画资源预加载成功')\r\n\t\t\r\n\t\t// 通知父组件预加载完成\r\n\t\temit('preloaded')\r\n\t\t\r\n\t\treturn true\r\n\t} catch (error) {\r\n\t\tuni.__f__('error','at components/loading-animation/loading.vue:180','动画资源预加载失败:', error)\r\n\t\temit('error', { src: props.src, error })\r\n\t\treturn false\r\n\t}\r\n}\r\n\r\n/**\r\n * 获取动画加载统计信息\r\n * @returns {Object} 加载统计信息\r\n */\r\nconst getAnimationStats = () => {\r\n\treturn cacheStats()\r\n}\r\n\r\n/**\r\n * 发送mounted事件到父组件\r\n * 通过一个专门的函数确保一致性\r\n */\r\nconst emitMountedEvent = () => {\r\n\tuni.__f__('log','at components/loading-animation/loading.vue:199','发送LoadingOverlay组件已挂载事件')\r\n\t\r\n\t// 先标记组件已挂载\r\n\tisMounted.value = true\r\n\t\r\n\t// 多次尝试发送mounted事件，确保被捕获\r\n\temit('mounted')\r\n\t\r\n\t// 延迟一帧再次发送\r\n\tnextTick(() => {\r\n\t\temit('mounted')\r\n\t})\r\n\t\r\n\t// 再延迟100ms发送，以防前面的都没捕获到\r\n\tsetTimeout(() => {\r\n\t\temit('mounted')\r\n\t}, 100)\r\n}\r\n\r\n/**\r\n * 组件挂载前预加载资源\r\n */\r\nonBeforeMount(() => {\r\n\tif (props.preload) {\r\n\t\tuni.__f__('log','at components/loading-animation/loading.vue:223','开始预加载动画资源')\r\n\t\tpreload()\r\n\t}\r\n})\r\n\r\n/**\r\n * 组件挂载时确保Lottie组件正确初始化，并发射mounted事件\r\n */\r\nonMounted(() => {\r\n\tuni.__f__('log','at components/loading-animation/loading.vue:232','加载动画组件已挂载')\r\n\t\r\n\t// 发送mounted事件\r\n\temitMountedEvent()\r\n\t\r\n\t// 确保挂载后加载资源\r\n\tif (props.preload && !isPreloaded.value) {\r\n\t\tpreload().then(success => {\r\n\t\t\tif (success) {\r\n\t\t\t\temit('ready')\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\t\r\n\t// 监控ready状态\r\n\twatch(isReady, (newVal) => {\r\n\t\tif (newVal === true) {\r\n\t\t\temit('ready')\r\n\t\t}\r\n\t}, { immediate: true })\r\n\t\r\n\t// 通过全局对象直接注册\r\n\ttry {\r\n\t\tconst app = getApp();\r\n\t\tif (app?.globalData) {\r\n\t\t\t// 如果$loading已存在，更新其componentMounted状态\r\n\t\t\tif (app.globalData.$loading) {\r\n\t\t\t\tapp.globalData.$loading.componentMounted = true;\r\n\t\t\t\tuni.__f__('log','at components/loading-animation/loading.vue:260','已直接更新$loading.componentMounted状态');\r\n\t\t\t}\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tuni.__f__('error','at components/loading-animation/loading.vue:264','直接更新组件挂载状态失败:', e);\r\n\t}\r\n})\r\n\r\n/**\r\n * 监听src变化，当动画源变化时重新预加载\r\n */\r\nwatch(() => props.src, (newSrc, oldSrc) => {\r\n\tif (newSrc && newSrc !== oldSrc) {\r\n\t\tuni.__f__('log','at components/loading-animation/loading.vue:273',`动画源变化: ${oldSrc} -> ${newSrc}`)\r\n\t\tisPreloaded.value = false\r\n\t\t\r\n\t\tif (props.preload) {\r\n\t\t\tpreload()\r\n\t\t}\r\n\t}\r\n})\r\n\r\n/**\r\n * 清除特定动画缓存\r\n * @param {string} [animationSrc] - 要清除的动画源URL，不传则清除当前动画\r\n */\r\nconst clearAnimationCache = (animationSrc) => {\r\n\tconst src = animationSrc || props.src\r\n\tpreloadAnimation.clearCache(src)\r\n\tuni.__f__('log','at components/loading-animation/loading.vue:289',`已清除动画缓存: ${src}`)\r\n}\r\n\r\n// 暴露方法给父组件\r\ndefineExpose({\r\n\tshow,\r\n\thide,\r\n\tpreload,\r\n\tisReady,\r\n\tisLoading,\r\n\tisPreloaded,\r\n\tisMounted,\r\n\tgetAnimationStats,\r\n\tcurrentSrcStatus,\r\n\tglobalState,\r\n\tclearAnimationCache\r\n})\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.loading-overlay {\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100vw;\r\n\theight: 100vh;\r\n\tbackground-color: rgba(0, 0, 0, 0.6);\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tz-index: 999;\r\n}\r\n</style>\r\n","import Component from 'E:/研师录与其他人共享文件/teacherDirectory/vue实现Lottie动画代码/components/loading-animation/loading.vue'\nwx.createComponent(Component)"],"names":["ref","useLottieReady","computed","uni","__awaiter","nextTick","onBeforeMount","onMounted","watch"],"mappings":"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"}