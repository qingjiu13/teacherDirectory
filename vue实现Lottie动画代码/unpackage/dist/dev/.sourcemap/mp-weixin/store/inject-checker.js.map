{"version":3,"file":"inject-checker.js","sources":["store/inject-checker.js"],"sourcesContent":["/**\r\n * 用于确保Vuex store被正确注入到Vue实例\r\n * 仅支持Vue 3\r\n */\r\nimport { getCurrentInstance, inject } from 'vue'\r\n\r\n/**\r\n * 检查store是否可用的方法\r\n * @param {Object} store - Vuex store实例\r\n * @returns {boolean} 返回store是否可用\r\n */\r\nexport const checkStoreAvailability = (store) => {\r\n  if (!store) {\r\n    console.error('store参数未提供');\r\n    return false;\r\n  }\r\n  \r\n  // 检查user模块是否注册\r\n  try {\r\n    const userState = store.state.user;\r\n    if (!userState) {\r\n      console.error('user模块不存在');\r\n      return false;\r\n    }\r\n    \r\n    // 检查baseInfo子模块\r\n    if (!userState.baseInfo) {\r\n      console.error('user/baseInfo模块不存在');\r\n      return false;\r\n    }\r\n    \r\n    console.log('Vuex store正常可用');\r\n    return true;\r\n  } catch (error) {\r\n    console.error('检查Vuex模块时出错:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * 为组件注入$store安全访问方法的混入 (Vue 3版本)\r\n */\r\nexport const injectStoreSafety = {\r\n  beforeCreate() {\r\n    // 创建安全访问对象\r\n    this.$safeStore = createSafeStoreAccess();\r\n  }\r\n};\r\n\r\n/**\r\n * 创建安全访问store的方法\r\n * 仅支持Vue 3\r\n * @returns {Object} 安全访问方法对象\r\n */\r\nfunction createSafeStoreAccess() {\r\n  return {\r\n    // 安全获取state\r\n    state: (path) => {\r\n      try {\r\n        // 获取store (Vue 3方式)\r\n        const store = getStoreFromComponent();\r\n        if (!store) return null;\r\n        \r\n        const parts = path.split('.');\r\n        let current = store.state;\r\n        \r\n        for (const part of parts) {\r\n          if (!current || typeof current !== 'object') return null;\r\n          current = current[part];\r\n        }\r\n        \r\n        return current;\r\n      } catch (error) {\r\n        console.error(`安全获取state路径 ${path} 时出错:`, error);\r\n        return null;\r\n      }\r\n    },\r\n    \r\n    // 安全调用getter\r\n    getter: (name) => {\r\n      try {\r\n        const store = getStoreFromComponent();\r\n        return store && store.getters[name];\r\n      } catch (error) {\r\n        console.error(`安全获取getter ${name} 时出错:`, error);\r\n        return null;\r\n      }\r\n    },\r\n    \r\n    // 安全dispatch\r\n    dispatch: (type, payload) => {\r\n      try {\r\n        const store = getStoreFromComponent();\r\n        if (!store) {\r\n          console.warn(`store不可用，dispatch ${type} 被跳过`);\r\n          return Promise.resolve(null);\r\n        }\r\n        return store.dispatch(type, payload);\r\n      } catch (error) {\r\n        console.error(`安全调用dispatch ${type} 时出错:`, error);\r\n        return Promise.reject(error);\r\n      }\r\n    },\r\n    \r\n    // 安全commit\r\n    commit: (type, payload) => {\r\n      try {\r\n        const store = getStoreFromComponent();\r\n        if (!store) {\r\n          console.warn(`store不可用，commit ${type} 被跳过`);\r\n          return;\r\n        }\r\n        store.commit(type, payload);\r\n      } catch (error) {\r\n        console.error(`安全调用commit ${type} 时出错:`, error);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * 从组件实例获取store\r\n * 仅支持Vue 3\r\n * @returns {Object|null} Vuex store或null\r\n */\r\nfunction getStoreFromComponent() {\r\n  // Vue 3方式 - 使用getCurrentInstance或inject\r\n  const instance = getCurrentInstance();\r\n  \r\n  // 尝试从当前实例获取\r\n  if (instance && instance.proxy && instance.proxy.$store) {\r\n    return instance.proxy.$store;\r\n  }\r\n  \r\n  // 尝试使用inject获取\r\n  try {\r\n    const storeFromInject = inject('store', null);\r\n    if (storeFromInject) {\r\n      return storeFromInject;\r\n    }\r\n  } catch (e) {\r\n    // inject可能不在setup上下文中被调用\r\n    console.debug('注入store失败:', e);\r\n  }\r\n  \r\n  // 尝试从app实例中获取\r\n  try {\r\n    const app = getApp();\r\n    if (app && app.$vm && app.$vm.$store) {\r\n      return app.$vm.$store;\r\n    }\r\n  } catch (e) {\r\n    console.warn('无法从app获取store:', e);\r\n  }\r\n  \r\n  // 尝试从uni全局对象获取\r\n  if (typeof uni !== 'undefined' && uni.$store) {\r\n    return uni.$store;\r\n  }\r\n  \r\n  // 所有方法都失败\r\n  console.warn('无法获取store实例');\r\n  return null;\r\n} "],"names":["checkStoreAvailability","store","uni","userState","error","injectStoreSafety","createSafeStoreAccess","path","getStoreFromComponent","parts","current","part","name","type","payload","instance","getCurrentInstance","storeFromInject","inject","app"],"mappings":"oDAWaA,EAA0BC,GAAU,CAC/C,GAAI,CAACA,EACHC,OAAAA,EAAAA,oDAAc,YAAY,EACnB,GAIT,GAAI,CACF,MAAMC,EAAYF,EAAM,MAAM,KAC9B,OAAKE,EAMAA,EAAU,UAKfD,EAAAA,MAAA,MAAA,MAAA,gCAAY,gBAAgB,EACrB,KALLA,EAAAA,MAAA,MAAA,QAAA,gCAAc,oBAAoB,EAC3B,KAPPA,EAAAA,MAAA,MAAA,QAAA,gCAAc,WAAW,EAClB,GAWV,OAAQE,EAAO,CACdF,OAAAA,EAAc,MAAA,MAAA,QAAA,gCAAA,eAAgBE,CAAK,EAC5B,EACR,CACH,EAKaC,EAAoB,CAC/B,cAAe,CAEb,KAAK,WAAaC,GACnB,CACH,EAOA,SAASA,GAAwB,CAC/B,MAAO,CAEL,MAAQC,GAAS,CACf,GAAI,CAEF,MAAMN,EAAQO,IACd,GAAI,CAACP,EAAO,OAAO,KAEnB,MAAMQ,EAAQF,EAAK,MAAM,GAAG,EAC5B,IAAIG,EAAUT,EAAM,MAEpB,UAAWU,KAAQF,EAAO,CACxB,GAAI,CAACC,GAAW,OAAOA,GAAY,SAAU,OAAO,KACpDA,EAAUA,EAAQC,CAAI,CACvB,CAED,OAAOD,CACR,OAAQN,EAAO,CACdF,OAAAA,QAAc,MAAA,QAAA,gCAAA,eAAeK,CAAI,QAASH,CAAK,EACxC,IACR,CACF,EAGD,OAASQ,GAAS,CAChB,GAAI,CACF,MAAMX,EAAQO,IACd,OAAOP,GAASA,EAAM,QAAQW,CAAI,CACnC,OAAQR,EAAO,CACdF,OAAAA,QAAc,MAAA,QAAA,gCAAA,cAAcU,CAAI,QAASR,CAAK,EACvC,IACR,CACF,EAGD,SAAU,CAACS,EAAMC,IAAY,CAC3B,GAAI,CACF,MAAMb,EAAQO,IACd,OAAKP,EAIEA,EAAM,SAASY,EAAMC,CAAO,GAHjCZ,qDAAa,qBAAqBW,CAAI,MAAM,EACrC,QAAQ,QAAQ,IAAI,EAG9B,OAAQT,EAAO,CACdF,OAAAA,uDAAc,gBAAgBW,CAAI,QAAST,CAAK,EACzC,QAAQ,OAAOA,CAAK,CAC5B,CACF,EAGD,OAAQ,CAACS,EAAMC,IAAY,CACzB,GAAI,CACF,MAAMb,EAAQO,IACd,GAAI,CAACP,EAAO,CACVC,QAAa,MAAA,OAAA,iCAAA,mBAAmBW,CAAI,MAAM,EAC1C,MACD,CACDZ,EAAM,OAAOY,EAAMC,CAAO,CAC3B,OAAQV,EAAO,CACdF,QAAc,MAAA,QAAA,iCAAA,cAAcW,CAAI,QAAST,CAAK,CAC/C,CACF,CACL,CACA,CAOA,SAASI,GAAwB,CAE/B,MAAMO,EAAWC,EAAAA,qBAGjB,GAAID,GAAYA,EAAS,OAASA,EAAS,MAAM,OAC/C,OAAOA,EAAS,MAAM,OAIxB,GAAI,CACF,MAAME,EAAkBC,EAAAA,OAAO,QAAS,IAAI,EAC5C,GAAID,EACF,OAAOA,CAEV,OAAQ,EAAG,CAEVf,EAAA,MAAA,MAAA,QAAA,iCAAc,aAAc,CAAC,CAC9B,CAGD,GAAI,CACF,MAAMiB,EAAM,SACZ,GAAIA,GAAOA,EAAI,KAAOA,EAAI,IAAI,OAC5B,OAAOA,EAAI,IAAI,MAElB,OAAQ,EAAG,CACVjB,EAAa,MAAA,MAAA,OAAA,iCAAA,iBAAkB,CAAC,CACjC,CAGD,OAAI,OAAOA,EAAG,MAAK,KAAeA,EAAAA,MAAI,OAC7BA,EAAAA,MAAI,QAIbA,EAAAA,MAAa,MAAA,OAAA,iCAAA,aAAa,EACnB,KACT"}