{"version":3,"file":"getters.js","sources":["store/user/ai-chat/getters.js"],"sourcesContent":["/**\n * ai-chat模块的getters\n * @module store/user/ai-chat/getters\n */\n\nexport default {\n    /**\n     * 获取历史会话摘要列表\n     * @param {Object} state - 状态对象\n     * @returns {Array<Object>} 历史会话摘要列表\n     */\n    historySummaries(state) {\n        return state.aiChat.conversations.map(conversation => ({\n            id: conversation.id,\n            abstract: conversation.abstract,\n            chatMode: conversation.chatMode,\n            createdAt: conversation.createdAt,\n            updatedAt: conversation.updatedAt\n        }));\n    },\n    \n    /**\n     * 获取完整的历史会话列表\n     * @param {Object} state - 状态对象\n     * @returns {Array<Object>} 完整的历史会话列表\n     */\n    historyChats(state) {\n        return state.aiChat.conversations;\n    },\n    \n    /**\n     * 获取当前活跃对话ID\n     * @param {Object} state - 状态对象\n     * @returns {string|null} 当前活跃对话ID\n     */\n    currentChatId(state) {\n        return state.aiChat.activeConversation;\n    },\n    \n    /**\n     * 获取当前活跃对话内容\n     * @param {Object} state - 状态对象\n     * @returns {Object|null} 当前活跃对话内容\n     */\n    currentChat(state) {\n        if (!state.aiChat.activeConversation) return null;\n        \n        return state.aiChat.conversations.find(\n            conv => conv.id === state.aiChat.activeConversation\n        ) || null;\n    },\n    \n    /**\n     * 获取当前对话的消息列表\n     * @param {Object} state - 状态对象\n     * @returns {Array<Object>} 当前对话的消息列表\n     */\n    currentMessages(state) {\n        if (!state.aiChat.activeConversation) return [];\n        \n        const currentConversation = state.aiChat.conversations.find(\n            conv => conv.id === state.aiChat.activeConversation\n        );\n        \n        return currentConversation?.messages || [];\n    },\n    \n    /**\n     * 获取当前聊天模式\n     * @param {Object} state - 状态对象\n     * @returns {string} 当前聊天模式\n     */\n    currentChatMode(state) {\n        return state.aiChat.chatMode;\n    },\n\n    /**\n     * 获取分页信息\n     * @param {Object} state - 状态对象\n     * @returns {Object} 分页信息\n     */\n    pagination(state) {\n        return state.aiChat.pagination;\n    },\n\n    /**\n     * 获取当前页码\n     * @param {Object} state - 状态对象\n     * @returns {number} 当前页码\n     */\n    currentPage(state) {\n        return state.aiChat.pagination.pageNum;\n    },\n\n    /**\n     * 获取每页大小\n     * @param {Object} state - 状态对象\n     * @returns {number} 每页大小\n     */\n    pageSize(state) {\n        return state.aiChat.pagination.pageSize;\n    },\n\n    /**\n     * 获取总记录数\n     * @param {Object} state - 状态对象\n     * @returns {number} 总记录数\n     */\n    totalRecords(state) {\n        return state.aiChat.pagination.total;\n    },\n\n    /**\n     * 获取总页数\n     * @param {Object} state - 状态对象\n     * @returns {number} 总页数\n     */\n    totalPages(state) {\n        return state.aiChat.pagination.totalPages;\n    },\n\n    /**\n     * 是否有下一页\n     * @param {Object} state - 状态对象\n     * @returns {boolean} 是否有下一页\n     */\n    hasNextPage(state) {\n        return state.aiChat.pagination.hasNext;\n    },\n\n    /**\n     * 是否有上一页\n     * @param {Object} state - 状态对象\n     * @returns {boolean} 是否有上一页\n     */\n    hasPrevPage(state) {\n        return state.aiChat.pagination.hasPrev;\n    },\n\n    /**\n     * 是否正在加载分页数据\n     * @param {Object} state - 状态对象\n     * @returns {boolean} 是否正在加载\n     */\n    isPaginationLoading(state) {\n        return state.aiChat.pagination.loading;\n    },\n\n    /**\n     * 获取分页显示信息\n     * @param {Object} state - 状态对象\n     * @returns {string} 分页显示信息，如 \"第 1 页，共 10 页\"\n     */\n    paginationInfo(state) {\n        const { pageNum, totalPages, total } = state.aiChat.pagination;\n        return `第 ${pageNum} 页，共 ${totalPages} 页（总计 ${total} 条记录）`;\n    }\n}; "],"names":["getters","state","conversation","conv","currentConversation","pageNum","totalPages","total"],"mappings":"aAKA,MAAeA,EAAA,CAMX,iBAAiBC,EAAO,CACpB,OAAOA,EAAM,OAAO,cAAc,IAAIC,IAAiB,CACnD,GAAIA,EAAa,GACjB,SAAUA,EAAa,SACvB,SAAUA,EAAa,SACvB,UAAWA,EAAa,UACxB,UAAWA,EAAa,SAC3B,EAAC,CACL,EAOD,aAAaD,EAAO,CAChB,OAAOA,EAAM,OAAO,aACvB,EAOD,cAAcA,EAAO,CACjB,OAAOA,EAAM,OAAO,kBACvB,EAOD,YAAYA,EAAO,CACf,OAAKA,EAAM,OAAO,oBAEXA,EAAM,OAAO,cAAc,KAC9BE,GAAQA,EAAK,KAAOF,EAAM,OAAO,kBACpC,GAAI,IACR,EAOD,gBAAgBA,EAAO,CACnB,GAAI,CAACA,EAAM,OAAO,mBAAoB,MAAO,CAAA,EAE7C,MAAMG,EAAsBH,EAAM,OAAO,cAAc,KACnDE,GAAQA,EAAK,KAAOF,EAAM,OAAO,kBAC7C,EAEQ,OAAOG,GAAA,YAAAA,EAAqB,WAAY,EAC3C,EAOD,gBAAgBH,EAAO,CACnB,OAAOA,EAAM,OAAO,QACvB,EAOD,WAAWA,EAAO,CACd,OAAOA,EAAM,OAAO,UACvB,EAOD,YAAYA,EAAO,CACf,OAAOA,EAAM,OAAO,WAAW,OAClC,EAOD,SAASA,EAAO,CACZ,OAAOA,EAAM,OAAO,WAAW,QAClC,EAOD,aAAaA,EAAO,CAChB,OAAOA,EAAM,OAAO,WAAW,KAClC,EAOD,WAAWA,EAAO,CACd,OAAOA,EAAM,OAAO,WAAW,UAClC,EAOD,YAAYA,EAAO,CACf,OAAOA,EAAM,OAAO,WAAW,OAClC,EAOD,YAAYA,EAAO,CACf,OAAOA,EAAM,OAAO,WAAW,OAClC,EAOD,oBAAoBA,EAAO,CACvB,OAAOA,EAAM,OAAO,WAAW,OAClC,EAOD,eAAeA,EAAO,CAClB,KAAM,CAAE,QAAAI,EAAS,WAAAC,EAAY,MAAAC,CAAO,EAAGN,EAAM,OAAO,WACpD,MAAO,KAAKI,CAAO,QAAQC,CAAU,SAASC,CAAK,OACtD,CACL"}