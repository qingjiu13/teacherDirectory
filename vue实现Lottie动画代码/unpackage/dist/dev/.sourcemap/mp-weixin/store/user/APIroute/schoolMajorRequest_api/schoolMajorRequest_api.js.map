{"version":3,"file":"schoolMajorRequest_api.js","sources":["store/user/APIroute/schoolMajorRequest_api/schoolMajorRequest_api.js"],"sourcesContent":["/**\r\n * 学校专业请求模块的API接口\r\n * @module store/user/APIroute/schoolMajorRequest_api\r\n */\r\n\r\nimport { apiRequest } from '../../JWT.js';\r\nimport { useGlobalStore } from '@/store/global.js';\r\n\r\n/**\r\n * 获取API前缀\r\n * @returns {string} API基础URL\r\n */\r\nconst getApiPrefix = () => {\r\n  const globalStore = useGlobalStore()\r\n  return globalStore.apiBaseUrl\r\n}\r\n\r\n// ========== 本科生学校相关API ==========\r\n\r\n/**\r\n * 获取本科生学校列表\r\n * @param {Object} params - 请求参数\r\n * @param {string} [params.keyword] - 搜索关键词\r\n * @param {number} [params.pageNum=1] - 当前页码\r\n * @param {number} [params.pageSize=20] - 每页数量\r\n * @returns {Promise} 返回本科生学校列表结果\r\n */\r\nexport const getUndergraduateSchoolList = (params = {}) => {\r\n  const requestParams = {\r\n    pageNum: params.pageNum || 1,\r\n    pageSize: params.pageSize || 20,\r\n    schoolType: 2 // 本科生学校类型\r\n  };\r\n  \r\n  // 如果有搜索关键词，添加到参数中\r\n  if (params.keyword && params.keyword.trim()) {\r\n    requestParams.keyword = params.keyword.trim();\r\n  }\r\n  \r\n  return apiRequest(`${getApiPrefix()}/school/list`, 'POST', requestParams, {\r\n    requireAuth: false // 根据实际情况决定是否需要认证\r\n  }).then(response => {\r\n    // 处理API返回的数据格式\r\n    if (response && response.data.code === 200) {\r\n      return {\r\n        success: true,\r\n        data: {\r\n          total: response.data.total,\r\n          rows: response.data.rows || []\r\n        }\r\n      };\r\n    } else {\r\n      throw new Error(response?.msg || '获取本科生学校列表失败');\r\n    }\r\n  });\r\n};\r\n\r\n// ========== 本科生专业相关API ==========\r\n\r\n/**\r\n * 获取本科生专业列表（不依赖学校ID）\r\n * @param {Object} params - 请求参数\r\n * @param {string} [params.keyword] - 搜索关键词\r\n * @param {number} [params.pageNum=1] - 当前页码\r\n * @param {number} [params.pageSize=20] - 每页数量\r\n * @returns {Promise} 返回本科生专业列表结果\r\n */\r\nexport const getUndergraduateMajorList = (params = {}) => {\r\n  const requestParams = {\r\n    pageNum: params.pageNum || 1,\r\n    pageSize: params.pageSize || 20\r\n  };\r\n  \r\n  // 如果有搜索关键词，添加到参数中\r\n  if (params.keyword && params.keyword.trim()) {\r\n    requestParams.keyword = params.keyword.trim();\r\n  }\r\n  \r\n  return apiRequest(`${getApiPrefix()}/undergraduateProfessional/list`, 'POST', requestParams, {\r\n    requireAuth: false\r\n  }).then(response => {\r\n    // 处理API返回的数据格式\r\n    if (response && response.data.code === 200) {\r\n      return {\r\n        success: true,\r\n        data: {\r\n          total: response.data.total,\r\n          rows: response.data.rows || []\r\n        }\r\n      };\r\n    } else {\r\n      throw new Error(response?.msg || '获取本科生专业列表失败');\r\n    }\r\n  });\r\n};\r\n\r\n// ========== 研究生学校相关API ==========\r\n\r\n/**\r\n * 获取研究生学校列表\r\n * @param {Object} params - 请求参数\r\n * @param {string} [params.keyword] - 搜索关键词\r\n * @param {number} [params.pageNum=1] - 当前页码\r\n * @param {number} [params.pageSize=20] - 每页数量\r\n * @returns {Promise} 返回研究生学校列表结果\r\n */\r\nexport const getGraduateSchoolList = (params = {}) => {\r\n  const requestParams = {\r\n    pageNum: params.pageNum || 1,\r\n    pageSize: params.pageSize || 20,\r\n    schoolType: 1 // 研究生学校类型\r\n  };\r\n  \r\n  // 如果有搜索关键词，添加到参数中\r\n  if (params.keyword && params.keyword.trim()) {\r\n    requestParams.keyword = params.keyword.trim();\r\n  }\r\n  \r\n  return apiRequest(`${getApiPrefix()}/school/list`, 'POST', requestParams, {\r\n    requireAuth: false // 根据实际情况决定是否需要认证\r\n  }).then(response => {\r\n    // 处理API返回的数据格式\r\n    if (response && response.data.code === 200) {\r\n      return {\r\n        success: true,\r\n        data: {\r\n          total: response.data.total,\r\n          rows: response.data.rows || []\r\n        }\r\n      };\r\n    } else {\r\n      throw new Error(response?.msg || '获取研究生学校列表失败');\r\n    }\r\n  });\r\n};\r\n\r\n// ========== 研究生专业相关API ==========\r\n\r\n/**\r\n * 根据学校ID获取研究生专业列表\r\n * @param {Object} params - 请求参数\r\n * @param {number} params.schoolId - 学校ID\r\n * @param {string} [params.keyword] - 搜索关键词\r\n * @param {number} [params.pageNum=1] - 当前页码\r\n * @param {number} [params.pageSize=20] - 每页数量\r\n * @returns {Promise} 返回研究生专业列表结果\r\n */\r\nexport const getGraduateMajorList = (params) => {\r\n  if (!params.schoolId) {\r\n    return Promise.reject(new Error('schoolId 参数不能为空'));\r\n  }\r\n  \r\n  const requestParams = {\r\n    schoolId: params.schoolId,\r\n    pageNum: params.pageNum || 1,\r\n    pageSize: params.pageSize || 20\r\n  };\r\n  \r\n  // 如果有搜索关键词，添加到参数中\r\n  if (params.keyword && params.keyword.trim()) {\r\n    requestParams.keyword = params.keyword.trim();\r\n  }\r\n  \r\n  return apiRequest(`${getApiPrefix()}/professional/list`, 'POST', requestParams, {\r\n    requireAuth: false // 根据实际情况决定是否需要认证\r\n  }).then(response => {\r\n    // 处理API返回的数据格式\r\n    if (response && response.data.code === 200) {\r\n      return {\r\n        success: true,\r\n        data: {\r\n          total: response.data.total,\r\n          rows: response.data.rows || []\r\n        }\r\n      };\r\n    } else {\r\n      throw new Error(response?.msg || '获取研究生专业列表失败');\r\n    }\r\n  });\r\n};\r\n\r\n"],"names":["getApiPrefix","useGlobalStore","getUndergraduateSchoolList","params","requestParams","apiRequest","response","getUndergraduateMajorList","getGraduateSchoolList","getGraduateMajorList"],"mappings":"6EAYMA,EAAe,IACCC,EAAAA,eAAgB,EACjB,WAaRC,EAA6B,CAACC,EAAS,KAAO,CACzD,MAAMC,EAAgB,CACpB,QAASD,EAAO,SAAW,EAC3B,SAAUA,EAAO,UAAY,GAC7B,WAAY,CAChB,EAGE,OAAIA,EAAO,SAAWA,EAAO,QAAQ,KAAI,IACvCC,EAAc,QAAUD,EAAO,QAAQ,KAAI,GAGtCE,EAAAA,WAAW,GAAGL,EAAY,CAAE,eAAgB,OAAQI,EAAe,CACxE,YAAa,EACjB,CAAG,EAAE,KAAKE,GAAY,CAElB,GAAIA,GAAYA,EAAS,KAAK,OAAS,IACrC,MAAO,CACL,QAAS,GACT,KAAM,CACJ,MAAOA,EAAS,KAAK,MACrB,KAAMA,EAAS,KAAK,MAAQ,CAAE,CAC/B,CACT,EAEM,MAAM,IAAI,OAAMA,GAAA,YAAAA,EAAU,MAAO,aAAa,CAEpD,CAAG,CACH,EAYaC,EAA4B,CAACJ,EAAS,KAAO,CACxD,MAAMC,EAAgB,CACpB,QAASD,EAAO,SAAW,EAC3B,SAAUA,EAAO,UAAY,EACjC,EAGE,OAAIA,EAAO,SAAWA,EAAO,QAAQ,KAAI,IACvCC,EAAc,QAAUD,EAAO,QAAQ,KAAI,GAGtCE,EAAAA,WAAW,GAAGL,EAAY,CAAE,kCAAmC,OAAQI,EAAe,CAC3F,YAAa,EACjB,CAAG,EAAE,KAAKE,GAAY,CAElB,GAAIA,GAAYA,EAAS,KAAK,OAAS,IACrC,MAAO,CACL,QAAS,GACT,KAAM,CACJ,MAAOA,EAAS,KAAK,MACrB,KAAMA,EAAS,KAAK,MAAQ,CAAE,CAC/B,CACT,EAEM,MAAM,IAAI,OAAMA,GAAA,YAAAA,EAAU,MAAO,aAAa,CAEpD,CAAG,CACH,EAYaE,EAAwB,CAACL,EAAS,KAAO,CACpD,MAAMC,EAAgB,CACpB,QAASD,EAAO,SAAW,EAC3B,SAAUA,EAAO,UAAY,GAC7B,WAAY,CAChB,EAGE,OAAIA,EAAO,SAAWA,EAAO,QAAQ,KAAI,IACvCC,EAAc,QAAUD,EAAO,QAAQ,KAAI,GAGtCE,EAAAA,WAAW,GAAGL,EAAY,CAAE,eAAgB,OAAQI,EAAe,CACxE,YAAa,EACjB,CAAG,EAAE,KAAKE,GAAY,CAElB,GAAIA,GAAYA,EAAS,KAAK,OAAS,IACrC,MAAO,CACL,QAAS,GACT,KAAM,CACJ,MAAOA,EAAS,KAAK,MACrB,KAAMA,EAAS,KAAK,MAAQ,CAAE,CAC/B,CACT,EAEM,MAAM,IAAI,OAAMA,GAAA,YAAAA,EAAU,MAAO,aAAa,CAEpD,CAAG,CACH,EAaaG,EAAwBN,GAAW,CAC9C,GAAI,CAACA,EAAO,SACV,OAAO,QAAQ,OAAO,IAAI,MAAM,iBAAiB,CAAC,EAGpD,MAAMC,EAAgB,CACpB,SAAUD,EAAO,SACjB,QAASA,EAAO,SAAW,EAC3B,SAAUA,EAAO,UAAY,EACjC,EAGE,OAAIA,EAAO,SAAWA,EAAO,QAAQ,KAAI,IACvCC,EAAc,QAAUD,EAAO,QAAQ,KAAI,GAGtCE,EAAAA,WAAW,GAAGL,EAAY,CAAE,qBAAsB,OAAQI,EAAe,CAC9E,YAAa,EACjB,CAAG,EAAE,KAAKE,GAAY,CAElB,GAAIA,GAAYA,EAAS,KAAK,OAAS,IACrC,MAAO,CACL,QAAS,GACT,KAAM,CACJ,MAAOA,EAAS,KAAK,MACrB,KAAMA,EAAS,KAAK,MAAQ,CAAE,CAC/B,CACT,EAEM,MAAM,IAAI,OAAMA,GAAA,YAAAA,EAAU,MAAO,aAAa,CAEpD,CAAG,CACH"}