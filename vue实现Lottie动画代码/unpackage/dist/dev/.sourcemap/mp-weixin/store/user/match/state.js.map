{"version":3,"file":"state.js","sources":["store/user/match/state.js"],"sourcesContent":["/**\r\n * match模块的状态\r\n * @module store/user/match/state\r\n */\r\n\r\n/**\r\n * 服务类型定义\r\n * @typedef {Object} ServiceType\r\n * @property {string} typename - 服务类型名称\r\n * @property {number} [coursenum] - 课程节数（仅课程类型）\r\n * @property {Object} [fulllength] - 课程总时长（仅课程类型）\r\n * @property {string} fulllength.hours - 小时数\r\n * @property {string} fulllength.minutes - 分钟数\r\n * @property {number} [studentnum] - 课程学生人数（仅一对多课程类型）\r\n */\r\n\r\n/**\r\n * 服务信息定义\r\n * @typedef {Object} ServiceInfo\r\n * @property {string} id - 服务ID\r\n * @property {string} name - 服务名称\r\n * @property {ServiceType} type - 服务类型\r\n * @property {string} price - 服务价格\r\n * @property {string} description - 服务描述\r\n * @property {string[]} images - 服务图片数组\r\n */\r\n\r\n/**\r\n * 根据服务类型名称获取对应的类型配置\r\n * @param {string} typename - 服务类型名称\r\n * @returns {ServiceType} 服务类型配置对象\r\n */\r\nconst getServiceTypeByName = (typename) => {\r\n    const baseType = { typename };\r\n    \r\n    switch(typename) {\r\n        case '一对一课程':\r\n            return {\r\n                ...baseType,\r\n                courseNum: 12,\r\n                hours: '120小时',\r\n                minutes: '30分钟'\r\n                \r\n            };\r\n        case '一对多课程':\r\n            return {\r\n                ...baseType,\r\n                courseNum: 12,\r\n                hours: '120小时',\r\n                minutes: '30分钟',\r\n                studentNum: 4\r\n            };\r\n        case '学习资料':\r\n            return baseType;\r\n        default:\r\n            return baseType;\r\n    }\r\n};\r\n\r\nexport default {\r\n    /**\r\n     * 搜索关键词 - 用于老师匹配搜索\r\n     * @type {string}\r\n     * @description 存储用户在搜索框中输入的关键词，用于过滤匹配的老师列表\r\n     */\r\n    searchKey: \"\",\r\n    \r\n    // 非专业课列表筛选（不需要分页）\r\n    nonProfessionalList: {\r\n        math: {\r\n            selected: '', // 选中的数学类型\r\n            selectedId: null // 选中的数学类型ID\r\n        },\r\n        english: {\r\n            selected: '', // 选中的英语类型\r\n            selectedId: null // 选中的英语类型ID\r\n        },\r\n        politics: {\r\n            selected: '', // 选中的政治类型\r\n            selectedId: null // 选中的政治类型ID\r\n        },\r\n        other: {\r\n            selected: '', // 选中的其他类型\r\n            selectedId: null // 选中的其他类型ID\r\n        }\r\n    },\r\n    \r\n    // 排序方式筛选（不需要分页）\r\n    sortMode: {\r\n        selected: '', // 选中的排序方式\r\n        selectedId: null, // 选中的排序方式ID\r\n        options: [] // 排序选项列表 [{id, name}]\r\n    },\r\n    \r\n    // 匹配列表\r\n    matchList: [],\r\n    currentPage: 1,\r\n    pageSize: 10,\r\n    hasMore: false, // 是否还有更多数据可加载\r\n    isLoading: false\r\n};"],"names":["state"],"mappings":"aA2DA,MAAeA,EAAA,CAMX,UAAW,GAGX,oBAAqB,CACjB,KAAM,CACF,SAAU,GACV,WAAY,IACf,EACD,QAAS,CACL,SAAU,GACV,WAAY,IACf,EACD,SAAU,CACN,SAAU,GACV,WAAY,IACf,EACD,MAAO,CACH,SAAU,GACV,WAAY,IACf,CACJ,EAGD,SAAU,CACN,SAAU,GACV,WAAY,KACZ,QAAS,CAAE,CACd,EAGD,UAAW,CAAE,EACb,YAAa,EACb,SAAU,GACV,QAAS,GACT,UAAW,EACf"}