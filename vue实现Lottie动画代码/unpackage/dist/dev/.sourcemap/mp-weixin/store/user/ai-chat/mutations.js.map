{"version":3,"file":"mutations.js","sources":["store/user/ai-chat/mutations.js"],"sourcesContent":["/**\r\n * ai-chat模块的mutations\r\n * @module store/user/ai-chat/mutations\r\n */\r\n\r\nexport default {\r\n    /**\r\n     * 更新对话列表（仅包含摘要、ID和聊天模式）\r\n     * @param {Object} state - Vuex状态对象\r\n     * @param {Array<Object>} conversationsList - 对话列表数据\r\n     * @param {string} conversationsList[].id - 对话ID\r\n     * @param {string} conversationsList[].abstract - 对话摘要\r\n     * @param {string} conversationsList[].chatMode - 对话模式\r\n     */\r\n    UPDATE_CONVERSATIONS_LIST(state, conversationsList) {\r\n        if (Array.isArray(conversationsList)) {\r\n            // 只保留需要的字段\r\n            const simplifiedList = conversationsList.map(conversation => ({\r\n                id: conversation.id,\r\n                abstract: conversation.abstract,\r\n                chatMode: conversation.chatMode,\r\n                createdAt: conversation.createdAt,\r\n                updatedAt: conversation.updatedAt\r\n            }));\r\n            \r\n            state.aiChat.conversations = simplifiedList;\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * 设置历史会话摘要列表\r\n     * @param {Object} state - Vuex状态对象\r\n     * @param {Array<Object>} summaries - 历史会话摘要列表\r\n     */\r\n    SET_HISTORY_SUMMARIES(state, summaries) {\r\n        if (!state.aiChat.historySummaries) {\r\n            state.aiChat.historySummaries = [];\r\n        }\r\n        \r\n        if (Array.isArray(summaries)) {\r\n            state.aiChat.historySummaries = summaries;\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * 添加一条会话记录\r\n     * @param {Object} state - Vuex状态对象\r\n     * @param {Object} conversation - 会话对象\r\n     */\r\n    ADD_CONVERSATION(state, conversation) {\r\n        if (!conversation || !conversation.id) return;\r\n        \r\n        // 查找是否已存在\r\n        const index = state.aiChat.conversations.findIndex(c => c.id === conversation.id);\r\n        \r\n        if (index !== -1) {\r\n            // 更新已存在的会话\r\n            state.aiChat.conversations.splice(index, 1, conversation);\r\n        } else {\r\n            // 添加新会话\r\n            state.aiChat.conversations.push(conversation);\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * 移除一条会话记录\r\n     * @param {Object} state - Vuex状态对象\r\n     * @param {String} conversationId - 会话ID\r\n     */\r\n    REMOVE_CONVERSATION(state, conversationId) {\r\n        if (!conversationId) return;\r\n        \r\n        state.aiChat.conversations = state.aiChat.conversations.filter(c => c.id !== conversationId);\r\n    },\r\n    \r\n    /**\r\n     * 添加一条历史摘要\r\n     * @param {Object} state - Vuex状态对象\r\n     * @param {Object} summary - 历史摘要对象\r\n     */\r\n    ADD_HISTORY_SUMMARY(state, summary) {\r\n        if (!summary || !summary.id) return;\r\n        \r\n        if (!state.aiChat.historySummaries) {\r\n            state.aiChat.historySummaries = [];\r\n        }\r\n        \r\n        // 查找是否已存在\r\n        const index = state.aiChat.historySummaries.findIndex(s => s.id === summary.id);\r\n        \r\n        if (index !== -1) {\r\n            // 更新已存在的摘要\r\n            state.aiChat.historySummaries.splice(index, 1, summary);\r\n        } else {\r\n            // 添加新摘要\r\n            state.aiChat.historySummaries.push(summary);\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * 移除一条历史摘要\r\n     * @param {Object} state - Vuex状态对象\r\n     * @param {String} summaryId - 摘要ID\r\n     */\r\n    REMOVE_HISTORY_SUMMARY(state, summaryId) {\r\n        if (!summaryId) return;\r\n        \r\n        if (state.aiChat.historySummaries) {\r\n            state.aiChat.historySummaries = state.aiChat.historySummaries.filter(s => s.id !== summaryId);\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * 根据对话ID更新完整对话内容\r\n     * @param {Object} state - Vuex状态对象\r\n     * @param {Object} conversationData - 完整的对话数据\r\n     * @param {string} conversationData.id - 对话ID\r\n     */\r\n    UPDATE_CONVERSATION_DETAIL(state, conversationData) {\r\n        if (!conversationData || !conversationData.id) return;\r\n        \r\n        // 查找是否已存在该对话\r\n        const index = state.aiChat.conversations.findIndex(\r\n            conv => conv.id === conversationData.id\r\n        );\r\n        \r\n        if (index !== -1) {\r\n            // 更新已存在的对话\r\n            state.aiChat.conversations[index] = conversationData;\r\n        } else {\r\n            // 添加新对话\r\n            state.aiChat.conversations.push(conversationData);\r\n        }\r\n        \r\n        // 设置当前活跃对话\r\n        state.aiChat.activeConversation = conversationData.id;\r\n    },\r\n    \r\n    /**\r\n     * 更新当前活跃的对话ID\r\n     * @param {Object} state - Vuex状态对象\r\n     * @param {string|null} conversationId - 对话ID\r\n     */\r\n    UPDATE_CURRENT_CONVERSATION(state, conversationId) {\r\n        state.aiChat.activeConversation = conversationId;\r\n    },\r\n    \r\n    /**\r\n     * 更新用户选择的聊天模式\r\n     * @param {Object} state - Vuex状态对象\r\n     * @param {string} chatMode - 聊天模式\r\n     */\r\n    UPDATE_CHAT_MODE(state, chatMode) {\r\n        state.aiChat.chatMode = chatMode;\r\n    },\r\n    \r\n    /**\r\n     * 更新用户信息\r\n     * @param {Object} state - Vuex状态对象\r\n     * @param {Object} userInfo - 用户信息\r\n     * @param {string} userInfo.school - 用户学校\r\n     * @param {string} userInfo.major - 用户专业\r\n     */\r\n    UPDATE_USER_INFO(state, userInfo) {\r\n        state.aiChat.userInfo = {\r\n            ...state.aiChat.userInfo,\r\n            ...userInfo\r\n        };\r\n    },\r\n    \r\n    /**\r\n     * 更新用户学校信息\r\n     * @param {Object} state - Vuex状态对象\r\n     * @param {string} school - 用户学校\r\n     */\r\n    UPDATE_USER_SCHOOL(state, school) {\r\n        if (!state.aiChat.userInfo) {\r\n            state.aiChat.userInfo = {\r\n                school: '',\r\n                major: ''\r\n            };\r\n        }\r\n        state.aiChat.userInfo.school = school;\r\n    },\r\n    \r\n    /**\r\n     * 更新用户专业信息\r\n     * @param {Object} state - Vuex状态对象\r\n     * @param {string} major - 用户专业\r\n     */\r\n    UPDATE_USER_MAJOR(state, major) {\r\n        if (!state.aiChat.userInfo) {\r\n            state.aiChat.userInfo = {\r\n                school: '',\r\n                major: ''\r\n            };\r\n        }\r\n        state.aiChat.userInfo.major = major;\r\n    },\r\n    \r\n    /**\r\n     * 从对话列表中删除指定ID的对话\r\n     * @param {Object} state - Vuex状态对象\r\n     * @param {string} conversationId - 对话ID\r\n     */\r\n    DELETE_CONVERSATION(state, conversationId) {\r\n        state.aiChat.conversations = state.aiChat.conversations.filter(\r\n            conv => conv.id !== conversationId\r\n        );\r\n        \r\n        // 如果删除的是当前活跃对话，则清空当前活跃对话\r\n        if (state.aiChat.activeConversation === conversationId) {\r\n            state.aiChat.activeConversation = null;\r\n        }\r\n    }\r\n}; "],"names":["mutations","state","conversationsList","simplifiedList","conversation","summaries","index","c","conversationId","summary","s","summaryId","conversationData","conv","chatMode","userInfo","school","major"],"mappings":"aAKA,MAAeA,EAAA,CASX,0BAA0BC,EAAOC,EAAmB,CAChD,GAAI,MAAM,QAAQA,CAAiB,EAAG,CAElC,MAAMC,EAAiBD,EAAkB,IAAIE,IAAiB,CAC1D,GAAIA,EAAa,GACjB,SAAUA,EAAa,SACvB,SAAUA,EAAa,SACvB,UAAWA,EAAa,UACxB,UAAWA,EAAa,SAC3B,EAAC,EAEFH,EAAM,OAAO,cAAgBE,CAChC,CACJ,EAOD,sBAAsBF,EAAOI,EAAW,CAC/BJ,EAAM,OAAO,mBACdA,EAAM,OAAO,iBAAmB,IAGhC,MAAM,QAAQI,CAAS,IACvBJ,EAAM,OAAO,iBAAmBI,EAEvC,EAOD,iBAAiBJ,EAAOG,EAAc,CAClC,GAAI,CAACA,GAAgB,CAACA,EAAa,GAAI,OAGvC,MAAME,EAAQL,EAAM,OAAO,cAAc,UAAUM,GAAKA,EAAE,KAAOH,EAAa,EAAE,EAE5EE,IAAU,GAEVL,EAAM,OAAO,cAAc,OAAOK,EAAO,EAAGF,CAAY,EAGxDH,EAAM,OAAO,cAAc,KAAKG,CAAY,CAEnD,EAOD,oBAAoBH,EAAOO,EAAgB,CAClCA,IAELP,EAAM,OAAO,cAAgBA,EAAM,OAAO,cAAc,OAAOM,GAAKA,EAAE,KAAOC,CAAc,EAC9F,EAOD,oBAAoBP,EAAOQ,EAAS,CAChC,GAAI,CAACA,GAAW,CAACA,EAAQ,GAAI,OAExBR,EAAM,OAAO,mBACdA,EAAM,OAAO,iBAAmB,IAIpC,MAAMK,EAAQL,EAAM,OAAO,iBAAiB,UAAUS,GAAKA,EAAE,KAAOD,EAAQ,EAAE,EAE1EH,IAAU,GAEVL,EAAM,OAAO,iBAAiB,OAAOK,EAAO,EAAGG,CAAO,EAGtDR,EAAM,OAAO,iBAAiB,KAAKQ,CAAO,CAEjD,EAOD,uBAAuBR,EAAOU,EAAW,CAChCA,GAEDV,EAAM,OAAO,mBACbA,EAAM,OAAO,iBAAmBA,EAAM,OAAO,iBAAiB,OAAOS,GAAKA,EAAE,KAAOC,CAAS,EAEnG,EAQD,2BAA2BV,EAAOW,EAAkB,CAChD,GAAI,CAACA,GAAoB,CAACA,EAAiB,GAAI,OAG/C,MAAMN,EAAQL,EAAM,OAAO,cAAc,UACrCY,GAAQA,EAAK,KAAOD,EAAiB,EACjD,EAEYN,IAAU,GAEVL,EAAM,OAAO,cAAcK,CAAK,EAAIM,EAGpCX,EAAM,OAAO,cAAc,KAAKW,CAAgB,EAIpDX,EAAM,OAAO,mBAAqBW,EAAiB,EACtD,EAOD,4BAA4BX,EAAOO,EAAgB,CAC/CP,EAAM,OAAO,mBAAqBO,CACrC,EAOD,iBAAiBP,EAAOa,EAAU,CAC9Bb,EAAM,OAAO,SAAWa,CAC3B,EASD,iBAAiBb,EAAOc,EAAU,CAC9Bd,EAAM,OAAO,SAAW,CACpB,GAAGA,EAAM,OAAO,SAChB,GAAGc,CACf,CACK,EAOD,mBAAmBd,EAAOe,EAAQ,CACzBf,EAAM,OAAO,WACdA,EAAM,OAAO,SAAW,CACpB,OAAQ,GACR,MAAO,EACvB,GAEQA,EAAM,OAAO,SAAS,OAASe,CAClC,EAOD,kBAAkBf,EAAOgB,EAAO,CACvBhB,EAAM,OAAO,WACdA,EAAM,OAAO,SAAW,CACpB,OAAQ,GACR,MAAO,EACvB,GAEQA,EAAM,OAAO,SAAS,MAAQgB,CACjC,EAOD,oBAAoBhB,EAAOO,EAAgB,CACvCP,EAAM,OAAO,cAAgBA,EAAM,OAAO,cAAc,OACpDY,GAAQA,EAAK,KAAOL,CAChC,EAGYP,EAAM,OAAO,qBAAuBO,IACpCP,EAAM,OAAO,mBAAqB,KAEzC,CACL"}