{"version":3,"file":"mutations.js","sources":["store/user/baseInfo/mutations.js"],"sourcesContent":["/**\r\n * baseInfo模块的mutations\r\n * @module store/user/baseInfo/mutations\r\n */\r\n\r\nexport default {\r\n    /**\r\n     * 更新用户角色\r\n     * @param {Object} state - 当前状态\r\n     * @param {string} role - 新的用户角色（学生或老师）\r\n     */\r\n    updateRole(state, role) {\r\n        console.log('updateRole mutation执行, 参数:', role);\r\n        // 更新显示的角色名称\r\n        state.userInfo.role = role === 'teacher' ? '老师' : '学生';\r\n        \r\n        // 保存到本地存储以便持久化\r\n        uni.setStorageSync('userBaseInfo', JSON.stringify({\r\n            id: state.id,\r\n            avatar: state.avatar,\r\n            name: state.name,\r\n            gender: state.gender,\r\n            selfIntroduction: state.selfIntroduction,\r\n            wechatNumber: state.wechatNumber,\r\n            phoneNumber: state.phoneNumber,\r\n            role: role // 保存角色代码\r\n        }));\r\n        \r\n        // 同步更新角色到本地存储\r\n        uni.setStorageSync('userRole', role);\r\n        console.log('角色更新完成, 新角色:', state.userInfo.role);\r\n    },\r\n    \r\n    /**\r\n     * 设置用户完整信息\r\n     * @param {Object} state - 当前状态\r\n     * @param {Object} userData - 服务器返回的用户信息\r\n     */\r\n    SET_USER_INFO(state, userData) {\r\n        console.log('SET_USER_INFO mutation执行, 入参:', userData);\r\n        console.log('更新前state:', {\r\n            id: state.id,\r\n            name: state.name,\r\n            avatar: state.avatar\r\n        });\r\n        \r\n        // 更新基本信息\r\n        state.id = userData.id || '';\r\n        state.avatar = userData.avatar || '';\r\n        state.name = userData.nickname || userData.name || '';\r\n        state.gender = userData.gender || '';\r\n        state.selfIntroduction = userData.introduction || userData.selfIntroduction || '';\r\n        state.wechatNumber = userData.wechat || userData.wechatNumber || '';\r\n        state.phoneNumber = userData.phone || userData.phoneNumber || '';\r\n        state.password = userData.password || '';\r\n        \r\n        // 获取角色代码\r\n        const roleCode = userData.role || 'student';\r\n        \r\n        // 更新用户扩展信息\r\n        if (userData.userInfo) {\r\n            state.userInfo = {\r\n                ...state.userInfo,\r\n                ...userData.userInfo\r\n            };\r\n            \r\n            // 确保角色显示值与角色代码一致\r\n            if (!userData.userInfo.role || userData.userInfo.role === roleCode) {\r\n                state.userInfo.role = roleCode === 'teacher' ? '老师' : '学生';\r\n            }\r\n        } else {\r\n            // 如果没有提供 userInfo，仍然更新角色显示值\r\n            state.userInfo.role = roleCode === 'teacher' ? '老师' : '学生';\r\n        }\r\n        \r\n        // 保存到本地存储以便持久化\r\n        uni.setStorageSync('userBaseInfo', JSON.stringify({\r\n            id: state.id,\r\n            avatar: state.avatar,\r\n            name: state.name,\r\n            gender: state.gender,\r\n            selfIntroduction: state.selfIntroduction,\r\n            wechatNumber: state.wechatNumber,\r\n            phoneNumber: state.phoneNumber,\r\n            role: roleCode\r\n        }));\r\n        \r\n        // 同步更新角色到本地存储\r\n        uni.setStorageSync('userRole', roleCode);\r\n        \r\n        console.log('更新后state:', {\r\n            id: state.id,\r\n            name: state.name,\r\n            avatar: state.avatar,\r\n            role: state.userInfo.role\r\n        });\r\n    },\r\n    \r\n    /**\r\n     * 更新用户个人信息\r\n     * @param {Object} state - 当前状态\r\n     * @param {Object} userInfo - 用户个人信息对象\r\n     * @param {string} userInfo.avatar - 用户头像\r\n     * @param {string} userInfo.name - 用户姓名\r\n     * @param {string} userInfo.gender - 用户性别\r\n     * @param {string} userInfo.selfIntroduction - 用户自我介绍\r\n     * @param {string} userInfo.wechatNumber - 用户微信号\r\n     * @param {string} userInfo.phoneNumber - 用户手机号\r\n     * @param {string} userInfo.password - 用户密码\r\n     */\r\n    UPDATE_USER_INFO(state, userInfo) {\r\n        console.log('UPDATE_USER_INFO mutation执行, 入参:', userInfo);\r\n        \r\n        const { \r\n            avatar, \r\n            name, \r\n            nickname,\r\n            gender, \r\n            selfIntroduction,\r\n            introduction, \r\n            wechatNumber,\r\n            wechat,\r\n            phoneNumber,\r\n            phone,\r\n            password,\r\n            role\r\n        } = userInfo;\r\n        \r\n        // 只更新提供的字段（支持不同字段名）\r\n        if (avatar !== undefined) state.avatar = avatar;\r\n        if (name !== undefined) state.name = name;\r\n        if (nickname !== undefined) state.name = nickname;\r\n        if (gender !== undefined) state.gender = gender;\r\n        if (selfIntroduction !== undefined) state.selfIntroduction = selfIntroduction;\r\n        if (introduction !== undefined) state.selfIntroduction = introduction;\r\n        if (wechatNumber !== undefined) state.wechatNumber = wechatNumber;\r\n        if (wechat !== undefined) state.wechatNumber = wechat;\r\n        if (phoneNumber !== undefined) state.phoneNumber = phoneNumber;\r\n        if (phone !== undefined) state.phoneNumber = phone;\r\n        if (password !== undefined) state.password = password;\r\n        \r\n        // 处理角色更新\r\n        if (role !== undefined) {\r\n            // 更新角色显示值\r\n            state.userInfo.role = role === 'teacher' ? '老师' : '学生';\r\n            // 保存角色代码到本地存储\r\n            uni.setStorageSync('userRole', role);\r\n        }\r\n        \r\n        // 保存到本地存储以便持久化\r\n        uni.setStorageSync('userBaseInfo', JSON.stringify({\r\n            id: state.id,\r\n            avatar: state.avatar,\r\n            name: state.name,\r\n            gender: state.gender,\r\n            selfIntroduction: state.selfIntroduction,\r\n            wechatNumber: state.wechatNumber,\r\n            phoneNumber: state.phoneNumber,\r\n            role: uni.getStorageSync('userRole') || 'student'\r\n        }));\r\n        \r\n        console.log('更新后state:', {\r\n            id: state.id,\r\n            name: state.name,\r\n            avatar: state.avatar\r\n        });\r\n    },\r\n    \r\n    /**\r\n     * 更新用户个人档案（UPDATE_USER_INFO的别名，用于modify.vue页面）\r\n     * @param {Object} state - 当前状态\r\n     * @param {Object} profileData - 用户个人档案数据\r\n     */\r\n    UPDATE_USER_PROFILE(state, profileData) {\r\n        console.log('UPDATE_USER_PROFILE mutation执行, 入参:', profileData);\r\n        \r\n        // 直接调用UPDATE_USER_INFO mutation，保持逻辑一致\r\n        this.commit('user/baseInfo/UPDATE_USER_INFO', profileData);\r\n        \r\n        // 发送事件通知更新成功\r\n        uni.$emit('userProfileUpdated', {\r\n            timestamp: Date.now(),\r\n            data: profileData\r\n        });\r\n    },\r\n    \r\n    /**\r\n     * 清除用户信息（用于登出）\r\n     * @param {Object} state - 当前状态\r\n     */\r\n    CLEAR_USER_INFO(state) {\r\n        console.log('CLEAR_USER_INFO mutation执行');\r\n        \r\n        // 重置所有用户信息为默认值\r\n        state.id = '';\r\n        state.avatar = '';\r\n        state.name = '';\r\n        state.gender = '';\r\n        state.selfIntroduction = '';\r\n        state.wechatNumber = '';\r\n        state.phoneNumber = '';\r\n        state.password = '';\r\n        \r\n        // 保持角色不变，只清除其他信息\r\n        const currentRole = state.userInfo.role;\r\n        state.userInfo = {\r\n            certificate: 0,\r\n            role: currentRole, // 保留当前角色\r\n            school: '',\r\n            major: '',\r\n            targetSchool: '',\r\n            targetMajor: '',\r\n            studentGrade: '',\r\n            teacherGrade: '',\r\n        };\r\n        \r\n        console.log('清除后state:', {\r\n            id: state.id,\r\n            name: state.name,\r\n            avatar: state.avatar,\r\n            role: state.userInfo.role\r\n        });\r\n    },\r\n    \r\n    /**\r\n     * 更新用户扩展信息\r\n     * @param {Object} state - 当前模块状态\r\n     * @param {Object} userInfoData - 用户扩展信息\r\n     */\r\n    UPDATE_USER_INFO_DATA(state, userInfoData) {\r\n        console.log('UPDATE_USER_INFO_DATA mutation执行, 入参:', userInfoData);\r\n        \r\n        // 更新userInfo对象中的字段\r\n        state.userInfo = {\r\n            ...state.userInfo,\r\n            ...userInfoData\r\n        };\r\n        \r\n        // 保存到本地存储\r\n        uni.setStorageSync('userInfoData', JSON.stringify(state.userInfo));\r\n        \r\n        console.log('更新后userInfo:', state.userInfo);\r\n    }\r\n}; "],"names":["mutations","state","role","uni","userData","roleCode","userInfo","avatar","name","nickname","gender","selfIntroduction","introduction","wechatNumber","wechat","phoneNumber","phone","password","profileData","currentRole","userInfoData"],"mappings":"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"}