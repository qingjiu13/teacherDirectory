{"version":3,"file":"mutations.js","sources":["store/user/baseInfo/mutations.js"],"sourcesContent":["/**\r\n * baseInfo模块的mutations\r\n * @module store/user/baseInfo/mutations\r\n */\r\n\r\nexport default {\r\n    /**\r\n     * 更新用户角色\r\n     * @param {Object} state - 当前状态\r\n     * @param {string} role - 新的用户角色（学生或老师）\r\n     */\r\n    updateRole(state, role) {\r\n        console.log('updateRole mutation执行, 参数:', role);\r\n        // 更新显示的角色名称\r\n        state.userInfo.role = role === 'teacher' ? '老师' : '学生';\r\n        \r\n        // 保存到本地存储以便持久化\r\n        uni.setStorageSync('userBaseInfo', JSON.stringify({\r\n            id: state.id,\r\n            avatar: state.avatar,\r\n            name: state.name,\r\n            gender: state.gender,\r\n            selfIntroduction: state.selfIntroduction,\r\n            wechatNumber: state.wechatNumber,\r\n            phoneNumber: state.phoneNumber,\r\n            role: role // 保存角色代码\r\n        }));\r\n        \r\n        // 同步更新角色到本地存储\r\n        uni.setStorageSync('userRole', role);\r\n        console.log('角色更新完成, 新角色:', state.userInfo.role);\r\n    },\r\n    \r\n    /**\r\n     * 设置用户完整信息\r\n     * @param {Object} state - 当前状态\r\n     * @param {Object} userData - 服务器返回的用户信息\r\n     */\r\n    SET_USER_INFO(state, userData) {\r\n        console.log('SET_USER_INFO mutation执行, 入参:', userData);\r\n        console.log('更新前state:', {\r\n            id: state.id,\r\n            name: state.name,\r\n            avatar: state.avatar\r\n        });\r\n        \r\n        // 更新基本信息\r\n        state.id = userData.id || '';\r\n        state.avatar = userData.avatar || '';\r\n        state.name = userData.nickname || userData.name || '';\r\n        state.gender = userData.gender || '';\r\n        state.selfIntroduction = userData.introduction || userData.selfIntroduction || '';\r\n        state.wechatNumber = userData.wechat || userData.wechatNumber || '';\r\n        state.phoneNumber = userData.phone || userData.phoneNumber || '';\r\n        state.password = userData.password || '';\r\n        \r\n        // 获取角色代码\r\n        const roleCode = userData.role || 'student';\r\n        \r\n        // 更新用户扩展信息\r\n        if (userData.userInfo) {\r\n            state.userInfo = {\r\n                ...state.userInfo,\r\n                ...userData.userInfo\r\n            };\r\n            \r\n            // 确保角色显示值与角色代码一致\r\n            if (!userData.userInfo.role || userData.userInfo.role === roleCode) {\r\n                state.userInfo.role = roleCode === 'teacher' ? '老师' : '学生';\r\n            }\r\n        } else {\r\n            // 如果没有提供 userInfo，仍然更新角色显示值\r\n            state.userInfo.role = roleCode === 'teacher' ? '老师' : '学生';\r\n        }\r\n        \r\n        // 保存到本地存储以便持久化\r\n        uni.setStorageSync('userBaseInfo', JSON.stringify({\r\n            id: state.id,\r\n            avatar: state.avatar,\r\n            name: state.name,\r\n            gender: state.gender,\r\n            selfIntroduction: state.selfIntroduction,\r\n            wechatNumber: state.wechatNumber,\r\n            phoneNumber: state.phoneNumber,\r\n            role: roleCode\r\n        }));\r\n        \r\n        // 同步更新角色到本地存储\r\n        uni.setStorageSync('userRole', roleCode);\r\n        \r\n        console.log('更新后state:', {\r\n            id: state.id,\r\n            name: state.name,\r\n            avatar: state.avatar,\r\n            role: state.userInfo.role\r\n        });\r\n    },\r\n    \r\n    /**\r\n     * 更新用户个人信息\r\n     * @param {Object} state - 当前状态\r\n     * @param {Object} userInfo - 用户个人信息对象\r\n     * @param {string} userInfo.avatar - 用户头像\r\n     * @param {string} userInfo.name - 用户姓名\r\n     * @param {string} userInfo.gender - 用户性别\r\n     * @param {string} userInfo.selfIntroduction - 用户自我介绍\r\n     * @param {string} userInfo.wechatNumber - 用户微信号\r\n     * @param {string} userInfo.phoneNumber - 用户手机号\r\n     * @param {string} userInfo.password - 用户密码\r\n     */\r\n    UPDATE_USER_INFO(state, userInfo) {\r\n        console.log('UPDATE_USER_INFO mutation执行, 入参:', userInfo);\r\n        \r\n        const { \r\n            avatar, \r\n            name, \r\n            nickname,\r\n            gender, \r\n            selfIntroduction,\r\n            introduction, \r\n            wechatNumber,\r\n            wechat,\r\n            phoneNumber,\r\n            phone,\r\n            password,\r\n            role\r\n        } = userInfo;\r\n        \r\n        // 只更新提供的字段（支持不同字段名）\r\n        if (avatar !== undefined) state.avatar = avatar;\r\n        if (name !== undefined) state.name = name;\r\n        if (nickname !== undefined) state.name = nickname;\r\n        if (gender !== undefined) state.gender = gender;\r\n        if (selfIntroduction !== undefined) state.selfIntroduction = selfIntroduction;\r\n        if (introduction !== undefined) state.selfIntroduction = introduction;\r\n        if (wechatNumber !== undefined) state.wechatNumber = wechatNumber;\r\n        if (wechat !== undefined) state.wechatNumber = wechat;\r\n        if (phoneNumber !== undefined) state.phoneNumber = phoneNumber;\r\n        if (phone !== undefined) state.phoneNumber = phone;\r\n        if (password !== undefined) state.password = password;\r\n        \r\n        // 处理角色更新\r\n        if (role !== undefined) {\r\n            // 更新角色显示值\r\n            state.userInfo.role = role === 'teacher' ? '老师' : '学生';\r\n            // 保存角色代码到本地存储\r\n            uni.setStorageSync('userRole', role);\r\n        }\r\n        \r\n        // 保存到本地存储以便持久化\r\n        uni.setStorageSync('userBaseInfo', JSON.stringify({\r\n            id: state.id,\r\n            avatar: state.avatar,\r\n            name: state.name,\r\n            gender: state.gender,\r\n            selfIntroduction: state.selfIntroduction,\r\n            wechatNumber: state.wechatNumber,\r\n            phoneNumber: state.phoneNumber,\r\n            role: uni.getStorageSync('userRole') || 'student'\r\n        }));\r\n        \r\n        console.log('更新后state:', {\r\n            id: state.id,\r\n            name: state.name,\r\n            avatar: state.avatar\r\n        });\r\n    },\r\n    \r\n    /**\r\n     * 更新用户个人档案（UPDATE_USER_INFO的别名，用于modify.vue页面）\r\n     * @param {Object} state - 当前状态\r\n     * @param {Object} profileData - 用户个人档案数据\r\n     */\r\n    UPDATE_USER_PROFILE(state, profileData) {\r\n        console.log('UPDATE_USER_PROFILE mutation执行, 入参:', profileData);\r\n        \r\n        // 直接调用UPDATE_USER_INFO mutation，保持逻辑一致\r\n        this.commit('user/baseInfo/UPDATE_USER_INFO', profileData);\r\n        \r\n        // 发送事件通知更新成功\r\n        uni.$emit('userProfileUpdated', {\r\n            timestamp: Date.now(),\r\n            data: profileData\r\n        });\r\n    },\r\n    \r\n    /**\r\n     * 清除用户信息（用于登出）\r\n     * @param {Object} state - 当前状态\r\n     */\r\n    CLEAR_USER_INFO(state) {\r\n        console.log('CLEAR_USER_INFO mutation执行');\r\n        \r\n        // 重置所有用户信息为默认值\r\n        state.id = '';\r\n        state.avatar = '';\r\n        state.name = '';\r\n        state.gender = '';\r\n        state.selfIntroduction = '';\r\n        state.wechatNumber = '';\r\n        state.phoneNumber = '';\r\n        state.password = '';\r\n        state.isLogin = 0;\r\n        state.isRegistered = 0;\r\n        state.campusAmbassador = 0;\r\n        state.userInfo = {\r\n            certificate: 0,\r\n            role: '学生',\r\n            school: '',\r\n            major: '',\r\n            targetSchool: '',\r\n            targetMajor: '',\r\n            studentGrade: '',\r\n            teacherGrade: ''\r\n        };\r\n        \r\n        // 清除本地存储\r\n        uni.removeStorageSync('userBaseInfo');\r\n        uni.removeStorageSync('userRole');\r\n        console.log('用户信息已清除');\r\n    },\r\n    \r\n    /**\r\n     * 设置用户登录状态\r\n     * @param {Object} state - 当前状态\r\n     * @param {number} isLogin - 登录状态 0-未登录 1-已登录\r\n     */\r\n    SET_LOGIN_STATUS(state, isLogin) {\r\n        state.isLogin = isLogin;\r\n        console.log('登录状态已更新为:', isLogin);\r\n    },\r\n    \r\n    /**\r\n     * 设置用户注册状态\r\n     * @param {Object} state - 当前状态\r\n     * @param {number} isRegistered - 注册状态 0-未注册 1-已注册\r\n     */\r\n    SET_REGISTER_STATUS(state, isRegistered) {\r\n        state.isRegistered = isRegistered;\r\n        console.log('注册状态已更新为:', isRegistered);\r\n    },\r\n    \r\n    /**\r\n     * @description 更新用户扩展信息\r\n     * @param {Object} state - 状态对象\r\n     * @param {Object} userInfoData - 用户扩展信息对象\r\n     */\r\n    UPDATE_USER_INFO_DATA(state, userInfoData) {\r\n        console.log('UPDATE_USER_INFO_DATA mutation执行, 入参:', userInfoData);\r\n        \r\n        // 合并扩展信息到现有的userInfo对象\r\n        const updatedUserInfo = {\r\n            ...state.userInfo,\r\n            ...userInfoData\r\n        };\r\n        \r\n        // 确保ID字段正确设置\r\n        if (userInfoData.schoolId !== undefined) updatedUserInfo.schoolId = userInfoData.schoolId;\r\n        if (userInfoData.majorId !== undefined) updatedUserInfo.majorId = userInfoData.majorId;\r\n        if (userInfoData.targetSchoolId !== undefined) updatedUserInfo.targetSchoolId = userInfoData.targetSchoolId;\r\n        if (userInfoData.targetMajorId !== undefined) updatedUserInfo.targetMajorId = userInfoData.targetMajorId;\r\n        \r\n        // 更新状态\r\n        state.userInfo = updatedUserInfo;\r\n        \r\n        // 保存到本地存储\r\n        try {\r\n            uni.setStorageSync('userInfoData', JSON.stringify(updatedUserInfo));\r\n            console.log('用户扩展信息已保存到本地存储');\r\n        } catch (error) {\r\n            console.error('保存用户扩展信息到本地存储失败:', error);\r\n        }\r\n        \r\n        console.log('更新后的userInfo:', state.userInfo);\r\n    },\r\n    \r\n    // ===================== 本科学校搜索相关 mutations =====================\r\n    \r\n    /**\r\n     * 设置本科学校搜索关键词\r\n     * @param {Object} state - Vuex状态对象\r\n     * @param {string} keyword - 搜索关键词\r\n     */\r\n    SET_UNDERGRADUATE_SCHOOL_SEARCH_KEYWORD(state, keyword) {\r\n        state.undergraduateSchoolSearch.searchKeyword = keyword;\r\n    },\r\n    \r\n    /**\r\n     * @description 设置本科学校搜索选项列表\r\n     * @param {Object} state - 状态对象\r\n     * @param {Object} payload - 包含选项列表和分页信息的对象\r\n     */\r\n    SET_UNDERGRADUATE_SCHOOL_OPTIONS(state, payload) {\r\n        console.log('SET_UNDERGRADUATE_SCHOOL_OPTIONS mutation执行:', payload);\r\n        \r\n        if (typeof payload === 'object' && payload.options) {\r\n            // 新的分页方式\r\n            const { options, append = false, hasMore = true, currentPage = 1 } = payload;\r\n            \r\n            if (append) {\r\n                // 追加新数据\r\n                state.undergraduateSchoolSearch.options = [\r\n                    ...state.undergraduateSchoolSearch.options,\r\n                    ...options\r\n                ];\r\n            } else {\r\n                // 替换数据\r\n                state.undergraduateSchoolSearch.options = options;\r\n            }\r\n            \r\n            state.undergraduateSchoolSearch.hasMore = hasMore;\r\n            state.undergraduateSchoolSearch.currentPage = currentPage;\r\n        } else {\r\n            // 兼容旧的方式\r\n            state.undergraduateSchoolSearch.options = Array.isArray(payload) ? payload : [];\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * @description 重置本科学校搜索状态\r\n     * @param {Object} state - 状态对象\r\n     */\r\n    RESET_UNDERGRADUATE_SCHOOL_SEARCH(state) {\r\n        state.undergraduateSchoolSearch.options = [];\r\n        state.undergraduateSchoolSearch.currentPage = 1;\r\n        state.undergraduateSchoolSearch.hasMore = true;\r\n    },\r\n    \r\n    /**\r\n     * @description 设置本科学校搜索加载状态\r\n     * @param {Object} state - 状态对象\r\n     * @param {Boolean} isLoading - 是否正在加载\r\n     */\r\n    SET_UNDERGRADUATE_SCHOOL_LOADING(state, isLoading) {\r\n        console.log('SET_UNDERGRADUATE_SCHOOL_LOADING mutation执行:', isLoading);\r\n        state.undergraduateSchoolSearch.isLoading = !!isLoading;\r\n    },\r\n    \r\n    /**\r\n     * 设置选中的本科学校\r\n     * @param {Object} state - Vuex状态对象\r\n     * @param {Object} school - 学校信息\r\n     * @param {number} school.id - 学校ID\r\n     * @param {string} school.name - 学校名称\r\n     */\r\n    SET_UNDERGRADUATE_SELECTED_SCHOOL(state, { id, name }) {\r\n        state.undergraduateSchoolSearch.selectedSchoolId = id;\r\n        state.undergraduateSchoolSearch.selectedSchool = name;\r\n        // 同时更新用户信息\r\n        state.userInfo.school = name;\r\n    },\r\n    \r\n    // ===================== 本科专业搜索相关 mutations =====================\r\n    \r\n    /**\r\n     * 设置本科专业搜索关键词\r\n     * @param {Object} state - Vuex状态对象\r\n     * @param {string} keyword - 搜索关键词\r\n     */\r\n    SET_UNDERGRADUATE_MAJOR_SEARCH_KEYWORD(state, keyword) {\r\n        state.undergraduateMajorSearch.searchKeyword = keyword;\r\n    },\r\n    \r\n    /**\r\n     * @description 设置本科专业搜索选项列表\r\n     * @param {Object} state - 状态对象\r\n     * @param {Object} payload - 包含选项列表和分页信息的对象\r\n     */\r\n    SET_UNDERGRADUATE_MAJOR_OPTIONS(state, payload) {\r\n        console.log('SET_UNDERGRADUATE_MAJOR_OPTIONS mutation执行:', payload);\r\n        \r\n        if (typeof payload === 'object' && payload.options) {\r\n            // 新的分页方式\r\n            const { options, append = false, hasMore = true, currentPage = 1 } = payload;\r\n            \r\n            if (append) {\r\n                // 追加新数据\r\n                state.undergraduateMajorSearch.options = [\r\n                    ...state.undergraduateMajorSearch.options,\r\n                    ...options\r\n                ];\r\n            } else {\r\n                // 替换数据\r\n                state.undergraduateMajorSearch.options = options;\r\n            }\r\n            \r\n            state.undergraduateMajorSearch.hasMore = hasMore;\r\n            state.undergraduateMajorSearch.currentPage = currentPage;\r\n        } else {\r\n            // 兼容旧的方式\r\n            state.undergraduateMajorSearch.options = Array.isArray(payload) ? payload : [];\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * @description 重置本科专业搜索状态\r\n     * @param {Object} state - 状态对象\r\n     */\r\n    RESET_UNDERGRADUATE_MAJOR_SEARCH(state) {\r\n        state.undergraduateMajorSearch.options = [];\r\n        state.undergraduateMajorSearch.currentPage = 1;\r\n        state.undergraduateMajorSearch.hasMore = true;\r\n    },\r\n    \r\n    /**\r\n     * @description 设置本科专业搜索加载状态\r\n     * @param {Object} state - 状态对象\r\n     * @param {Boolean} isLoading - 是否正在加载\r\n     */\r\n    SET_UNDERGRADUATE_MAJOR_LOADING(state, isLoading) {\r\n        console.log('SET_UNDERGRADUATE_MAJOR_LOADING mutation执行:', isLoading);\r\n        state.undergraduateMajorSearch.isLoading = !!isLoading;\r\n    },\r\n    \r\n    /**\r\n     * 设置选中的本科专业\r\n     * @param {Object} state - Vuex状态对象\r\n     * @param {Object} major - 专业信息\r\n     * @param {number} major.id - 专业ID\r\n     * @param {string} major.name - 专业名称\r\n     */\r\n    SET_UNDERGRADUATE_SELECTED_MAJOR(state, { id, name }) {\r\n        state.undergraduateMajorSearch.selectedMajorId = id;\r\n        state.undergraduateMajorSearch.selectedMajor = name;\r\n        // 同时更新用户信息\r\n        state.userInfo.major = name;\r\n    },\r\n    \r\n    // ===================== 研究生学校搜索相关 mutations =====================\r\n    \r\n    /**\r\n     * 设置研究生学校搜索关键词\r\n     * @param {Object} state - Vuex状态对象\r\n     * @param {string} keyword - 搜索关键词\r\n     */\r\n    SET_GRADUATE_SCHOOL_SEARCH_KEYWORD(state, keyword) {\r\n        state.graduateSchoolSearch.searchKeyword = keyword;\r\n    },\r\n    \r\n    /**\r\n     * 设置研究生学校选项列表\r\n     * @param {Object} state - Vuex状态对象\r\n     * @param {Array} options - 学校选项列表 [{id, name}]\r\n     * @param {boolean} isLoadMore - 是否为加载更多\r\n     */\r\n    SET_GRADUATE_SCHOOL_OPTIONS(state, { options, isLoadMore = false }) {\r\n        if (isLoadMore) {\r\n            state.graduateSchoolSearch.options = [...state.graduateSchoolSearch.options, ...options];\r\n        } else {\r\n            state.graduateSchoolSearch.options = options;\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * 设置研究生学校分页信息\r\n     * @param {Object} state - Vuex状态对象\r\n     * @param {Object} pagination - 分页信息\r\n     * @param {number} pagination.currentPage - 当前页码\r\n     * @param {boolean} pagination.hasMore - 是否还有更多数据\r\n     * @param {boolean} pagination.isLoading - 是否正在加载\r\n     */\r\n    SET_GRADUATE_SCHOOL_PAGINATION(state, { currentPage, hasMore, isLoading }) {\r\n        if (currentPage !== undefined) state.graduateSchoolSearch.currentPage = currentPage;\r\n        if (hasMore !== undefined) state.graduateSchoolSearch.hasMore = hasMore;\r\n        if (isLoading !== undefined) state.graduateSchoolSearch.isLoading = isLoading;\r\n    },\r\n    \r\n    /**\r\n     * 设置选中的研究生学校\r\n     * @param {Object} state - Vuex状态对象\r\n     * @param {Object} school - 学校信息\r\n     * @param {number} school.id - 学校ID\r\n     * @param {string} school.name - 学校名称\r\n     */\r\n    SET_GRADUATE_SELECTED_SCHOOL(state, { id, name }) {\r\n        state.graduateSchoolSearch.selectedSchoolId = id;\r\n        state.graduateSchoolSearch.selectedSchool = name;\r\n        // 同时更新用户信息\r\n        state.userInfo.targetSchool = name;\r\n    },\r\n    \r\n    // ===================== 研究生专业搜索相关 mutations =====================\r\n    \r\n    /**\r\n     * 设置研究生专业搜索关键词\r\n     * @param {Object} state - Vuex状态对象\r\n     * @param {string} keyword - 搜索关键词\r\n     */\r\n    SET_GRADUATE_MAJOR_SEARCH_KEYWORD(state, keyword) {\r\n        state.graduateMajorSearch.searchKeyword = keyword;\r\n    },\r\n    \r\n    /**\r\n     * @description 设置研究生专业搜索选项列表\r\n     * @param {Object} state - 状态对象\r\n     * @param {Object} payload - 包含选项列表和分页信息的对象\r\n     */\r\n    SET_GRADUATE_MAJOR_OPTIONS(state, payload) {\r\n        console.log('SET_GRADUATE_MAJOR_OPTIONS mutation执行:', payload);\r\n        \r\n        if (typeof payload === 'object' && payload.options) {\r\n            // 新的分页方式\r\n            const { options, append = false, hasMore = true, currentPage = 1 } = payload;\r\n            \r\n            if (append) {\r\n                // 追加新数据\r\n                state.graduateMajorSearch.options = [\r\n                    ...state.graduateMajorSearch.options,\r\n                    ...options\r\n                ];\r\n            } else {\r\n                // 替换数据\r\n                state.graduateMajorSearch.options = options;\r\n            }\r\n            \r\n            state.graduateMajorSearch.hasMore = hasMore;\r\n            state.graduateMajorSearch.currentPage = currentPage;\r\n        } else {\r\n            // 兼容旧的方式\r\n            state.graduateMajorSearch.options = Array.isArray(payload) ? payload : [];\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * 设置选中的研究生专业\r\n     * @param {Object} state - Vuex状态对象\r\n     * @param {Object} major - 专业信息\r\n     * @param {number} major.id - 专业ID\r\n     * @param {string} major.name - 专业名称\r\n     */\r\n    SET_GRADUATE_SELECTED_MAJOR(state, { id, name }) {\r\n        state.graduateMajorSearch.selectedMajorId = id;\r\n        state.graduateMajorSearch.selectedMajor = name;\r\n        // 同时更新用户信息\r\n        state.userInfo.targetMajor = name;\r\n    },\r\n\r\n    /**\r\n     * 设置JWT令牌\r\n     * @param {Object} state - Vuex状态对象\r\n     * @param {string} token - JWT令牌\r\n     */\r\n    SET_JWT_TOKEN(state, token) {\r\n        state.jwtToken = token;\r\n        // 同时保存到本地存储\r\n        uni.setStorageSync('jwtToken', token);\r\n        console.log('JWT令牌已设置:', token);\r\n    },\r\n\r\n    /**\r\n     * 清除JWT令牌\r\n     * @param {Object} state - Vuex状态对象\r\n     */\r\n    CLEAR_JWT_TOKEN(state) {\r\n        state.jwtToken = '';\r\n        // 同时清除本地存储\r\n        uni.removeStorageSync('jwtToken');\r\n        console.log('JWT令牌已清除');\r\n    },\r\n\r\n    /**\r\n     * 从本地存储恢复JWT令牌\r\n     * @param {Object} state - Vuex状态对象\r\n     */\r\n    RESTORE_JWT_TOKEN(state) {\r\n        const token = uni.getStorageSync('jwtToken') || '';\r\n        state.jwtToken = token;\r\n        console.log('JWT令牌已从本地存储恢复:', token);\r\n    }\r\n}; "],"names":["mutations","state","role","uni","userData","roleCode","userInfo","avatar","name","nickname","gender","selfIntroduction","introduction","wechatNumber","wechat","phoneNumber","phone","password","profileData","isLogin","isRegistered","userInfoData","updatedUserInfo","error","keyword","payload","options","append","hasMore","currentPage","isLoading","id","isLoadMore","token"],"mappings":"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"}