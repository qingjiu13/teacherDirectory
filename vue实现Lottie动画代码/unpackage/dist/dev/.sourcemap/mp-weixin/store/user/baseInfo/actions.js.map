{"version":3,"file":"actions.js","sources":["store/user/baseInfo/actions.js"],"sourcesContent":["/**\r\n * baseInfo模块的actions\r\n * @module store/user/baseInfo/actions\r\n */\r\n\r\n// 直接导入API\r\nconst { getUserInfo, updateUserInfo, updateRole } = {\r\n    // 这里可以替换为真实API实现\r\n    getUserInfo: () => Promise.resolve({ \r\n        success: true, \r\n        data: {\r\n            id: '1566454',\r\n            avatar: '/static/image/tab-bar/default_avatar.png',\r\n            name: '',\r\n            gender: '',\r\n            selfIntroduction: '',\r\n            wechatNumber: '',\r\n            phoneNumber: '',\r\n            password: '',\r\n            isRegistered: true,\r\n            userInfo: {\r\n                certificate: 0,\r\n                role: '学生',\r\n                school: '',\r\n                major: '',\r\n                targetSchool: '',\r\n                targetMajor: '',\r\n                studentGrade: '',\r\n                teacherGrade: '',\r\n                teacherScore: 0,\r\n            }\r\n        } \r\n    }),\r\n    updateUserInfo: (userInfo) => Promise.resolve({ success: true, data: { userInfo } }),\r\n    updateRole: () => Promise.resolve({ success: true })\r\n};\r\n\r\nexport default {\r\n    /**\r\n     * @description 获取用户信息\r\n     * @param {Object} context - Vuex上下文对象\r\n     * @returns {Promise} - 返回Promise对象\r\n     */\r\n    async getUserInfo({ commit, state }) {\r\n        console.log('getUserInfo action开始执行, 当前state:', {\r\n            id: state.id,\r\n            name: state.name\r\n        });\r\n        \r\n        try {\r\n            // 如果本地已有数据且不是空的，则直接返回\r\n            if (state.name && state.name !== '') {\r\n                console.log('本地已有数据，直接返回state');\r\n                return {\r\n                    id: state.id,\r\n                    avatar: state.avatar,\r\n                    name: state.name,\r\n                    gender: state.gender,\r\n                    selfIntroduction: state.selfIntroduction,\r\n                    wechatNumber: state.wechatNumber,\r\n                    phoneNumber: state.phoneNumber,\r\n                    userInfo: state.userInfo\r\n                };\r\n            }\r\n            \r\n            console.log('本地无数据，请求API');\r\n            const response = await getUserInfo();\r\n            console.log('API返回结果:', response);\r\n            \r\n            if (response.success) {\r\n                // 将返回的用户信息提交到mutations处理\r\n                commit('SET_USER_INFO', response.data);\r\n                console.log('提交SET_USER_INFO后，state变为:', {\r\n                    id: state.id,\r\n                    name: state.name\r\n                });\r\n                \r\n                return response.data;\r\n            } else {\r\n                console.error('API返回失败:', response.error);\r\n                return Promise.reject(response.error || { message: '获取用户信息失败' });\r\n            }\r\n        } catch (error) {\r\n            console.error('获取用户信息失败', error);\r\n            return Promise.reject(error);\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * @description 更新用户信息\r\n     * @param {Object} context - Vuex上下文对象\r\n     * @param {Object} userInfo - 用户信息\r\n     * @returns {Promise} - 返回Promise对象\r\n     */\r\n    async updateUserInfo({ commit }, userInfo) {\r\n        try {\r\n            const response = await updateUserInfo(userInfo);\r\n            \r\n            if (response.success) {\r\n                // 更新用户信息\r\n                commit('UPDATE_USER_INFO', userInfo);\r\n                \r\n                return { success: true };\r\n            } else {\r\n                return Promise.reject(response.error || { message: '更新用户信息失败' });\r\n            }\r\n        } catch (error) {\r\n            console.error('更新用户信息失败', error);\r\n            return Promise.reject(error);\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * @description 更新用户扩展信息\r\n     * @param {Object} context - Vuex上下文对象\r\n     * @param {Object} userInfoData - 用户扩展信息\r\n     * @returns {Promise} - 返回Promise对象\r\n     */\r\n    async updateUserInfoData({ commit }, userInfoData) {\r\n        try {\r\n            const response = await updateUserInfo({ userInfo: userInfoData });\r\n            \r\n            if (response.success) {\r\n                // 更新用户扩展信息\r\n                commit('UPDATE_USER_INFO_DATA', userInfoData);\r\n                \r\n                return { success: true };\r\n            } else {\r\n                return Promise.reject(response.error || { message: '更新用户扩展信息失败' });\r\n            }\r\n        } catch (error) {\r\n            console.error('更新用户扩展信息失败', error);\r\n            return Promise.reject(error);\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * @description 更新用户角色\r\n     * @param {Object} context - Vuex上下文对象\r\n     * @param {string} role - 用户角色\r\n     * @returns {Promise} - 返回Promise对象\r\n     */\r\n    async updateRole({ commit, state }, role) {\r\n        console.log('updateRole action开始执行, 角色:', role, '当前role:', state.userInfo.role);\r\n        \r\n        try {\r\n            // 调用API更新角色\r\n            const response = await updateRole(role);\r\n            \r\n            if (response.success) {\r\n                // 提交角色更新到mutations\r\n                commit('updateRole', role);\r\n                console.log('角色更新成功，新角色:', state.userInfo.role);\r\n                \r\n                // 保存到本地存储\r\n                uni.setStorageSync('userRole', role);\r\n                \r\n                return { success: true, role };\r\n            } else {\r\n                return Promise.reject(response.error || { message: '更新用户角色失败' });\r\n            }\r\n        } catch (error) {\r\n            console.error('更新用户角色失败:', error);\r\n            \r\n            // 即使API调用失败，也尝试在本地更新\r\n            try {\r\n                commit('updateRole', role);\r\n                uni.setStorageSync('userRole', role);\r\n            } catch (e) {\r\n                console.error('本地更新角色失败', e);\r\n            }\r\n            \r\n            return Promise.reject(error);\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * @description 用户登出\r\n     * @param {Object} context - Vuex上下文对象\r\n     * @returns {Promise} - 返回Promise对象\r\n     */\r\n    async logout({ commit }) {\r\n        try {\r\n            // 清除用户信息\r\n            commit('CLEAR_USER_INFO');\r\n            \r\n            // 清除本地存储中的认证信息\r\n            uni.removeStorageSync('userId');\r\n            uni.removeStorageSync('token');\r\n            uni.removeStorageSync('userInfo');\r\n            uni.removeStorageSync('user-token');\r\n            uni.removeStorageSync('userBaseInfo');\r\n            uni.removeStorageSync('userInfoData');\r\n            uni.removeStorageSync('userRole');\r\n            \r\n            return { success: true, message: '退出登录成功' };\r\n        } catch (error) {\r\n            console.error('退出登录失败:', error);\r\n            return Promise.reject({ message: '退出登录失败' });\r\n        }\r\n    }\r\n}; "],"names":["uni"],"mappings":";;AAMA,MAAM,EAAE,aAAa,gBAAgB,eAAe;AAAA;AAAA,EAEhD,aAAa,MAAM,QAAQ,QAAQ;AAAA,IAC/B,SAAS;AAAA,IACT,MAAM;AAAA,MACF,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,kBAAkB;AAAA,MAClB,cAAc;AAAA,MACd,aAAa;AAAA,MACb,UAAU;AAAA,MACV,cAAc;AAAA,MACd,UAAU;AAAA,QACN,aAAa;AAAA,QACb,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,cAAc;AAAA,QACd,aAAa;AAAA,QACb,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,MACjB;AAAA,IACJ;AAAA,EACT,CAAK;AAAA,EACD,gBAAgB,CAAC,aAAa,QAAQ,QAAQ,EAAE,SAAS,MAAM,MAAM,EAAE,SAAQ,GAAI;AAAA,EACnF,YAAY,MAAM,QAAQ,QAAQ,EAAE,SAAS,KAAI,CAAE;AACvD;AAEA,MAAe,UAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMX,MAAM,YAAY,EAAE,QAAQ,SAAS;AACjCA,kBAAAA,2DAAY,oCAAoC;AAAA,MAC5C,IAAI,MAAM;AAAA,MACV,MAAM,MAAM;AAAA,IACxB,CAAS;AAED,QAAI;AAEA,UAAI,MAAM,QAAQ,MAAM,SAAS,IAAI;AACjCA,sBAAAA,2DAAY,kBAAkB;AAC9B,eAAO;AAAA,UACH,IAAI,MAAM;AAAA,UACV,QAAQ,MAAM;AAAA,UACd,MAAM,MAAM;AAAA,UACZ,QAAQ,MAAM;AAAA,UACd,kBAAkB,MAAM;AAAA,UACxB,cAAc,MAAM;AAAA,UACpB,aAAa,MAAM;AAAA,UACnB,UAAU,MAAM;AAAA,QACpC;AAAA,MACa;AAEDA,oBAAAA,MAAY,MAAA,OAAA,wCAAA,aAAa;AACzB,YAAM,WAAW,MAAM;AACvBA,oBAAA,MAAA,MAAA,OAAA,wCAAY,YAAY,QAAQ;AAEhC,UAAI,SAAS,SAAS;AAElB,eAAO,iBAAiB,SAAS,IAAI;AACrCA,sBAAAA,MAAA,MAAA,OAAA,wCAAY,6BAA6B;AAAA,UACrC,IAAI,MAAM;AAAA,UACV,MAAM,MAAM;AAAA,QAChC,CAAiB;AAED,eAAO,SAAS;AAAA,MAChC,OAAmB;AACHA,sBAAA,MAAA,MAAA,SAAA,wCAAc,YAAY,SAAS,KAAK;AACxC,eAAO,QAAQ,OAAO,SAAS,SAAS,EAAE,SAAS,WAAU,CAAE;AAAA,MAClE;AAAA,IACJ,SAAQ,OAAO;AACZA,oBAAA,MAAA,MAAA,SAAA,wCAAc,YAAY,KAAK;AAC/B,aAAO,QAAQ,OAAO,KAAK;AAAA,IAC9B;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQD,MAAM,eAAe,EAAE,OAAQ,GAAE,UAAU;AACvC,QAAI;AACA,YAAM,WAAW,MAAM,eAAe,QAAQ;AAE9C,UAAI,SAAS,SAAS;AAElB,eAAO,oBAAoB,QAAQ;AAEnC,eAAO,EAAE,SAAS;MAClC,OAAmB;AACH,eAAO,QAAQ,OAAO,SAAS,SAAS,EAAE,SAAS,WAAU,CAAE;AAAA,MAClE;AAAA,IACJ,SAAQ,OAAO;AACZA,oBAAA,MAAA,MAAA,SAAA,yCAAc,YAAY,KAAK;AAC/B,aAAO,QAAQ,OAAO,KAAK;AAAA,IAC9B;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQD,MAAM,mBAAmB,EAAE,OAAQ,GAAE,cAAc;AAC/C,QAAI;AACA,YAAM,WAAW,MAAM,eAAe,EAAE,UAAU,aAAc,CAAA;AAEhE,UAAI,SAAS,SAAS;AAElB,eAAO,yBAAyB,YAAY;AAE5C,eAAO,EAAE,SAAS;MAClC,OAAmB;AACH,eAAO,QAAQ,OAAO,SAAS,SAAS,EAAE,SAAS,aAAY,CAAE;AAAA,MACpE;AAAA,IACJ,SAAQ,OAAO;AACZA,oBAAc,MAAA,MAAA,SAAA,yCAAA,cAAc,KAAK;AACjC,aAAO,QAAQ,OAAO,KAAK;AAAA,IAC9B;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQD,MAAM,WAAW,EAAE,QAAQ,MAAK,GAAI,MAAM;AACtCA,kBAAAA,MAAA,MAAA,OAAA,yCAAY,8BAA8B,MAAM,WAAW,MAAM,SAAS,IAAI;AAE9E,QAAI;AAEA,YAAM,WAAW,MAAM,WAAW,IAAI;AAEtC,UAAI,SAAS,SAAS;AAElB,eAAO,cAAc,IAAI;AACzBA,4BAAY,MAAA,OAAA,yCAAA,eAAe,MAAM,SAAS,IAAI;AAG9CA,sBAAAA,MAAI,eAAe,YAAY,IAAI;AAEnC,eAAO,EAAE,SAAS,MAAM;MACxC,OAAmB;AACH,eAAO,QAAQ,OAAO,SAAS,SAAS,EAAE,SAAS,WAAU,CAAE;AAAA,MAClE;AAAA,IACJ,SAAQ,OAAO;AACZA,oBAAc,MAAA,MAAA,SAAA,yCAAA,aAAa,KAAK;AAGhC,UAAI;AACA,eAAO,cAAc,IAAI;AACzBA,sBAAAA,MAAI,eAAe,YAAY,IAAI;AAAA,MACtC,SAAQ,GAAG;AACRA,sBAAc,MAAA,MAAA,SAAA,yCAAA,YAAY,CAAC;AAAA,MAC9B;AAED,aAAO,QAAQ,OAAO,KAAK;AAAA,IAC9B;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,MAAM,OAAO,EAAE,UAAU;AACrB,QAAI;AAEA,aAAO,iBAAiB;AAGxBA,0BAAI,kBAAkB,QAAQ;AAC9BA,0BAAI,kBAAkB,OAAO;AAC7BA,0BAAI,kBAAkB,UAAU;AAChCA,0BAAI,kBAAkB,YAAY;AAClCA,0BAAI,kBAAkB,cAAc;AACpCA,0BAAI,kBAAkB,cAAc;AACpCA,0BAAI,kBAAkB,UAAU;AAEhC,aAAO,EAAE,SAAS,MAAM,SAAS,SAAQ;AAAA,IAC5C,SAAQ,OAAO;AACZA,oBAAA,MAAA,MAAA,SAAA,yCAAc,WAAW,KAAK;AAC9B,aAAO,QAAQ,OAAO,EAAE,SAAS,SAAU,CAAA;AAAA,IAC9C;AAAA,EACJ;AACL;;"}