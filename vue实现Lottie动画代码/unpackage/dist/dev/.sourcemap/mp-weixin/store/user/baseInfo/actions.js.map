{"version":3,"file":"actions.js","sources":["store/user/baseInfo/actions.js"],"sourcesContent":["/**\r\n * baseInfo模块的actions\r\n * @module store/user/baseInfo/actions\r\n */\r\n\r\n// 导入学校和专业搜索API\r\nimport {\r\n    searchUndergraduateSchools,\r\n    searchUndergraduateMajors,\r\n    searchGraduateSchools,\r\n    searchGraduateMajors\r\n} from '../APIroute/Login_api/Login_api.js';\r\n\r\n// 直接导入API\r\nconst { getUserInfo, updateUserInfo, updateRole } = {\r\n    // 这里可以替换为真实API实现\r\n    getUserInfo: () => Promise.resolve({ \r\n        success: true, \r\n        data: {\r\n            id: '1566454',\r\n            avatar: '/static/image/defaultAvatar/teacher-man.png',\r\n            name: '张三',\r\n            gender: '男',\r\n            selfIntroduction: '我是一个热爱学习的人',\r\n            wechatNumber: '1234567890',\r\n            phoneNumber: '1234567890',\r\n            password: '123456',\r\n            isRegistered: 0 ,\r\n            userInfo: {\r\n                certificate: 0,\r\n                role: '学生',\r\n                school: '天津大学',\r\n                major: '计算机科学与技术',\r\n                targetSchool: '清华大学',\r\n                targetMajor: '计算机科学与技术',\r\n                studentGrade: '大三',\r\n                teacherGrade: '研一',\r\n            }\r\n        } \r\n    }),\r\n    updateUserInfo: (userInfo) => Promise.resolve({ success: true, data: { userInfo } }),\r\n    updateRole: () => Promise.resolve({ success: true })\r\n};\r\n\r\nexport default {\r\n    /**\r\n     * @description 获取用户信息\r\n     * @param {Object} context - Vuex上下文对象\r\n     * @returns {Promise} - 返回Promise对象\r\n     */\r\n    async getUserInfo({ commit, state }) {\r\n        console.log('getUserInfo action开始执行, 当前state:', {\r\n            id: state.id,\r\n            name: state.name\r\n        });\r\n        \r\n        try {\r\n            // 如果本地已有数据且不是空的，则直接返回\r\n            if (state.name && state.name !== '') {\r\n                console.log('本地已有数据，直接返回state');\r\n                return {\r\n                    id: state.id,\r\n                    avatar: state.avatar,\r\n                    name: state.name,\r\n                    gender: state.gender,\r\n                    selfIntroduction: state.selfIntroduction,\r\n                    wechatNumber: state.wechatNumber,\r\n                    phoneNumber: state.phoneNumber,\r\n                    userInfo: state.userInfo\r\n                };\r\n            }\r\n            \r\n            console.log('本地无数据，请求API');\r\n            const response = await getUserInfo();\r\n            console.log('API返回结果:', response);\r\n            \r\n            if (response.success) {\r\n                // 将返回的用户信息提交到mutations处理\r\n                commit('SET_USER_INFO', response.data);\r\n                console.log('提交SET_USER_INFO后，state变为:', {\r\n                    id: state.id,\r\n                    name: state.name\r\n                });\r\n                \r\n                return response.data;\r\n            } else {\r\n                console.error('API返回失败:', response.error);\r\n                return Promise.reject(response.error || { message: '获取用户信息失败' });\r\n            }\r\n        } catch (error) {\r\n            console.error('获取用户信息失败', error);\r\n            return Promise.reject(error);\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * @description 更新用户信息\r\n     * @param {Object} context - Vuex上下文对象\r\n     * @param {Object} userInfo - 用户信息\r\n     * @returns {Promise} - 返回Promise对象\r\n     */\r\n    async updateUserInfo({ commit }, userInfo) {\r\n        try {\r\n            const response = await updateUserInfo(userInfo);\r\n            \r\n            if (response.success) {\r\n                // 更新用户信息\r\n                commit('UPDATE_USER_INFO', userInfo);\r\n                \r\n                return { success: true };\r\n            } else {\r\n                return Promise.reject(response.error || { message: '更新用户信息失败' });\r\n            }\r\n        } catch (error) {\r\n            console.error('更新用户信息失败', error);\r\n            return Promise.reject(error);\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * @description 更新用户扩展信息\r\n     * @param {Object} context - Vuex上下文对象\r\n     * @param {Object} userInfoData - 用户扩展信息\r\n     * @returns {Promise} - 返回Promise对象\r\n     */\r\n    async updateUserInfoData({ commit }, userInfoData) {\r\n        try {\r\n            const response = await updateUserInfo({ userInfo: userInfoData });\r\n            \r\n            if (response.success) {\r\n                // 更新用户扩展信息\r\n                commit('UPDATE_USER_INFO_DATA', userInfoData);\r\n                \r\n                return { success: true };\r\n            } else {\r\n                return Promise.reject(response.error || { message: '更新用户扩展信息失败' });\r\n            }\r\n        } catch (error) {\r\n            console.error('更新用户扩展信息失败', error);\r\n            return Promise.reject(error);\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * @description 更新用户角色\r\n     * @param {Object} context - Vuex上下文对象\r\n     * @param {string} role - 用户角色\r\n     * @returns {Promise} - 返回Promise对象\r\n     */\r\n    async updateRole({ commit, state }, role) {\r\n        console.log('updateRole action开始执行, 角色:', role, '当前role:', state.userInfo.role);\r\n        \r\n        try {\r\n            // 调用API更新角色\r\n            const response = await updateRole(role);\r\n            \r\n            if (response.success) {\r\n                // 提交角色更新到mutations\r\n                commit('updateRole', role);\r\n                console.log('角色更新成功，新角色:', state.userInfo.role);\r\n                \r\n                // 保存到本地存储\r\n                uni.setStorageSync('userRole', role);\r\n                \r\n                return { success: true, role };\r\n            } else {\r\n                return Promise.reject(response.error || { message: '更新用户角色失败' });\r\n            }\r\n        } catch (error) {\r\n            console.error('更新用户角色失败:', error);\r\n            \r\n            // 即使API调用失败，也尝试在本地更新\r\n            try {\r\n                commit('updateRole', role);\r\n                uni.setStorageSync('userRole', role);\r\n            } catch (e) {\r\n                console.error('本地更新角色失败', e);\r\n            }\r\n            \r\n            return Promise.reject(error);\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * @description 用户登出\r\n     * @param {Object} context - Vuex上下文对象\r\n     * @returns {Promise} - 返回Promise对象\r\n     */\r\n    async logout({ commit }) {\r\n        try {\r\n            // 清除用户信息\r\n            commit('CLEAR_USER_INFO');\r\n            \r\n            // 清除本地存储中的认证信息\r\n            uni.removeStorageSync('userId');\r\n            uni.removeStorageSync('token');\r\n            uni.removeStorageSync('userInfo');\r\n            uni.removeStorageSync('user-token');\r\n            uni.removeStorageSync('userBaseInfo');\r\n            uni.removeStorageSync('userInfoData');\r\n            uni.removeStorageSync('userRole');\r\n            \r\n            return { success: true, message: '退出登录成功' };\r\n        } catch (error) {\r\n            console.error('退出登录失败:', error);\r\n            return Promise.reject({ message: '退出登录失败' });\r\n        }\r\n    },\r\n    \r\n    // ===================== 本科学校搜索相关 actions =====================\r\n    \r\n    /**\r\n     * @description 搜索本科学校\r\n     * @param {Object} context - Vuex上下文对象\r\n     * @param {Object} payload - 包含keyword和loadMore的参数对象\r\n     * @returns {Promise} - 返回Promise对象\r\n     */\r\n    async searchUndergraduateSchools({ commit, state }, { keyword, loadMore = false }) {\r\n        console.log('搜索本科学校:', keyword, '加载更多:', loadMore);\r\n        \r\n        try {\r\n            const searchData = state.undergraduateSchoolSearch;\r\n            \r\n            // 如果是加载更多，检查是否还有更多数据\r\n            if (loadMore && !searchData.hasMore) {\r\n                console.log('没有更多数据了');\r\n                return { success: true, data: { hasMore: false } };\r\n            }\r\n            \r\n            // 如果不是加载更多，重置页码和选项\r\n            if (!loadMore) {\r\n                commit('SET_UNDERGRADUATE_SCHOOL_SEARCH_KEYWORD', keyword);\r\n                commit('RESET_UNDERGRADUATE_SCHOOL_SEARCH');\r\n            }\r\n            \r\n            // 设置加载状态\r\n            commit('SET_UNDERGRADUATE_SCHOOL_LOADING', true);\r\n            \r\n            const currentPage = loadMore ? searchData.currentPage + 1 : 1;\r\n            \r\n            const response = await searchUndergraduateSchools({\r\n                keyword: keyword,\r\n                page: currentPage,\r\n                pageSize: searchData.pageSize\r\n            });\r\n            \r\n            console.log('本科学校搜索API返回:', response);\r\n            \r\n            if (response.success && response.data) {\r\n                const newOptions = response.data.items || [];\r\n                const hasMore = response.data.hasMore !== false && \r\n                                newOptions.length >= searchData.pageSize;\r\n                \r\n                // 更新搜索结果\r\n                commit('SET_UNDERGRADUATE_SCHOOL_OPTIONS', {\r\n                    options: newOptions,\r\n                    append: loadMore,\r\n                    hasMore: hasMore,\r\n                    currentPage: currentPage\r\n                });\r\n                \r\n                console.log(`本科学校搜索完成: 关键词=\"${keyword}\", 页码=${currentPage}, 结果数=${newOptions.length}, 还有更多=${hasMore}`);\r\n                \r\n                return { \r\n                    success: true, \r\n                    data: { \r\n                        options: newOptions,\r\n                        hasMore: hasMore,\r\n                        currentPage: currentPage\r\n                    } \r\n                };\r\n            } else {\r\n                console.error('本科学校搜索失败:', response.error);\r\n                return Promise.reject(response.error || { message: '搜索学校失败' });\r\n            }\r\n        } catch (error) {\r\n            console.error('搜索本科学校出错:', error);\r\n            return Promise.reject(error);\r\n        } finally {\r\n            commit('SET_UNDERGRADUATE_SCHOOL_LOADING', false);\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * @description 搜索本科专业\r\n     * @param {Object} context - Vuex上下文对象\r\n     * @param {Object} payload - 包含keyword和loadMore的参数对象\r\n     * @returns {Promise} - 返回Promise对象\r\n     */\r\n    async searchUndergraduateMajors({ commit, state }, { keyword, loadMore = false }) {\r\n        console.log('搜索本科专业:', keyword, '加载更多:', loadMore);\r\n        \r\n        try {\r\n            const searchData = state.undergraduateMajorSearch;\r\n            \r\n            // 如果是加载更多，检查是否还有更多数据\r\n            if (loadMore && !searchData.hasMore) {\r\n                console.log('没有更多数据了');\r\n                return { success: true, data: { hasMore: false } };\r\n            }\r\n            \r\n            // 如果不是加载更多，重置页码和选项\r\n            if (!loadMore) {\r\n                commit('SET_UNDERGRADUATE_MAJOR_SEARCH_KEYWORD', keyword);\r\n                commit('RESET_UNDERGRADUATE_MAJOR_SEARCH');\r\n            }\r\n            \r\n            // 设置加载状态\r\n            commit('SET_UNDERGRADUATE_MAJOR_LOADING', true);\r\n            \r\n            const currentPage = loadMore ? searchData.currentPage + 1 : 1;\r\n            \r\n            const response = await searchUndergraduateMajors({\r\n                keyword: keyword,\r\n                page: currentPage,\r\n                pageSize: searchData.pageSize\r\n            });\r\n            \r\n            console.log('本科专业搜索API返回:', response);\r\n            \r\n            if (response.success && response.data) {\r\n                const newOptions = response.data.items || [];\r\n                const hasMore = response.data.hasMore !== false && \r\n                                newOptions.length >= searchData.pageSize;\r\n                \r\n                // 更新搜索结果\r\n                commit('SET_UNDERGRADUATE_MAJOR_OPTIONS', {\r\n                    options: newOptions,\r\n                    append: loadMore,\r\n                    hasMore: hasMore,\r\n                    currentPage: currentPage\r\n                });\r\n                \r\n                console.log(`本科专业搜索完成: 关键词=\"${keyword}\", 页码=${currentPage}, 结果数=${newOptions.length}, 还有更多=${hasMore}`);\r\n                \r\n                return { \r\n                    success: true, \r\n                    data: { \r\n                        options: newOptions,\r\n                        hasMore: hasMore,\r\n                        currentPage: currentPage\r\n                    } \r\n                };\r\n            } else {\r\n                console.error('本科专业搜索失败:', response.error);\r\n                return Promise.reject(response.error || { message: '搜索专业失败' });\r\n            }\r\n        } catch (error) {\r\n            console.error('搜索本科专业出错:', error);\r\n            return Promise.reject(error);\r\n        } finally {\r\n            commit('SET_UNDERGRADUATE_MAJOR_LOADING', false);\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * 选择本科学校\r\n     * @param {Object} context - Vuex上下文对象\r\n     * @param {Object} payload - 学校信息\r\n     * @param {number} payload.id - 学校ID\r\n     * @param {string} payload.name - 学校名称\r\n     */\r\n    selectUndergraduateSchool({ commit }, { id, name }) {\r\n        commit('SET_UNDERGRADUATE_SELECTED_SCHOOL', { id, name });\r\n    },\r\n    \r\n    /**\r\n     * 选择本科专业\r\n     * @param {Object} context - Vuex上下文对象\r\n     * @param {Object} payload - 专业信息\r\n     * @param {number} payload.id - 专业ID\r\n     * @param {string} payload.name - 专业名称\r\n     */\r\n    selectUndergraduateMajor({ commit }, { id, name }) {\r\n        commit('SET_UNDERGRADUATE_SELECTED_MAJOR', { id, name });\r\n    },\r\n    \r\n    // ===================== 研究生学校搜索相关 actions =====================\r\n    \r\n    /**\r\n     * 搜索研究生学校列表\r\n     * @param {Object} context - Vuex上下文对象\r\n     * @param {Object} payload - 请求参数\r\n     * @param {string} payload.keyword - 搜索关键词\r\n     * @param {boolean} [payload.loadMore=false] - 是否加载更多数据\r\n     * @returns {Promise} 返回学校搜索结果\r\n     */\r\n    async searchGraduateSchools({ commit, state }, { keyword, loadMore = false }) {\r\n        const userId = state.id;\r\n        \r\n        // 如果是新搜索，重置分页；如果是加载更多，使用当前页+1\r\n        const currentPage = loadMore ? state.graduateSchoolSearch.currentPage + 1 : 1;\r\n        \r\n        // 设置加载状态\r\n        commit('SET_GRADUATE_SCHOOL_PAGINATION', { isLoading: true });\r\n        \r\n        // 更新搜索关键词\r\n        if (!loadMore) {\r\n            commit('SET_GRADUATE_SCHOOL_SEARCH_KEYWORD', keyword);\r\n        }\r\n        \r\n        const params = {\r\n            userId: userId,\r\n            keyword: keyword,\r\n            currentPage: currentPage,\r\n            pageSize: state.graduateSchoolSearch.pageSize\r\n        };\r\n        \r\n        return new Promise((resolve, reject) => {\r\n            searchGraduateSchools(params)\r\n                .then(response => {\r\n                    if (response && response.data) {\r\n                        // 更新学校选项列表\r\n                        commit('SET_GRADUATE_SCHOOL_OPTIONS', {\r\n                            options: response.data,\r\n                            isLoadMore: loadMore\r\n                        });\r\n                        \r\n                        // 更新分页信息\r\n                        commit('SET_GRADUATE_SCHOOL_PAGINATION', {\r\n                            currentPage: currentPage,\r\n                            hasMore: response.hasMore || false,\r\n                            isLoading: false\r\n                        });\r\n                    }\r\n                    resolve(response);\r\n                })\r\n                .catch(error => {\r\n                    commit('SET_GRADUATE_SCHOOL_PAGINATION', { isLoading: false });\r\n                    reject(error);\r\n                });\r\n        });\r\n    },\r\n    \r\n    /**\r\n     * @description 搜索研究生专业\r\n     * @param {Object} context - Vuex上下文对象\r\n     * @param {Object} payload - 包含keyword和loadMore的参数对象\r\n     * @returns {Promise} - 返回Promise对象\r\n     */\r\n    async searchGraduateMajors({ commit, state }, { keyword, loadMore = false }) {\r\n        console.log('搜索研究生专业:', keyword, '加载更多:', loadMore);\r\n        \r\n        try {\r\n            const searchData = state.graduateMajorSearch;\r\n            \r\n            // 如果是加载更多，检查是否还有更多数据\r\n            if (loadMore && !searchData.hasMore) {\r\n                console.log('没有更多数据了');\r\n                return { success: true, data: { hasMore: false } };\r\n            }\r\n            \r\n            // 如果不是加载更多，重置页码和选项\r\n            if (!loadMore) {\r\n                commit('SET_GRADUATE_MAJOR_SEARCH_KEYWORD', keyword);\r\n                // 重置搜索状态\r\n                commit('SET_GRADUATE_MAJOR_OPTIONS', {\r\n                    options: [],\r\n                    append: false,\r\n                    hasMore: true,\r\n                    currentPage: 1\r\n                });\r\n            }\r\n            \r\n            // 设置加载状态\r\n            commit('SET_GRADUATE_SCHOOL_PAGINATION', {\r\n                currentPage: searchData.currentPage,\r\n                hasMore: searchData.hasMore,\r\n                isLoading: true\r\n            });\r\n            \r\n            const currentPage = loadMore ? searchData.currentPage + 1 : 1;\r\n            \r\n            const response = await searchGraduateMajors({\r\n                keyword: keyword,\r\n                page: currentPage,\r\n                pageSize: searchData.pageSize\r\n            });\r\n            \r\n            console.log('研究生专业搜索API返回:', response);\r\n            \r\n            if (response.success && response.data) {\r\n                const newOptions = response.data.items || [];\r\n                const hasMore = response.data.hasMore !== false && \r\n                                newOptions.length >= searchData.pageSize;\r\n                \r\n                // 更新搜索结果\r\n                commit('SET_GRADUATE_MAJOR_OPTIONS', {\r\n                    options: newOptions,\r\n                    append: loadMore,\r\n                    hasMore: hasMore,\r\n                    currentPage: currentPage\r\n                });\r\n                \r\n                console.log(`研究生专业搜索完成: 关键词=\"${keyword}\", 页码=${currentPage}, 结果数=${newOptions.length}, 还有更多=${hasMore}`);\r\n                \r\n                return { \r\n                    success: true, \r\n                    data: { \r\n                        options: newOptions,\r\n                        hasMore: hasMore,\r\n                        currentPage: currentPage\r\n                    } \r\n                };\r\n            } else {\r\n                console.error('研究生专业搜索失败:', response.error);\r\n                return Promise.reject(response.error || { message: '搜索专业失败' });\r\n            }\r\n        } catch (error) {\r\n            console.error('搜索研究生专业出错:', error);\r\n            return Promise.reject(error);\r\n        } finally {\r\n            // 结束加载状态\r\n            commit('SET_GRADUATE_SCHOOL_PAGINATION', {\r\n                currentPage: state.graduateMajorSearch.currentPage,\r\n                hasMore: state.graduateMajorSearch.hasMore,\r\n                isLoading: false\r\n            });\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * 选择研究生学校\r\n     * @param {Object} context - Vuex上下文对象\r\n     * @param {Object} payload - 学校信息\r\n     * @param {number} payload.id - 学校ID\r\n     * @param {string} payload.name - 学校名称\r\n     */\r\n    selectGraduateSchool({ commit }, { id, name }) {\r\n        commit('SET_GRADUATE_SELECTED_SCHOOL', { id, name });\r\n        // 清空专业选择\r\n        commit('SET_GRADUATE_SELECTED_MAJOR', { id: null, name: '' });\r\n        commit('SET_GRADUATE_MAJOR_OPTIONS', []);\r\n    },\r\n    \r\n    /**\r\n     * 选择研究生专业\r\n     * @param {Object} context - Vuex上下文对象\r\n     * @param {Object} payload - 专业信息\r\n     * @param {number} payload.id - 专业ID\r\n     * @param {string} payload.name - 专业名称\r\n     */\r\n    selectGraduateMajor({ commit }, { id, name }) {\r\n        commit('SET_GRADUATE_SELECTED_MAJOR', { id, name });\r\n    }\r\n}; "],"names":["getUserInfo","updateUserInfo","updateRole","userInfo","actions","commit","state","uni","response","error","userInfoData","role","e","keyword","loadMore","searchData","currentPage","searchUndergraduateSchools","newOptions","hasMore","searchUndergraduateMajors","id","name","userId","params","resolve","reject","searchGraduateSchools","searchGraduateMajors"],"mappings":"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"}