{"version":3,"file":"actions.js","sources":["store/user/chat/actions.js"],"sourcesContent":["/**\r\n * chat模块的actions\r\n * @module store/user/chat/actions\r\n */\r\n\r\nexport default {\r\n        // 初始化IM连接\r\n    async initIM({ commit, dispatch }, { userId, token }) {\r\n      commit('SET_CONNECTION_STATUS', { isConnected: false, isConnecting: true })\r\n      \r\n      try {\r\n        // 初始化IMBox SDK\r\n        await IMBox.init({\r\n          appId: 'your-app-id',\r\n          userId,\r\n          token\r\n        })\r\n        \r\n        // 设置监听器\r\n        IMBox.on('message', (message) => {\r\n          dispatch('handleNewMessage', message)\r\n        })\r\n        \r\n        IMBox.on('connection-status-changed', (status) => {\r\n          commit('SET_CONNECTION_STATUS', {\r\n            isConnected: status === 'connected',\r\n            isConnecting: status === 'connecting'\r\n          })\r\n        })\r\n        \r\n        // 连接成功\r\n        commit('SET_CONNECTION_STATUS', { isConnected: true, isConnecting: false })\r\n        \r\n        // 加载会话列表\r\n        await dispatch('loadSessions')\r\n        \r\n      } catch (error) {\r\n        commit('SET_CONNECTION_ERROR', error)\r\n        commit('SET_CONNECTION_STATUS', { isConnected: false, isConnecting: false })\r\n        throw error\r\n      }\r\n    },\r\n    \r\n    // 加载会话列表\r\n    async loadSessions({ commit }) {\r\n      try {\r\n        const sessions = await IMBox.getSessions()\r\n        sessions.forEach(session => {\r\n          commit('ADD_OR_UPDATE_SESSION', {\r\n            sessionId: session.sessionId,\r\n            sessionType: session.type,\r\n            targetId: session.targetId,\r\n            title: session.title,\r\n            avatar: session.avatar,\r\n            lastMessage: session.lastMessage,\r\n            unreadCount: session.unreadCount,\r\n            lastMessageTime: session.lastMessageTime\r\n          })\r\n        })\r\n      } catch (error) {\r\n        console.error('加载会话列表失败:', error)\r\n        throw error\r\n      }\r\n    },\r\n    \r\n    // 处理新消息\r\n    async handleNewMessage({ commit, state }, message) {\r\n      const { sessionId } = message\r\n      \r\n      // 添加到消息列表\r\n      commit('ADD_MESSAGE', { sessionId, message })\r\n      \r\n      // 更新会话最后消息\r\n      commit('UPDATE_SESSION_LAST_MESSAGE', { sessionId, message })\r\n      \r\n      // 如果当前不是这个会话，增加未读数\r\n      if (state.currentSession.sessionId !== sessionId || !state.currentSession.isActive) {\r\n        const session = state.sessions.byId[sessionId]\r\n        if (session) {\r\n          commit('ADD_OR_UPDATE_SESSION', {\r\n            sessionId,\r\n            unreadCount: (session.unreadCount || 0) + 1\r\n          })\r\n        }\r\n      }\r\n      \r\n      // 如果是当前会话且活跃，标记为已读\r\n      if (state.currentSession.sessionId === sessionId && state.currentSession.isActive) {\r\n        await IMBox.markAsRead(sessionId)\r\n      }\r\n    },\r\n    \r\n    // 发送消息\r\n    async sendMessage({ commit, state }, { sessionId, content, type = 'text' }) {\r\n      const message = {\r\n        id: `temp-${Date.now()}`, // 临时ID，发送成功后会替换\r\n        type,\r\n        content,\r\n        senderId: state.currentUser.userId,\r\n        time: Math.floor(Date.now() / 1000),\r\n        status: 'sending',\r\n        isSelf: true\r\n      }\r\n      \r\n      // 先添加到本地\r\n      commit('ADD_MESSAGE', { sessionId, message })\r\n      \r\n      try {\r\n        // 调用IMBox发送\r\n        const sentMessage = await IMBox.sendMessage({\r\n          sessionId,\r\n          type,\r\n          content\r\n        })\r\n        \r\n        // 更新消息状态和ID\r\n        commit('UPDATE_MESSAGE_STATUS', {\r\n          sessionId,\r\n          messageId: message.id,\r\n          status: 'sent'\r\n        })\r\n        \r\n        // 更新会话最后消息\r\n        commit('UPDATE_SESSION_LAST_MESSAGE', {\r\n          sessionId,\r\n          message: sentMessage\r\n        })\r\n        \r\n        return sentMessage\r\n      } catch (error) {\r\n        commit('UPDATE_MESSAGE_STATUS', {\r\n          sessionId,\r\n          messageId: message.id,\r\n          status: 'failed'\r\n        })\r\n        throw error\r\n      }\r\n    },\r\n    \r\n    // 加载历史消息\r\n    async loadHistoryMessages({ commit, state }, { sessionId, lastMessageId }) {\r\n      if (state.messages.bySessionId[sessionId]?.isLoading) return\r\n      \r\n      commit('SET_MESSAGES_LOADING', { sessionId, isLoading: true })\r\n      \r\n      try {\r\n        const messages = await IMBox.getHistoryMessages({\r\n          sessionId,\r\n          before: lastMessageId,\r\n          limit: 20\r\n        })\r\n        \r\n        if (messages.length > 0) {\r\n          commit('PREPEND_MESSAGES', { sessionId, messages })\r\n        } else {\r\n          commit('SET_NO_MORE_MESSAGES', { sessionId })\r\n        }\r\n      } catch (error) {\r\n        console.error('加载历史消息失败:', error)\r\n        throw error\r\n      } finally {\r\n        commit('SET_MESSAGES_LOADING', { sessionId, isLoading: false })\r\n      }\r\n    },\r\n    \r\n    // 切换会话\r\n    async switchSession({ commit, dispatch }, sessionId) {\r\n      // 更新当前会话\r\n      const session = this.state.sessions.byId[sessionId]\r\n      commit('SET_CURRENT_SESSION', {\r\n        sessionId,\r\n        targetId: session.targetId,\r\n        sessionType: session.sessionType,\r\n        isActive: true,\r\n        unreadCount: 0\r\n      })\r\n      \r\n      // 重置会话未读数\r\n      commit('ADD_OR_UPDATE_SESSION', {\r\n        sessionId,\r\n        unreadCount: 0\r\n      })\r\n      \r\n      // 标记为已读\r\n      await IMBox.markAsRead(sessionId)\r\n      \r\n      // 加载消息\r\n      if (!this.state.messages.bySessionId[sessionId]) {\r\n        await dispatch('loadHistoryMessages', { sessionId })\r\n      }\r\n    }\r\n}; \r\n"],"names":["actions","commit","dispatch","userId","token","message","status","error","session","uni","state","sessionId","content","type","sentMessage","lastMessageId","_a","messages"],"mappings":"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"}