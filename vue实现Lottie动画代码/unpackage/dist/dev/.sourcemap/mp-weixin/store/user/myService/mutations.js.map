{"version":3,"file":"mutations.js","sources":["store/user/myService/mutations.js"],"sourcesContent":["/**\r\n * myService模块的mutations\r\n * @module store/user/myService/mutations\r\n */\r\n\r\nexport default {\r\n    /**\r\n     * 设置用户服务列表\r\n     * @param {Object} state - 当前模块的状态\r\n     * @param {Array} services - 服务数组\r\n     */\r\n    SET_USER_SERVICES(state, services) {\r\n        state.service = services;\r\n    },\r\n    \r\n    /**\r\n     * 用户修改服务信息\r\n     * @param {Object} state - 当前模块的状态\r\n     * @param {Object} payload - 包含服务ID和更新信息的对象\r\n     * @param {string} payload.id - 要更新的服务ID\r\n     * @param {Object} payload.updatedInfo - 用户修改后的服务信息\r\n     */\r\n    UPDATE_SERVICE_BY_USER(state, { id, updatedInfo }) {\r\n        const serviceIndex = state.service.findIndex(service => service.id === id);\r\n        if (serviceIndex !== -1) {\r\n            // 合并原有信息和更新的信息\r\n            state.service[serviceIndex] = {\r\n                ...state.service[serviceIndex],\r\n                ...updatedInfo,\r\n                updateTime: new Date().toISOString().split('T')[0] // 添加更新时间\r\n            };\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * 添加新服务\r\n     * @param {Object} state - 当前模块的状态\r\n     * @param {Object} serviceData - 新服务数据\r\n     */\r\n    ADD_SERVICE(state, serviceData) {\r\n        // 确保服务有创建和更新时间\r\n        const now = new Date().toISOString().split('T')[0];\r\n        const newService = {\r\n            ...serviceData,\r\n            createTime: serviceData.createTime || now,\r\n            updateTime: serviceData.updateTime || now,\r\n            status: serviceData.status || 'active'\r\n        };\r\n        \r\n        // 添加到服务列表的最前面，使最新的服务优先显示\r\n        state.service.unshift(newService);\r\n    },\r\n    \r\n    /**\r\n     * 删除服务\r\n     * @param {Object} state - 当前模块的状态\r\n     * @param {String} serviceId - 要删除的服务ID\r\n     */\r\n    DELETE_SERVICE(state, serviceId) {\r\n        state.service = state.service.filter(service => service.id !== serviceId);\r\n    },\r\n    \r\n    /**\r\n     * 设置当前正在编辑的服务\r\n     * @param {Object} state - 当前模块的状态\r\n     * @param {Object|null} service - 服务对象或null\r\n     */\r\n    SET_CURRENT_EDITING_SERVICE(state, service) {\r\n        state.currentEditingService = service;\r\n    },\r\n    \r\n    /**\r\n     * 设置服务过滤条件\r\n     * @param {Object} state - 当前模块的状态\r\n     * @param {Object} filter - 过滤条件\r\n     */\r\n    SET_SERVICE_FILTER(state, filter) {\r\n        state.filter = {\r\n            ...state.filter,\r\n            ...filter\r\n        };\r\n    },\r\n    \r\n    /**\r\n     * 添加服务封面图片\r\n     * @param {Object} state - 当前模块的状态\r\n     * @param {Object} payload - 包含服务ID和图片URL的对象\r\n     * @param {String} payload.id - 要更新的服务ID\r\n     * @param {String} payload.imageUrl - 图片URL\r\n     */\r\n    ADD_SERVICE_COVER_IMAGE(state, { id, imageUrl }) {\r\n        const serviceIndex = state.service.findIndex(service => service.id === id);\r\n        if (serviceIndex !== -1) {\r\n            const service = state.service[serviceIndex];\r\n            \r\n            // 初始化图片数组（如果不存在）\r\n            const imageUrls = service.imageUrls || [];\r\n            \r\n            // 更新服务数据\r\n            state.service[serviceIndex] = {\r\n                ...service,\r\n                image: imageUrl, // 主封面图片\r\n                imageUrls: [...imageUrls, imageUrl], // 所有图片列表\r\n                updateTime: new Date().toISOString().split('T')[0]\r\n            };\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * 删除服务封面图片\r\n     * @param {Object} state - 当前模块的状态\r\n     * @param {Object} payload - 包含服务ID和图片索引的对象\r\n     * @param {String} payload.id - 要更新的服务ID\r\n     * @param {Number} payload.index - 要删除的图片索引\r\n     */\r\n    DELETE_SERVICE_COVER_IMAGE(state, { id, index }) {\r\n        const serviceIndex = state.service.findIndex(service => service.id === id);\r\n        if (serviceIndex !== -1) {\r\n            const service = state.service[serviceIndex];\r\n            \r\n            // 确保图片数组存在\r\n            if (service.imageUrls && service.imageUrls.length > index) {\r\n                // 创建新的图片数组，排除要删除的图片\r\n                const newImageUrls = [...service.imageUrls];\r\n                newImageUrls.splice(index, 1);\r\n                \r\n                // 更新服务数据\r\n                state.service[serviceIndex] = {\r\n                    ...service,\r\n                    // 如果主封面被删除，则使用第一张图片或空字符串\r\n                    image: newImageUrls.length > 0 ? newImageUrls[0] : '',\r\n                    imageUrls: newImageUrls,\r\n                    updateTime: new Date().toISOString().split('T')[0]\r\n                };\r\n            }\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * 设置服务附件链接\r\n     * @param {Object} state - 当前模块的状态\r\n     * @param {Object} payload - 包含服务ID和附件链接的对象\r\n     * @param {String} payload.id - 要更新的服务ID\r\n     * @param {String} payload.fileLink - 附件链接\r\n     */\r\n    SET_SERVICE_FILE_LINK(state, { id, fileLink }) {\r\n        const serviceIndex = state.service.findIndex(service => service.id === id);\r\n        if (serviceIndex !== -1) {\r\n            // 更新服务附件链接\r\n            state.service[serviceIndex] = {\r\n                ...state.service[serviceIndex],\r\n                fileLink,\r\n                updateTime: new Date().toISOString().split('T')[0]\r\n            };\r\n        }\r\n    }\r\n}; "],"names":["mutations","state","services","id","updatedInfo","serviceIndex","service","serviceData","now","newService","serviceId","filter","imageUrl","imageUrls","index","newImageUrls","fileLink"],"mappings":"aAKA,MAAeA,EAAA,CAMX,kBAAkBC,EAAOC,EAAU,CAC/BD,EAAM,QAAUC,CACnB,EASD,uBAAuBD,EAAO,CAAE,GAAAE,EAAI,YAAAC,CAAW,EAAI,CAC/C,MAAMC,EAAeJ,EAAM,QAAQ,UAAUK,GAAWA,EAAQ,KAAOH,CAAE,EACrEE,IAAiB,KAEjBJ,EAAM,QAAQI,CAAY,EAAI,CAC1B,GAAGJ,EAAM,QAAQI,CAAY,EAC7B,GAAGD,EACH,WAAY,IAAI,OAAO,YAAa,EAAC,MAAM,GAAG,EAAE,CAAC,CACjE,EAEK,EAOD,YAAYH,EAAOM,EAAa,CAE5B,MAAMC,EAAM,IAAI,OAAO,YAAa,EAAC,MAAM,GAAG,EAAE,CAAC,EAC3CC,EAAa,CACf,GAAGF,EACH,WAAYA,EAAY,YAAcC,EACtC,WAAYD,EAAY,YAAcC,EACtC,OAAQD,EAAY,QAAU,QAC1C,EAGQN,EAAM,QAAQ,QAAQQ,CAAU,CACnC,EAOD,eAAeR,EAAOS,EAAW,CAC7BT,EAAM,QAAUA,EAAM,QAAQ,OAAOK,GAAWA,EAAQ,KAAOI,CAAS,CAC3E,EAOD,4BAA4BT,EAAOK,EAAS,CACxCL,EAAM,sBAAwBK,CACjC,EAOD,mBAAmBL,EAAOU,EAAQ,CAC9BV,EAAM,OAAS,CACX,GAAGA,EAAM,OACT,GAAGU,CACf,CACK,EASD,wBAAwBV,EAAO,CAAE,GAAAE,EAAI,SAAAS,CAAQ,EAAI,CAC7C,MAAMP,EAAeJ,EAAM,QAAQ,UAAUK,GAAWA,EAAQ,KAAOH,CAAE,EACzE,GAAIE,IAAiB,GAAI,CACrB,MAAMC,EAAUL,EAAM,QAAQI,CAAY,EAGpCQ,EAAYP,EAAQ,WAAa,GAGvCL,EAAM,QAAQI,CAAY,EAAI,CAC1B,GAAGC,EACH,MAAOM,EACP,UAAW,CAAC,GAAGC,EAAWD,CAAQ,EAClC,WAAY,IAAI,OAAO,YAAa,EAAC,MAAM,GAAG,EAAE,CAAC,CACjE,CACS,CACJ,EASD,2BAA2BX,EAAO,CAAE,GAAAE,EAAI,MAAAW,CAAK,EAAI,CAC7C,MAAMT,EAAeJ,EAAM,QAAQ,UAAUK,GAAWA,EAAQ,KAAOH,CAAE,EACzE,GAAIE,IAAiB,GAAI,CACrB,MAAMC,EAAUL,EAAM,QAAQI,CAAY,EAG1C,GAAIC,EAAQ,WAAaA,EAAQ,UAAU,OAASQ,EAAO,CAEvD,MAAMC,EAAe,CAAC,GAAGT,EAAQ,SAAS,EAC1CS,EAAa,OAAOD,EAAO,CAAC,EAG5Bb,EAAM,QAAQI,CAAY,EAAI,CAC1B,GAAGC,EAEH,MAAOS,EAAa,OAAS,EAAIA,EAAa,CAAC,EAAI,GACnD,UAAWA,EACX,WAAY,IAAI,OAAO,YAAa,EAAC,MAAM,GAAG,EAAE,CAAC,CACrE,CACa,CACJ,CACJ,EASD,sBAAsBd,EAAO,CAAE,GAAAE,EAAI,SAAAa,CAAQ,EAAI,CAC3C,MAAMX,EAAeJ,EAAM,QAAQ,UAAUK,GAAWA,EAAQ,KAAOH,CAAE,EACrEE,IAAiB,KAEjBJ,EAAM,QAAQI,CAAY,EAAI,CAC1B,GAAGJ,EAAM,QAAQI,CAAY,EAC7B,SAAAW,EACA,WAAY,IAAI,OAAO,YAAa,EAAC,MAAM,GAAG,EAAE,CAAC,CACjE,EAEK,CACL"}