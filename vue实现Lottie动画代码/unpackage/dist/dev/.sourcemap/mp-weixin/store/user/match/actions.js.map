{"version":3,"file":"actions.js","sources":["store/user/match/actions.js"],"sourcesContent":["/**\n * match模块的actions\n * @module store/user/match/actions\n */\n\nimport { getMatchTeachers, getTeacherDetail } from './api';\n\nexport default {\n    /**\n     * 更新学校列表\n     * @param {Object} context - Vuex上下文对象\n     * @param {String} schoolName - 学校名称\n     */\n    updateSchoolList({ commit }, schoolName) {\n        commit('SET_SCHOOL_LIST', schoolName)\n    },\n\n    /**\n     * 更新专业课列表\n     * @param {Object} context - Vuex上下文对象\n     * @param {String} professionalName - 专业课名称\n     */\n    updateProfessionalList({ commit }, professionalName) {\n        commit('SET_PROFESSIONAL_LIST', professionalName)\n    },\n\n    /**\n     * 更新筛选模式\n     * @param {Object} context - Vuex上下文对象\n     * @param {Object} filterMode - 筛选模式对象\n     */\n    updateFilterMode({ commit }, filterMode) {\n        commit('SET_FILTER_MODE', filterMode)\n    },\n\n    /**\n     * 更新排序模式\n     * @param {Object} context - Vuex上下文对象\n     * @param {String} sortMode - 排序模式\n     */\n    updateSortMode({ commit }, sortMode) {\n        commit('SET_SORT_MODE', sortMode)\n    },\n\n    /**\n     * 更新非专业课列表\n     * @param {Object} context - Vuex上下文对象\n     * @param {Object} nonProfessionalList - 非专业课列表对象\n     */\n    updateNonProfessionalList({ commit }, nonProfessionalList) {\n        commit('SET_NON_PROFESSIONAL_LIST', nonProfessionalList)\n    },\n\n    /**\n     * 获取匹配的教师列表\n     * @param {Object} context - Vuex上下文对象\n     * @returns {Promise} 请求Promise\n     */\n    fetchMatchTeachers({ commit, state }) {\n        // 这里可以添加实际的API请求逻辑\n        // 但由于当前示例没有API调用，所以我们只是返回一个模拟的Promise\n        return new Promise(resolve => {\n            setTimeout(() => {\n                // 使用已有数据，不做变更\n                // 如果有API调用，应该在这里提交数据变更\n                resolve()\n            }, 500)\n        })\n    },\n\n    /**\n     * 加载更多教师数据\n     * @param {Object} context - Vuex上下文对象\n     * @returns {Promise} 请求Promise\n     */\n    loadMoreTeachers({ commit, state }) {\n        // 这里可以添加实际的加载更多API请求逻辑\n        // 但由于当前示例没有API调用，所以我们只是返回一个模拟的Promise\n        return new Promise(resolve => {\n            setTimeout(() => {\n                // 使用已有数据，不做变更\n                // 如果有API调用，应该在这里提交数据变更\n                resolve()\n            }, 500)\n        })\n    },\n\n    /**\n     * 获取匹配的老师列表\n     * @param {Object} param0 - commit函数和state状态\n     * @param {Object} payload - 请求参数\n     * @return {Promise} 请求结果的Promise\n     */\n    getMatchTeachers({ commit }, payload) {\n        return new Promise((resolve, reject) => {\n            getMatchTeachers(payload).then(res => {\n                if (res.code === 0) {\n                    commit('SET_MATCH_LIST', res.data);\n                    resolve(res);\n                } else {\n                    reject(res);\n                }\n            }).catch(error => {\n                reject(error);\n            });\n        });\n    },\n\n    /**\n     * 获取老师详细信息\n     * @param {Object} param0 - commit函数和state状态\n     * @param {String} teacherId - 老师ID\n     * @return {Promise} 请求结果的Promise\n     */\n    getTeacherDetail({ commit }, teacherId) {\n        return new Promise((resolve, reject) => {\n            getTeacherDetail(teacherId).then(res => {\n                if (res.code === 0) {\n                    commit('UPDATE_TEACHER_DETAIL', {\n                        id: teacherId,\n                        detailInfo: res.data\n                    });\n                    resolve(res);\n                } else {\n                    reject(res);\n                }\n            }).catch(error => {\n                reject(error);\n            });\n        });\n    }\n} "],"names":["getMatchTeachers","getTeacherDetail"],"mappings":";;AAOA,MAAe,UAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMX,iBAAiB,EAAE,OAAQ,GAAE,YAAY;AACrC,WAAO,mBAAmB,UAAU;AAAA,EACvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,uBAAuB,EAAE,OAAQ,GAAE,kBAAkB;AACjD,WAAO,yBAAyB,gBAAgB;AAAA,EACnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,iBAAiB,EAAE,OAAQ,GAAE,YAAY;AACrC,WAAO,mBAAmB,UAAU;AAAA,EACvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,eAAe,EAAE,OAAQ,GAAE,UAAU;AACjC,WAAO,iBAAiB,QAAQ;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,0BAA0B,EAAE,OAAQ,GAAE,qBAAqB;AACvD,WAAO,6BAA6B,mBAAmB;AAAA,EAC1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,mBAAmB,EAAE,QAAQ,SAAS;AAGlC,WAAO,IAAI,QAAQ,aAAW;AAC1B,iBAAW,MAAM;AAGb,gBAAS;AAAA,MACZ,GAAE,GAAG;AAAA,IAClB,CAAS;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,iBAAiB,EAAE,QAAQ,SAAS;AAGhC,WAAO,IAAI,QAAQ,aAAW;AAC1B,iBAAW,MAAM;AAGb,gBAAS;AAAA,MACZ,GAAE,GAAG;AAAA,IAClB,CAAS;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQD,iBAAiB,EAAE,OAAQ,GAAE,SAAS;AAClC,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpCA,2BAAAA,iBAAiB,OAAO,EAAE,KAAK,SAAO;AAClC,YAAI,IAAI,SAAS,GAAG;AAChB,iBAAO,kBAAkB,IAAI,IAAI;AACjC,kBAAQ,GAAG;AAAA,QAC/B,OAAuB;AACH,iBAAO,GAAG;AAAA,QACb;AAAA,MACjB,CAAa,EAAE,MAAM,WAAS;AACd,eAAO,KAAK;AAAA,MAC5B,CAAa;AAAA,IACb,CAAS;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQD,iBAAiB,EAAE,OAAQ,GAAE,WAAW;AACpC,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpCC,2BAAAA,iBAAiB,SAAS,EAAE,KAAK,SAAO;AACpC,YAAI,IAAI,SAAS,GAAG;AAChB,iBAAO,yBAAyB;AAAA,YAC5B,IAAI;AAAA,YACJ,YAAY,IAAI;AAAA,UACxC,CAAqB;AACD,kBAAQ,GAAG;AAAA,QAC/B,OAAuB;AACH,iBAAO,GAAG;AAAA,QACb;AAAA,MACjB,CAAa,EAAE,MAAM,WAAS;AACd,eAAO,KAAK;AAAA,MAC5B,CAAa;AAAA,IACb,CAAS;AAAA,EACJ;AACL;;"}