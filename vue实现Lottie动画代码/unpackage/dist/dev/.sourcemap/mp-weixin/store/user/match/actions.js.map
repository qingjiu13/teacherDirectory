{"version":3,"file":"actions.js","sources":["store/user/match/actions.js"],"sourcesContent":["/**\r\n * match模块的actions\r\n * @module store/user/match/actions\r\n */\r\n\r\nimport { \r\n  getMatchTeacherList, \r\n  getTeacherDetail,\r\n  searchSchoolList,\r\n  searchMajorList,\r\n  getNonProfessionalOptions,\r\n  getSortModeOptions\r\n} from '../APIroute/match_api/match_api.js';\r\n\r\n/**\r\n * 获取匹配的老师列表\r\n * @param {Object} context - Vuex上下文对象\r\n * @param {Object} payload - 请求参数\r\n * @param {boolean} [payload.loadMore=false] - 是否加载更多数据\r\n * @returns {Promise} 返回匹配的老师列表结果\r\n */\r\nexport const fetchMatchTeacherList = ({ commit, rootState, state }, payload = {}) => {\r\n  // 从根state获取用户ID\r\n  const userId = rootState.user.baseInfo.id;\r\n  \r\n  // 判断是加载更多还是重新加载第一页\r\n  const isLoadMore = payload.loadMore === true;\r\n  \r\n  // 如果是加载更多，则页码加1，否则重置为第1页\r\n  const currentPage = isLoadMore ? state.currentPage + 1 : 1;\r\n  \r\n  // 构建非专业课参数\r\n  const nonProfessionalList = {\r\n    mathId: state.nonProfessionalList.math.selectedId,\r\n    englishId: state.nonProfessionalList.english.selectedId,\r\n    politicsId: state.nonProfessionalList.politics.selectedId,\r\n    otherId: state.nonProfessionalList.other.selectedId\r\n  };\r\n  \r\n  // 构建请求参数\r\n  const params = {\r\n    userId: userId,\r\n    schoolId: state.schoolList.selectedSchoolId,\r\n    professionalId: state.professionalList.selectedMajorId,\r\n    nonProfessionalList: nonProfessionalList,\r\n    sortModeId: state.sortMode.selectedId,\r\n    currentPage: currentPage,\r\n    pageSize: payload.pageSize || state.pageSize\r\n  };\r\n  \r\n  return new Promise((resolve, reject) => {\r\n    getMatchTeacherList(params)\r\n      .then(response => {\r\n        // 更新matchList\r\n        if (response && response.data) {\r\n          if (isLoadMore) {\r\n            // 加载更多时，追加到现有列表\r\n            commit('APPEND_MATCH_LIST', response.data);\r\n          } else {\r\n            // 重新加载时，替换列表\r\n            commit('SET_MATCH_LIST', response.data);\r\n          }\r\n          \r\n          // 更新分页信息\r\n          commit('SET_PAGINATION', {\r\n            currentPage: currentPage,\r\n            hasMore: response.hasMore || false\r\n          });\r\n        }\r\n        resolve(response);\r\n      })\r\n      .catch(error => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\n/**\r\n * 搜索学校列表\r\n * @param {Object} context - Vuex上下文对象\r\n * @param {Object} payload - 请求参数\r\n * @param {string} payload.keyword - 搜索关键词\r\n * @param {boolean} [payload.loadMore=false] - 是否加载更多数据\r\n * @returns {Promise} 返回学校搜索结果\r\n */\r\nexport const searchSchools = ({ commit, rootState, state }, { keyword, loadMore = false }) => {\r\n  const userId = rootState.user.baseInfo.id;\r\n  \r\n  // 如果是新搜索，重置分页；如果是加载更多，使用当前页+1\r\n  const currentPage = loadMore ? state.schoolList.currentPage + 1 : 1;\r\n  \r\n  // 设置加载状态\r\n  commit('SET_SCHOOL_PAGINATION', { isLoading: true });\r\n  \r\n  // 更新搜索关键词\r\n  if (!loadMore) {\r\n    commit('SET_SCHOOL_SEARCH_KEYWORD', keyword);\r\n  }\r\n  \r\n  const params = {\r\n    userId: userId,\r\n    keyword: keyword,\r\n    currentPage: currentPage,\r\n    pageSize: state.schoolList.pageSize\r\n  };\r\n  \r\n  return new Promise((resolve, reject) => {\r\n    searchSchoolList(params)\r\n      .then(response => {\r\n        if (response && response.data) {\r\n          // 更新学校选项列表\r\n          commit('SET_SCHOOL_OPTIONS', {\r\n            options: response.data,\r\n            isLoadMore: loadMore\r\n          });\r\n          \r\n          // 更新分页信息\r\n          commit('SET_SCHOOL_PAGINATION', {\r\n            currentPage: currentPage,\r\n            hasMore: response.hasMore || false,\r\n            isLoading: false\r\n          });\r\n        }\r\n        resolve(response);\r\n      })\r\n      .catch(error => {\r\n        commit('SET_SCHOOL_PAGINATION', { isLoading: false });\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\n/**\r\n * 搜索专业列表\r\n * @param {Object} context - Vuex上下文对象\r\n * @param {Object} payload - 请求参数\r\n * @param {string} payload.keyword - 搜索关键词\r\n * @returns {Promise} 返回专业搜索结果\r\n */\r\nexport const searchMajors = ({ commit, rootState, state }, { keyword }) => {\r\n  const userId = rootState.user.baseInfo.id;\r\n  const schoolId = state.schoolList.selectedSchoolId;\r\n  \r\n  if (!schoolId) {\r\n    return Promise.reject(new Error('请先选择学校'));\r\n  }\r\n  \r\n  // 更新搜索关键词\r\n  commit('SET_PROFESSIONAL_SEARCH_KEYWORD', keyword);\r\n  \r\n  const params = {\r\n    userId: userId,\r\n    schoolId: schoolId,\r\n    keyword: keyword\r\n  };\r\n  \r\n  return new Promise((resolve, reject) => {\r\n    searchMajorList(params)\r\n      .then(response => {\r\n        if (response && response.data) {\r\n          // 更新专业选项列表\r\n          commit('SET_PROFESSIONAL_OPTIONS', response.data);\r\n        }\r\n        resolve(response);\r\n      })\r\n      .catch(error => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\n/**\r\n * 获取非专业课选项\r\n * @param {Object} context - Vuex上下文对象\r\n * @param {Object} payload - 请求参数\r\n * @param {string} payload.type - 非专业课类型\r\n * @returns {Promise} 返回非专业课选项列表\r\n */\r\nexport const fetchNonProfessionalOptions = ({ commit, rootState }, { type }) => {\r\n  const userId = rootState.user.baseInfo.id;\r\n  \r\n  const params = {\r\n    userId: userId,\r\n    type: type\r\n  };\r\n  \r\n  return new Promise((resolve, reject) => {\r\n    getNonProfessionalOptions(params)\r\n      .then(response => {\r\n        resolve(response);\r\n      })\r\n      .catch(error => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\n/**\r\n * 获取排序方式选项\r\n * @param {Object} context - Vuex上下文对象\r\n * @returns {Promise} 返回排序方式选项列表\r\n */\r\nexport const fetchSortModeOptions = ({ commit, rootState }) => {\r\n  const userId = rootState.user.baseInfo.id;\r\n  \r\n  const params = {\r\n    userId: userId\r\n  };\r\n  \r\n  return new Promise((resolve, reject) => {\r\n    getSortModeOptions(params)\r\n      .then(response => {\r\n        if (response && response.data) {\r\n          // 更新排序选项列表\r\n          commit('SET_SORT_OPTIONS', response.data);\r\n        }\r\n        resolve(response);\r\n      })\r\n      .catch(error => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\n/**\r\n * 选择学校\r\n * @param {Object} context - Vuex上下文对象\r\n * @param {Object} payload - 学校信息\r\n * @param {number} payload.id - 学校ID\r\n * @param {string} payload.name - 学校名称\r\n */\r\nexport const selectSchool = ({ commit }, { id, name }) => {\r\n  commit('SET_SELECTED_SCHOOL', { id, name });\r\n  // 清空专业选择\r\n  commit('SET_SELECTED_PROFESSIONAL', { id: null, name: '' });\r\n  commit('SET_PROFESSIONAL_OPTIONS', []);\r\n};\r\n\r\n/**\r\n * 选择专业\r\n * @param {Object} context - Vuex上下文对象\r\n * @param {Object} payload - 专业信息\r\n * @param {number} payload.id - 专业ID\r\n * @param {string} payload.name - 专业名称\r\n */\r\nexport const selectMajor = ({ commit }, { id, name }) => {\r\n  commit('SET_SELECTED_PROFESSIONAL', { id, name });\r\n  // 清空非专业课选择\r\n  commit('CLEAR_NON_PROFESSIONAL_SELECTION');\r\n};\r\n\r\n/**\r\n * 选择非专业课\r\n * @param {Object} context - Vuex上下文对象\r\n * @param {Object} payload - 非专业课信息\r\n * @param {string} payload.type - 非专业课类型\r\n * @param {number} payload.id - 选项ID\r\n * @param {string} payload.name - 选项名称\r\n */\r\nexport const selectNonProfessional = ({ commit }, { type, id, name }) => {\r\n  commit('SET_NON_PROFESSIONAL_SELECTION', { type, id, name });\r\n  // 清空专业课选择\r\n  commit('SET_SELECTED_PROFESSIONAL', { id: null, name: '' });\r\n};\r\n\r\n/**\r\n * 选择排序方式\r\n * @param {Object} context - Vuex上下文对象\r\n * @param {Object} payload - 排序信息\r\n * @param {number} payload.id - 排序ID\r\n * @param {string} payload.name - 排序名称\r\n */\r\nexport const selectSortMode = ({ commit }, { id, name }) => {\r\n  commit('SET_SELECTED_SORT_MODE', { id, name });\r\n};\r\n\r\n/**\r\n * 获取老师详细信息\r\n * @param {Object} context - Vuex上下文对象\r\n * @param {Object} payload - 请求参数\r\n * @param {string} payload.teacherId - 老师ID\r\n * @returns {Promise} 返回老师详细信息\r\n */\r\nexport const fetchTeacherDetail = ({ commit, rootState }, { teacherId }) => {\r\n  // 从根state获取用户ID\r\n  const userId = rootState.user.baseInfo.id;\r\n  \r\n  if (!teacherId) {\r\n    return Promise.reject(new Error('老师ID不能为空'));\r\n  }\r\n  \r\n  // 构建请求参数\r\n  const params = {\r\n    userId: userId,\r\n    teacherId: teacherId\r\n  };\r\n  \r\n  return new Promise((resolve, reject) => {\r\n    getTeacherDetail(params)\r\n      .then(response => {\r\n        // 更新老师详情\r\n        if (response && response.data) {\r\n          commit('SET_TEACHER_DETAIL', {\r\n            teacherId: teacherId,\r\n            detail: response.data\r\n          });\r\n        }\r\n        resolve(response);\r\n      })\r\n      .catch(error => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport default {\r\n  fetchMatchTeacherList,\r\n  searchSchools,\r\n  searchMajors,\r\n  fetchNonProfessionalOptions,\r\n  fetchSortModeOptions,\r\n  selectSchool,\r\n  selectMajor,\r\n  selectNonProfessional,\r\n  selectSortMode,\r\n  fetchTeacherDetail\r\n};\r\n"],"names":["fetchMatchTeacherList","commit","rootState","state","payload","userId","isLoadMore","currentPage","nonProfessionalList","params","resolve","reject","getMatchTeacherList","response","error","searchSchools","keyword","loadMore","searchSchoolList","searchMajors","schoolId","searchMajorList","fetchNonProfessionalOptions","type","getNonProfessionalOptions","fetchSortModeOptions","getSortModeOptions","selectSchool","id","name","selectMajor","selectNonProfessional","selectSortMode","fetchTeacherDetail","teacherId","getTeacherDetail","actions"],"mappings":"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"}