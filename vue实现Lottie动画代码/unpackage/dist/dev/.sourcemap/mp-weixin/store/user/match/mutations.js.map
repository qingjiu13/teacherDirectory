{"version":3,"file":"mutations.js","sources":["store/user/match/mutations.js"],"sourcesContent":["/**\r\n * 匹配模块的mutations\r\n * @module store/user/match/mutations\r\n */\r\n\r\nexport default {\r\n\r\n  /**\r\n   * 设置匹配列表\r\n   * @param {Object} state - 状态对象\r\n   * @param {Array} matchList - 匹配列表数组\r\n   */\r\n  SET_MATCH_LIST(state, matchList) {\r\n    state.matchList = matchList\r\n  },\r\n\r\n  /**\r\n   * 追加匹配列表\r\n   * @param {Object} state - 状态对象\r\n   * @param {Array} additionalMatches - 追加的匹配列表数组\r\n   */\r\n  APPEND_MATCH_LIST(state, additionalMatches) {\r\n    state.matchList = [...state.matchList, ...additionalMatches]\r\n  },\r\n  \r\n\r\n  /**\r\n   * 下面是对接api函数页码相关的mutations\r\n   * 设置分页信息\r\n   * @param {Object} state - 当前模块的state\r\n   * @param {Object} pagination - 分页信息\r\n   * @param {number} pagination.currentPage - 当前页码\r\n   * @param {boolean} pagination.hasMore - 是否还有更多数据\r\n   */\r\n  SET_PAGINATION(state, { currentPage, hasMore }) {\r\n    state.currentPage = currentPage;\r\n    state.hasMore = hasMore;\r\n  },\r\n  \r\n  /**\r\n   * 设置老师详细信息\r\n   * @param {Object} state - 当前模块的state\r\n   * @param {string} payload.teacherId - 老师ID\r\n   * @param {Object} payload.detail - 老师详细信息\r\n   */\r\n  SET_TEACHER_DETAIL(state, { teacherId, detail }) {\r\n    // 找到匹配列表中对应的老师\r\n    const teacherIndex = state.matchList.findIndex(teacher => teacher.id === teacherId);\r\n    \r\n    if (teacherIndex !== -1) {\r\n      // 如果存在，则更新详细信息\r\n      const updatedTeacher = {\r\n        ...state.matchList[teacherIndex],\r\n        selfIntroduction: detail.selfIntroduction || state.matchList[teacherIndex].selfIntroduction,\r\n        service: detail.service || state.matchList[teacherIndex].service\r\n      };\r\n      \r\n      // 使用Vue.set保证响应式更新\r\n      state.matchList.splice(teacherIndex, 1, updatedTeacher);\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * 设置学校列表筛选\r\n   * @param {Object} state - 当前模块的state\r\n   * @param {string} schoolList - 学校名称\r\n   */\r\n  SET_SCHOOL_LIST(state, schoolList) {\r\n    state.schoolList = schoolList;\r\n  },\r\n  \r\n  /**\r\n   * 设置专业课筛选\r\n   * @param {Object} state - 当前模块的state\r\n   * @param {string} professionalList - 专业课名称\r\n   */\r\n  SET_PROFESSIONAL_LIST(state, professionalList) {\r\n    state.professionalList = professionalList;\r\n  },\r\n  \r\n  /**\r\n   * 设置非专业课筛选\r\n   * @param {Object} state - 当前模块的state\r\n   * @param {Object} nonProfessionalList - 非专业课列表\r\n   * @param {string} nonProfessionalList.math - 数学类型\r\n   * @param {string} nonProfessionalList.english - 英语类型\r\n   * @param {string} nonProfessionalList.politics - 政治类型\r\n   * @param {string} nonProfessionalList.other - 其他类型\r\n   */\r\n  SET_NON_PROFESSIONAL_LIST(state, nonProfessionalList) {\r\n    state.nonProfessionalList = { ...nonProfessionalList };\r\n  },\r\n  \r\n  /**\r\n   * 设置排序方式\r\n   * @param {Object} state - 当前模块的state\r\n   * @param {string} sortMode - 排序方式\r\n   */\r\n  SET_SORT_MODE(state, sortMode) {\r\n    state.sortMode = sortMode;\r\n  }\r\n} "],"names":["mutations","state","matchList","additionalMatches","currentPage","hasMore","teacherId","detail","teacherIndex","teacher","updatedTeacher","schoolList","professionalList","nonProfessionalList","sortMode"],"mappings":"aAKA,MAAeA,EAAA,CAOb,eAAeC,EAAOC,EAAW,CAC/BD,EAAM,UAAYC,CACnB,EAOD,kBAAkBD,EAAOE,EAAmB,CAC1CF,EAAM,UAAY,CAAC,GAAGA,EAAM,UAAW,GAAGE,CAAiB,CAC5D,EAWD,eAAeF,EAAO,CAAE,YAAAG,EAAa,QAAAC,CAAO,EAAI,CAC9CJ,EAAM,YAAcG,EACpBH,EAAM,QAAUI,CACjB,EAQD,mBAAmBJ,EAAO,CAAE,UAAAK,EAAW,OAAAC,CAAM,EAAI,CAE/C,MAAMC,EAAeP,EAAM,UAAU,UAAUQ,GAAWA,EAAQ,KAAOH,CAAS,EAElF,GAAIE,IAAiB,GAAI,CAEvB,MAAME,EAAiB,CACrB,GAAGT,EAAM,UAAUO,CAAY,EAC/B,iBAAkBD,EAAO,kBAAoBN,EAAM,UAAUO,CAAY,EAAE,iBAC3E,QAASD,EAAO,SAAWN,EAAM,UAAUO,CAAY,EAAE,OACjE,EAGMP,EAAM,UAAU,OAAOO,EAAc,EAAGE,CAAc,CACvD,CACF,EAOD,gBAAgBT,EAAOU,EAAY,CACjCV,EAAM,WAAaU,CACpB,EAOD,sBAAsBV,EAAOW,EAAkB,CAC7CX,EAAM,iBAAmBW,CAC1B,EAWD,0BAA0BX,EAAOY,EAAqB,CACpDZ,EAAM,oBAAsB,CAAE,GAAGY,EAClC,EAOD,cAAcZ,EAAOa,EAAU,CAC7Bb,EAAM,SAAWa,CAClB,CACH"}