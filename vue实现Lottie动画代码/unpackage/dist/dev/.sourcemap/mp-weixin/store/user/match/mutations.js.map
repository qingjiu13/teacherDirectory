{"version":3,"file":"mutations.js","sources":["store/user/match/mutations.js"],"sourcesContent":["/**\r\n * 匹配模块的mutations\r\n * @module store/user/match/mutations\r\n */\r\n\r\nexport default {\r\n\r\n  /**\r\n   * 设置匹配列表\r\n   * @param {Object} state - 状态对象\r\n   * @param {Array} matchList - 匹配列表数组\r\n   */\r\n  SET_MATCH_LIST(state, matchList) {\r\n    state.matchList = matchList\r\n  },\r\n\r\n  /**\r\n   * 追加匹配列表\r\n   * @param {Object} state - 状态对象\r\n   * @param {Array} additionalMatches - 追加的匹配列表数组\r\n   */\r\n  APPEND_MATCH_LIST(state, additionalMatches) {\r\n    state.matchList = [...state.matchList, ...additionalMatches]\r\n  },\r\n  \r\n\r\n  /**\r\n   * 下面是对接api函数页码相关的mutations\r\n   * 设置分页信息\r\n   * @param {Object} state - 当前模块的state\r\n   * @param {Object} pagination - 分页信息\r\n   * @param {number} pagination.currentPage - 当前页码\r\n   * @param {boolean} pagination.hasMore - 是否还有更多数据\r\n   */\r\n  SET_PAGINATION(state, { currentPage, hasMore }) {\r\n    state.currentPage = currentPage;\r\n    state.hasMore = hasMore;\r\n  },\r\n  \r\n  /**\r\n   * 设置老师详细信息\r\n   * @param {Object} state - 当前模块的state\r\n   * @param {string} payload.teacherId - 老师ID\r\n   * @param {Object} payload.detail - 老师详细信息\r\n   */\r\n  SET_TEACHER_DETAIL(state, { teacherId, detail }) {\r\n    // 找到匹配列表中对应的老师\r\n    const teacherIndex = state.matchList.findIndex(teacher => teacher.id === teacherId);\r\n    \r\n    if (teacherIndex !== -1) {\r\n      // 如果存在，则更新详细信息\r\n      const updatedTeacher = {\r\n        ...state.matchList[teacherIndex],\r\n        selfIntroduction: detail.selfIntroduction || state.matchList[teacherIndex].selfIntroduction,\r\n        service: detail.service || state.matchList[teacherIndex].service\r\n      };\r\n      \r\n      // 使用Vue.set保证响应式更新\r\n      state.matchList.splice(teacherIndex, 1, updatedTeacher);\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * 设置学校搜索关键词\r\n   * @param {Object} state - 当前模块的state\r\n   * @param {string} keyword - 搜索关键词\r\n   */\r\n  SET_SCHOOL_SEARCH_KEYWORD(state, keyword) {\r\n    state.schoolList.searchKeyword = keyword;\r\n  },\r\n  \r\n  /**\r\n   * 设置学校选项列表\r\n   * @param {Object} state - 当前模块的state\r\n   * @param {Array} options - 学校选项列表 [{id, name}]\r\n   * @param {boolean} isLoadMore - 是否为加载更多\r\n   */\r\n  SET_SCHOOL_OPTIONS(state, { options, isLoadMore = false }) {\r\n    if (isLoadMore) {\r\n      state.schoolList.options = [...state.schoolList.options, ...options];\r\n    } else {\r\n      state.schoolList.options = options;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * 设置学校分页信息\r\n   * @param {Object} state - 当前模块的state\r\n   * @param {Object} pagination - 分页信息\r\n   * @param {number} pagination.currentPage - 当前页码\r\n   * @param {boolean} pagination.hasMore - 是否还有更多数据\r\n   * @param {boolean} pagination.isLoading - 是否正在加载\r\n   */\r\n  SET_SCHOOL_PAGINATION(state, { currentPage, hasMore, isLoading }) {\r\n    if (currentPage !== undefined) state.schoolList.currentPage = currentPage;\r\n    if (hasMore !== undefined) state.schoolList.hasMore = hasMore;\r\n    if (isLoading !== undefined) state.schoolList.isLoading = isLoading;\r\n  },\r\n  \r\n  /**\r\n   * 设置选中的学校\r\n   * @param {Object} state - 当前模块的state\r\n   * @param {Object} school - 学校信息\r\n   * @param {number} school.id - 学校ID\r\n   * @param {string} school.name - 学校名称\r\n   */\r\n  SET_SELECTED_SCHOOL(state, { id, name }) {\r\n    state.schoolList.selectedSchoolId = id;\r\n    state.schoolList.selectedSchool = name;\r\n  },\r\n  \r\n  /**\r\n   * 设置专业课搜索关键词\r\n   * @param {Object} state - 当前模块的state\r\n   * @param {string} keyword - 搜索关键词\r\n   */\r\n  SET_PROFESSIONAL_SEARCH_KEYWORD(state, keyword) {\r\n    state.professionalList.searchKeyword = keyword;\r\n  },\r\n  \r\n  /**\r\n   * 设置专业课选项列表\r\n   * @param {Object} state - 当前模块的state\r\n   * @param {Array} options - 专业课选项列表 [{id, name}]\r\n   */\r\n  SET_PROFESSIONAL_OPTIONS(state, options) {\r\n    state.professionalList.options = options;\r\n  },\r\n  \r\n  /**\r\n   * 设置选中的专业课\r\n   * @param {Object} state - 当前模块的state\r\n   * @param {Object} major - 专业信息\r\n   * @param {number} major.id - 专业ID\r\n   * @param {string} major.name - 专业名称\r\n   */\r\n  SET_SELECTED_PROFESSIONAL(state, { id, name }) {\r\n    state.professionalList.selectedMajorId = id;\r\n    state.professionalList.selectedMajor = name;\r\n  },\r\n  \r\n  /**\r\n   * 设置非专业课选择\r\n   * @param {Object} state - 当前模块的state\r\n   * @param {Object} payload - 非专业课信息\r\n   * @param {string} payload.type - 非专业课类型 ('math', 'english', 'politics', 'other')\r\n   * @param {number} payload.id - 选项ID\r\n   * @param {string} payload.name - 选项名称\r\n   */\r\n  SET_NON_PROFESSIONAL_SELECTION(state, { type, id, name }) {\r\n    // 先清空其他类型的选择\r\n    Object.keys(state.nonProfessionalList).forEach(key => {\r\n      if (key !== type) {\r\n        state.nonProfessionalList[key].selectedId = null;\r\n        state.nonProfessionalList[key].selected = '';\r\n      }\r\n    });\r\n    \r\n    // 设置当前类型的选择\r\n    state.nonProfessionalList[type].selectedId = id;\r\n    state.nonProfessionalList[type].selected = name;\r\n  },\r\n  \r\n  /**\r\n   * 清空非专业课选择\r\n   * @param {Object} state - 当前模块的state\r\n   */\r\n  CLEAR_NON_PROFESSIONAL_SELECTION(state) {\r\n    Object.keys(state.nonProfessionalList).forEach(key => {\r\n      state.nonProfessionalList[key].selectedId = null;\r\n      state.nonProfessionalList[key].selected = '';\r\n    });\r\n  },\r\n  \r\n  /**\r\n   * 设置排序方式选项列表\r\n   * @param {Object} state - 当前模块的state\r\n   * @param {Array} options - 排序选项列表 [{id, name}]\r\n   */\r\n  SET_SORT_OPTIONS(state, options) {\r\n    state.sortMode.options = options;\r\n  },\r\n  \r\n  /**\r\n   * 设置选中的排序方式\r\n   * @param {Object} state - 当前模块的state\r\n   * @param {Object} sort - 排序信息\r\n   * @param {number} sort.id - 排序ID\r\n   * @param {string} sort.name - 排序名称\r\n   */\r\n  SET_SELECTED_SORT_MODE(state, { id, name }) {\r\n    state.sortMode.selectedId = id;\r\n    state.sortMode.selected = name;\r\n  },\r\n  \r\n  // 为了兼容原有代码，保留旧的mutations\r\n  /**\r\n   * @deprecated 请使用 SET_SELECTED_SCHOOL\r\n   * 设置学校列表筛选\r\n   * @param {Object} state - 当前模块的state\r\n   * @param {string} schoolList - 学校名称\r\n   */\r\n  SET_SCHOOL_LIST(state, schoolList) {\r\n    state.schoolList.selectedSchool = schoolList;\r\n  },\r\n  \r\n  /**\r\n   * @deprecated 请使用 SET_SELECTED_PROFESSIONAL\r\n   * 设置专业课筛选\r\n   * @param {Object} state - 当前模块的state\r\n   * @param {string} professionalList - 专业课名称\r\n   */\r\n  SET_PROFESSIONAL_LIST(state, professionalList) {\r\n    state.professionalList.selectedMajor = professionalList;\r\n  },\r\n  \r\n  /**\r\n   * @deprecated 请使用 SET_NON_PROFESSIONAL_SELECTION\r\n   * 设置非专业课筛选\r\n   * @param {Object} state - 当前模块的state\r\n   * @param {Object} nonProfessionalList - 非专业课列表\r\n   * @param {string} nonProfessionalList.math - 数学类型\r\n   * @param {string} nonProfessionalList.english - 英语类型\r\n   * @param {string} nonProfessionalList.politics - 政治类型\r\n   * @param {string} nonProfessionalList.other - 其他类型\r\n   */\r\n  SET_NON_PROFESSIONAL_LIST(state, nonProfessionalList) {\r\n    Object.keys(nonProfessionalList).forEach(key => {\r\n      if (state.nonProfessionalList[key]) {\r\n        state.nonProfessionalList[key].selected = nonProfessionalList[key] || '';\r\n      }\r\n    });\r\n  },\r\n  \r\n  /**\r\n   * @deprecated 请使用 SET_SELECTED_SORT_MODE\r\n   * 设置排序方式\r\n   * @param {Object} state - 当前模块的state\r\n   * @param {string} sortMode - 排序方式\r\n   */\r\n  SET_SORT_MODE(state, sortMode) {\r\n    state.sortMode.selected = sortMode;\r\n  }\r\n} "],"names":["mutations","state","matchList","additionalMatches","currentPage","hasMore","teacherId","detail","teacherIndex","teacher","updatedTeacher","keyword","options","isLoadMore","isLoading","id","name","type","key","schoolList","professionalList","nonProfessionalList","sortMode"],"mappings":"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"}