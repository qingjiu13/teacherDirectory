{"version":3,"file":"mutations.js","sources":["store/user/match/mutations.js"],"sourcesContent":["/**\n * 匹配模块的mutations\n * @module store/user/match/mutations\n */\n\nexport default {\n  /**\n   * 设置学校列表\n   * @param {Object} state - 状态对象\n   * @param {String} schoolName - 学校名称\n   */\n  SET_SCHOOL_LIST(state, schoolName) {\n    state.schoolList = schoolName\n  },\n\n  /**\n   * 设置专业课列表\n   * @param {Object} state - 状态对象\n   * @param {String} professionalName - 专业课名称\n   */\n  SET_PROFESSIONAL_LIST(state, professionalName) {\n    state.professionalList = professionalName\n  },\n\n  /**\n   * 设置筛选模式\n   * @param {Object} state - 状态对象\n   * @param {Object} filterMode - 筛选模式对象\n   */\n  SET_FILTER_MODE(state, filterMode) {\n    state.filterMode = filterMode\n  },\n\n  /**\n   * 设置匹配列表\n   * @param {Object} state - 状态对象\n   * @param {Array} matchList - 匹配列表数组\n   */\n  SET_MATCH_LIST(state, matchList) {\n    state.matchList = matchList\n  },\n\n  /**\n   * 追加匹配列表\n   * @param {Object} state - 状态对象\n   * @param {Array} additionalMatches - 追加的匹配列表数组\n   */\n  APPEND_MATCH_LIST(state, additionalMatches) {\n    state.matchList = [...state.matchList, ...additionalMatches]\n  },\n  \n  /**\n   * 更新特定教师的详细信息\n   * @param {Object} state - match模块的state\n   * @param {Object} payload - 包含教师ID和详细信息的对象\n   * @param {String} payload.id - 教师ID\n   * @param {Object} payload.detailInfo - 教师详细信息\n   */\n  UPDATE_TEACHER_DETAIL(state, { id, detailInfo }) {\n    if (!state.matchList || state.matchList.length === 0) {\n      // 如果matchList不存在或为空，创建一个包含该教师的新列表\n      state.matchList = [{ id, ...detailInfo }];\n      return;\n    }\n    \n    const teacherIndex = state.matchList.findIndex(teacher => teacher.id === id);\n    if (teacherIndex !== -1) {\n      // 合并现有信息和新的详细信息\n      state.matchList[teacherIndex] = {\n        ...state.matchList[teacherIndex],\n        ...detailInfo\n      };\n    } else {\n      // 如果在列表中找不到该教师，则添加到列表\n      state.matchList.push({ id, ...detailInfo });\n    }\n  },\n  \n  /**\n   * 清空匹配老师列表\n   * @param {Object} state - match模块的state\n   */\n  CLEAR_MATCH_LIST(state) {\n    state.matchList = [];\n  },\n\n  /**\n   * 设置非专业课列表\n   * @param {Object} state - 状态对象\n   * @param {Object} nonProfessionalList - 非专业课列表对象\n   */\n  SET_NON_PROFESSIONAL_LIST(state, nonProfessionalList) {\n    state.nonProfessionalList = nonProfessionalList\n  },\n\n  /**\n   * 设置排序模式\n   * @param {Object} state - 状态对象\n   * @param {String} sortMode - 排序模式\n   */\n  SET_SORT_MODE(state, sortMode) {\n    state.sortMode = sortMode\n  },\n} "],"names":[],"mappings":";AAKA,MAAe,YAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMb,gBAAgB,OAAO,YAAY;AACjC,UAAM,aAAa;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,sBAAsB,OAAO,kBAAkB;AAC7C,UAAM,mBAAmB;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,gBAAgB,OAAO,YAAY;AACjC,UAAM,aAAa;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,eAAe,OAAO,WAAW;AAC/B,UAAM,YAAY;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,kBAAkB,OAAO,mBAAmB;AAC1C,UAAM,YAAY,CAAC,GAAG,MAAM,WAAW,GAAG,iBAAiB;AAAA,EAC5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASD,sBAAsB,OAAO,EAAE,IAAI,WAAU,GAAI;AAC/C,QAAI,CAAC,MAAM,aAAa,MAAM,UAAU,WAAW,GAAG;AAEpD,YAAM,YAAY,CAAC,EAAE,IAAI,GAAG,WAAY,CAAA;AACxC;AAAA,IACD;AAED,UAAM,eAAe,MAAM,UAAU,UAAU,aAAW,QAAQ,OAAO,EAAE;AAC3E,QAAI,iBAAiB,IAAI;AAEvB,YAAM,UAAU,YAAY,IAAI;AAAA,QAC9B,GAAG,MAAM,UAAU,YAAY;AAAA,QAC/B,GAAG;AAAA,MACX;AAAA,IACA,OAAW;AAEL,YAAM,UAAU,KAAK,EAAE,IAAI,GAAG,WAAU,CAAE;AAAA,IAC3C;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,iBAAiB,OAAO;AACtB,UAAM,YAAY;EACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,0BAA0B,OAAO,qBAAqB;AACpD,UAAM,sBAAsB;AAAA,EAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,cAAc,OAAO,UAAU;AAC7B,UAAM,WAAW;AAAA,EAClB;AACH;;"}