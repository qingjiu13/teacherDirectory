{"version":3,"file":"api.js","sources":["store/user/match/api.js"],"sourcesContent":["\r\n/**\r\n * 匹配相关API\r\n * @module store/user/match/api\r\n */\r\n\r\nimport { MATCH_API_BASE_URL, USER_TEACHER_DETAIL_URL } from '../API.js';\r\n\r\n/**\r\n * 获取匹配的教师列表\r\n * @param {Object} params - 筛选参数\r\n * @param {string} [params.school] - 学校筛选\r\n * @param {string} [params.major] - 专业筛选\r\n * @param {string} [params.sort] - 排序方式（综合排序/分数排序）\r\n * @returns {Promise<Object>} 返回匹配的教师列表\r\n * @property {Array} data.matchList - 匹配教师列表\r\n * @property {string} data.matchList[].id - 教师ID\r\n * @property {string} data.matchList[].name - 教师姓名\r\n * @property {string} data.matchList[].avatar - 教师头像\r\n * @property {string} data.matchList[].school - 教师所在学校\r\n * @property {string} data.matchList[].major - 教师专业\r\n * @property {number} data.matchList[].teacherScore - 老师考研成绩\r\n * @property {Array} data.matchList[].service - 教师提供的服务列表\r\n * @property {string} data.matchList[].service[].id - 服务ID\r\n * @property {string} data.matchList[].service[].type - 服务类型\r\n * @property {number} data.matchList[].service[].price - 服务价格\r\n */\r\nexport const getMatchTeachers = async (params = {}) => {\r\n  try {\r\n    // 构建URL查询参数\r\n    const queryParams = new URLSearchParams();\r\n    Object.entries(params).forEach(([key, value]) => {\r\n      if (value !== undefined && value !== null) {\r\n        queryParams.append(key, value);\r\n      }\r\n    });\r\n    \r\n    const url = `${MATCH_API_BASE_URL}${queryParams.toString() ? '?' + queryParams.toString() : ''}`;\r\n    const response = await fetch(url);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! Status: ${response.status}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('获取匹配教师列表失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 通过教师ID获取教师详细信息\r\n * @param {string} teacherId - 教师ID\r\n * @returns {Promise<Object>} 返回教师详细信息\r\n * @property {string} data.id - 教师ID\r\n * @property {string} data.selfIntroduction - 教师自我介绍\r\n * @property {Array} data.service - 教师提供的服务列表\r\n * @property {string} data.service[].id - 服务ID\r\n * @property {string} data.service[].name - 服务名称\r\n * @property {string} data.service[].type - 服务类型\r\n * @property {number} data.service[].price - 服务价格\r\n * @property {string} data.service[].description - 服务描述\r\n * @property {string} data.service[].image - 服务图片\r\n */\r\nexport const getTeacherDetail = async (teacherId) => {\r\n  try {\r\n    if (!teacherId) {\r\n      throw new Error('教师ID不能为空');\r\n    }\r\n    \r\n    const url = `${USER_TEACHER_DETAIL_URL}?id=${teacherId}`;\r\n    const response = await fetch(url);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! Status: ${response.status}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('获取教师详情失败:', error);\r\n    throw error;\r\n  }\r\n}; "],"names":["getMatchTeachers","params","queryParams","key","value","url","MATCH_API_BASE_URL","response","error","uni","getTeacherDetail","teacherId","USER_TEACHER_DETAIL_URL"],"mappings":"iFA2BaA,EAAmB,MAAOC,EAAS,KAAO,CACrD,GAAI,CAEF,MAAMC,EAAc,IAAI,gBACxB,OAAO,QAAQD,CAAM,EAAE,QAAQ,CAAC,CAACE,EAAKC,CAAK,IAAM,CACpBA,GAAU,MACnCF,EAAY,OAAOC,EAAKC,CAAK,CAErC,CAAK,EAED,MAAMC,EAAM,GAAGC,EAAkB,kBAAA,GAAGJ,EAAY,WAAa,IAAMA,EAAY,WAAa,EAAE,GACxFK,EAAW,MAAM,MAAMF,CAAG,EAEhC,GAAI,CAACE,EAAS,GACZ,MAAM,IAAI,MAAM,uBAAuBA,EAAS,MAAM,EAAE,EAG1D,OAAO,MAAMA,EAAS,MACvB,OAAQC,EAAO,CACdC,MAAAA,EAAc,MAAA,MAAA,QAAA,gCAAA,cAAeD,CAAK,EAC5BA,CACP,CACH,EAgBaE,EAAmB,MAAOC,GAAc,CACnD,GAAI,CACF,GAAI,CAACA,EACH,MAAM,IAAI,MAAM,UAAU,EAG5B,MAAMN,EAAM,GAAGO,EAAAA,uBAAuB,OAAOD,CAAS,GAChDJ,EAAW,MAAM,MAAMF,CAAG,EAEhC,GAAI,CAACE,EAAS,GACZ,MAAM,IAAI,MAAM,uBAAuBA,EAAS,MAAM,EAAE,EAG1D,OAAO,MAAMA,EAAS,MACvB,OAAQC,EAAO,CACdC,MAAAA,EAAc,MAAA,MAAA,QAAA,gCAAA,YAAaD,CAAK,EAC1BA,CACP,CACH"}