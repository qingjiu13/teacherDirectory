{"version":3,"file":"api.js","sources":["store/user/match/api.js"],"sourcesContent":["\r\n/**\r\n * 匹配相关API\r\n * @module store/user/match/api\r\n */\r\n\r\nimport { MATCH_API_BASE_URL, USER_TEACHER_DETAIL_URL } from '../API.js';\r\n\r\n/**\r\n * 获取匹配的教师列表\r\n * @param {Object} params - 筛选参数\r\n * @param {string} [params.school] - 学校筛选\r\n * @param {string} [params.major] - 专业筛选\r\n * @param {string} [params.sort] - 排序方式（综合排序/分数排序）\r\n * @returns {Promise<Object>} 返回匹配的教师列表\r\n * @property {Array} data.matchList - 匹配教师列表\r\n * @property {string} data.matchList[].id - 教师ID\r\n * @property {string} data.matchList[].name - 教师姓名\r\n * @property {string} data.matchList[].avatar - 教师头像\r\n * @property {string} data.matchList[].school - 教师所在学校\r\n * @property {string} data.matchList[].major - 教师专业\r\n * @property {number} data.matchList[].teacherScore - 老师考研成绩\r\n * @property {Array} data.matchList[].service - 教师提供的服务列表\r\n * @property {string} data.matchList[].service[].id - 服务ID\r\n * @property {string} data.matchList[].service[].type - 服务类型\r\n * @property {number} data.matchList[].service[].price - 服务价格\r\n */\r\nexport const getMatchTeachers = async (params = {}) => {\r\n  try {\r\n    // 构建URL查询参数\r\n    const queryParams = new URLSearchParams();\r\n    Object.entries(params).forEach(([key, value]) => {\r\n      if (value !== undefined && value !== null) {\r\n        queryParams.append(key, value);\r\n      }\r\n    });\r\n    \r\n    const url = `${MATCH_API_BASE_URL}${queryParams.toString() ? '?' + queryParams.toString() : ''}`;\r\n    const response = await fetch(url);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! Status: ${response.status}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('获取匹配教师列表失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 通过教师ID获取教师详细信息\r\n * @param {string} teacherId - 教师ID\r\n * @returns {Promise<Object>} 返回教师详细信息\r\n * @property {string} data.id - 教师ID\r\n * @property {string} data.selfIntroduction - 教师自我介绍\r\n * @property {Array} data.service - 教师提供的服务列表\r\n * @property {string} data.service[].id - 服务ID\r\n * @property {string} data.service[].name - 服务名称\r\n * @property {string} data.service[].type - 服务类型\r\n * @property {number} data.service[].price - 服务价格\r\n * @property {string} data.service[].description - 服务描述\r\n * @property {string} data.service[].image - 服务图片\r\n */\r\nexport const getTeacherDetail = async (teacherId) => {\r\n  try {\r\n    if (!teacherId) {\r\n      throw new Error('教师ID不能为空');\r\n    }\r\n    \r\n    const url = `${USER_TEACHER_DETAIL_URL}?id=${teacherId}`;\r\n    const response = await fetch(url);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! Status: ${response.status}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('获取教师详情失败:', error);\r\n    throw error;\r\n  }\r\n}; "],"names":["MATCH_API_BASE_URL","uni","USER_TEACHER_DETAIL_URL"],"mappings":";;;AA2BY,MAAC,mBAAmB,OAAO,SAAS,OAAO;AACrD,MAAI;AAEF,UAAM,cAAc,IAAI;AACxB,WAAO,QAAQ,MAAM,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAM;AAC/C,UAAI,UAAU,UAAa,UAAU,MAAM;AACzC,oBAAY,OAAO,KAAK,KAAK;AAAA,MAC9B;AAAA,IACP,CAAK;AAED,UAAM,MAAM,GAAGA,eAAkB,kBAAA,GAAG,YAAY,aAAa,MAAM,YAAY,aAAa,EAAE;AAC9F,UAAM,WAAW,MAAM,MAAM,GAAG;AAEhC,QAAI,CAAC,SAAS,IAAI;AAChB,YAAM,IAAI,MAAM,uBAAuB,SAAS,MAAM,EAAE;AAAA,IACzD;AAED,WAAO,MAAM,SAAS;EACvB,SAAQ,OAAO;AACdC,kBAAc,MAAA,MAAA,SAAA,iCAAA,eAAe,KAAK;AAClC,UAAM;AAAA,EACP;AACH;AAgBY,MAAC,mBAAmB,OAAO,cAAc;AACnD,MAAI;AACF,QAAI,CAAC,WAAW;AACd,YAAM,IAAI,MAAM,UAAU;AAAA,IAC3B;AAED,UAAM,MAAM,GAAGC,eAAAA,uBAAuB,OAAO,SAAS;AACtD,UAAM,WAAW,MAAM,MAAM,GAAG;AAEhC,QAAI,CAAC,SAAS,IAAI;AAChB,YAAM,IAAI,MAAM,uBAAuB,SAAS,MAAM,EAAE;AAAA,IACzD;AAED,WAAO,MAAM,SAAS;EACvB,SAAQ,OAAO;AACdD,kBAAc,MAAA,MAAA,SAAA,iCAAA,aAAa,KAAK;AAChC,UAAM;AAAA,EACP;AACH;;;"}