{"version":3,"file":"app.js","sources":["main.js"],"sourcesContent":["import App from './App'\r\nimport { createSSRApp } from 'vue'\r\nimport store from './store'\r\nimport { createPinia } from 'pinia'\r\n\r\nimport { installDebugPlugin, installDebugForVue3 } from './utils/vuex-debug'\r\nimport { injectStoreSafety, checkStoreAvailability } from './store/inject-checker'\r\nimport LoadingPlugin from './components/loading'\r\nimport { useGlobalAnimationState } from './components/loading/useAnimationCache.js'\r\n\r\n// 提前初始化全局动画状态\r\ntry {\r\n  const { globalState, getGlobalStats, isAllAnimationsLoaded } = useGlobalAnimationState();\r\n  \r\n  // 尝试初始化全局对象\r\n  if (typeof getApp === 'function') {\r\n    try {\r\n      const app = getApp();\r\n      if (app) {\r\n        app.globalData = app.globalData || {};\r\n        \r\n        // 预先创建$loading对象的基本结构\r\n        if (!app.globalData.$loading) {\r\n          app.globalData.$loading = {\r\n            show: () => console.log('Loading组件尚未挂载，show方法未生效'),\r\n            hide: () => console.log('Loading组件尚未挂载，hide方法未生效'),\r\n            preload: () => console.log('Loading组件尚未挂载，preload方法未生效'),\r\n            isPreloaded: { value: false },\r\n            getStatus: () => ({ allLoaded: false, stats: null }),\r\n            globalState\r\n          };\r\n        }\r\n        \r\n        console.log('全局动画状态已提前初始化');\r\n      }\r\n    } catch (e) {\r\n      console.log('全局App尚未初始化，将在createApp中完成初始化');\r\n    }\r\n  }\r\n} catch (err) {\r\n  console.error('提前初始化全局动画状态失败:', err);\r\n}\r\n\r\n/**\r\n * 预加载函数，用于在页面渲染前预加载资源\r\n */\r\nasync function preloadResources() {\r\n  try {\r\n    // 检查全局app是否已初始化\r\n    const globalApp = getApp()\r\n    if (globalApp?.globalData?.$loading?.preload) {\r\n      console.log('通过全局变量预加载动画资源')\r\n      await globalApp.globalData.$loading.preload()\r\n      \r\n      // 挂载全局状态获取方法\r\n      if (!globalApp.globalData.$animationState) {\r\n        const { getGlobalStats, isAllAnimationsLoaded } = useGlobalAnimationState()\r\n        globalApp.globalData.$animationState = {\r\n          getStats: getGlobalStats,\r\n          isAllLoaded: isAllAnimationsLoaded\r\n        }\r\n      }\r\n    } else {\r\n      console.log('全局变量未就绪，将在组件挂载时预加载')\r\n    }\r\n  } catch (err) {\r\n    console.error('预加载资源失败:', err)\r\n  }\r\n}\r\n\r\nexport function createApp() {\r\n  const app = createSSRApp(App)\r\n  const pinia = createPinia()\r\n  app.use(pinia)\r\n  // ✅ 注册 Vuex\r\n  app.use(store)\r\n\r\n  // ✅ 注册加载动画插件\r\n  app.use(LoadingPlugin, {\r\n    preload: {\r\n      animations: [\r\n        'https://lottie.host/1f64310d-d1a9-44c9-ac77-3c29ae849559/c3yfKGAzCm.json'\r\n      ]\r\n    }\r\n  })\r\n\r\n  // ✅ 依赖注入方式提供 store\r\n  app.provide('store', store)\r\n\r\n  // ✅ 全局挂载 $store（兼容旧代码）\r\n  app.config.globalProperties.$store = store\r\n  \r\n  // ✅ 注册全局动画状态\r\n  const { globalState, getGlobalStats, isAllAnimationsLoaded } = useGlobalAnimationState()\r\n  // 全局变量提供访问\r\n  app.provide('animationState', {\r\n    globalState,\r\n    getStats: getGlobalStats,\r\n    isAllLoaded: isAllAnimationsLoaded\r\n  })\r\n  \r\n  // 全局属性挂载\r\n  app.config.globalProperties.$animationState = {\r\n    globalState,\r\n    getStats: getGlobalStats,\r\n    isAllLoaded: isAllAnimationsLoaded\r\n  }\r\n  \r\n  // 确保全局App对象已初始化\r\n  try {\r\n    const globalApp = getApp();\r\n    if (globalApp) {\r\n      globalApp.globalData = globalApp.globalData || {};\r\n      \r\n      // 确保$loading对象已初始化\r\n      if (!globalApp.globalData.$loading) {\r\n        globalApp.globalData.$loading = {\r\n          show: () => console.log('Loading组件尚未挂载，show方法未生效'),\r\n          hide: () => console.log('Loading组件尚未挂载，hide方法未生效'),\r\n          preload: () => console.log('Loading组件尚未挂载，preload方法未生效'),\r\n          isPreloaded: { value: false },\r\n          getStatus: () => ({ allLoaded: false, stats: null }),\r\n          globalState\r\n        };\r\n      }\r\n      \r\n      // 确保$animationState对象已初始化\r\n      globalApp.globalData.$animationState = {\r\n        getStats: getGlobalStats,\r\n        isAllLoaded: isAllAnimationsLoaded,\r\n        globalState\r\n      };\r\n      \r\n      console.log('全局动画状态已在createApp中初始化');\r\n    }\r\n  } catch (e) {\r\n    console.error('初始化全局App对象失败:', e);\r\n  }\r\n\r\n  // ✅ 注册 mixin\r\n  app.mixin(injectStoreSafety)\r\n\r\n  // ✅ 全局错误处理\r\n  const handleError = (err) => {\r\n    console.error('捕获到全局错误:', err)\r\n    // 可添加错误上报逻辑\r\n  }\r\n\r\n  app.config.errorHandler = (err, vm, info) => {\r\n    console.error('Vue错误:', err)\r\n    console.info('错误来源:', info)\r\n    handleError(err)\r\n  }\r\n\r\n  // ✅ 开发环境调试\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    try {\r\n      installDebugPlugin(store)\r\n      installDebugForVue3(app, store)\r\n      checkStoreAvailability(store)\r\n      console.log('初始Vuex状态:', store.state)\r\n      \r\n      // 调试用 - 注册全局动画状态监听器\r\n      if (typeof window !== 'undefined') {\r\n        window.__ANIMATION_DEBUG__ = {\r\n          getStats: getGlobalStats,\r\n          isAllLoaded: isAllAnimationsLoaded,\r\n          globalState\r\n        }\r\n        console.log('已注册动画状态调试工具，可通过 window.__ANIMATION_DEBUG__ 访问')\r\n      }\r\n    } catch (e) {\r\n      console.error('调试插件初始化失败:', e)\r\n    }\r\n  }\r\n\r\n  // ✅ 微信小程序错误监听\r\n  if (uni.getSystemInfoSync().platform === 'mp-weixin') {\r\n    console.log('当前运行环境: 微信小程序')\r\n    \r\n    // 配置微信小程序特有的处理\r\n    try {\r\n      // 全局错误监听\r\n      uni.onError((err) => {\r\n        console.error('小程序错误:', err)\r\n        handleError(err)\r\n      })\r\n      \r\n      // 网络请求错误\r\n      uni.onNetworkStatusChange((res) => {\r\n        console.log('网络状态变化:', res.isConnected ? '已连接' : '已断开')\r\n        store.commit('app/setNetworkStatus', res.isConnected)\r\n      })\r\n      \r\n      // 确保全局变量设置\r\n      const app = getApp()\r\n      if (app && !app.globalData) {\r\n        app.globalData = {}\r\n      }\r\n      \r\n      // 提供全局动画状态访问\r\n      if (app && app.globalData) {\r\n        app.globalData.$animationState = {\r\n          getStats: getGlobalStats,\r\n          isAllLoaded: isAllAnimationsLoaded,\r\n          globalState\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.error('微信小程序配置失败:', e)\r\n    }\r\n  }\r\n  // 尝试初始预加载\r\n  preloadResources()\r\n\r\n  // ✅ 返回给 uni-app\r\n  return {\r\n    app,\r\n    pinia\r\n  }\r\n}\r\n"],"names":["globalState","getGlobalStats","isAllAnimationsLoaded","useGlobalAnimationState","app","uni","err","preloadResources","globalApp","_b","_a","createApp","createSSRApp","App","pinia","createPinia","store","LoadingPlugin","injectStoreSafety","handleError","vm","info","installDebugPlugin","installDebugForVue3","checkStoreAvailability","res"],"mappings":"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"}