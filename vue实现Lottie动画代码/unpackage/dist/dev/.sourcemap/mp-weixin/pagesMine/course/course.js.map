{"version":3,"file":"course.js","sources":["pagesMine/course/course.vue","../../../HBuilderX/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXNNaW5lXGNvdXJzZVxjb3Vyc2UudnVl"],"sourcesContent":["<template>\r\n  <view class=\"container\">\r\n    <Header  class=\"header-container\" :title=\"'我的课程'\" @back=\"goBack\" />\r\n    \r\n    <!-- 修复日期时间选择器组件 -->\r\n    <uni-datetime-picker \r\n      ref=\"datetimePicker\"\r\n      type=\"datetime\"\r\n      :clearIcon=\"true\"\r\n      v-model=\"selectedTimestamp\"\r\n      @change=\"onDatetimeChange\"\r\n      @maskClick=\"closeDatePicker\"\r\n      :start=\"getToday()\"\r\n    />\r\n    \r\n    <uni-datetime-picker \r\n      ref=\"teacherDatetimePicker\"\r\n      type=\"datetime\"\r\n      :clearIcon=\"true\"\r\n      v-model=\"teacherSelectedTimestamp\"\r\n      @change=\"onTeacherDatetimeChange\"\r\n      @maskClick=\"closeTeacherDatePicker\"\r\n      :start=\"getToday()\"\r\n    />\r\n    \r\n    <!-- 课程时长选择弹窗 -->\r\n    <view class=\"duration-picker-mask\" v-if=\"showDurationPicker\" @click=\"closeDurationPicker\"></view>\r\n    <view class=\"duration-picker-container\" v-if=\"showDurationPicker\">\r\n      <view class=\"duration-picker-header\">\r\n        <text>课程时长</text>\r\n      </view>\r\n      <picker-view class=\"duration-picker\" :value=\"[durationIndex]\" @change=\"onDurationPickerChange\">\r\n        <picker-view-column>\r\n          <view class=\"duration-picker-item\" v-for=\"(item, index) in durationOptions\" :key=\"index\">{{item}}</view>\r\n        </picker-view-column>\r\n      </picker-view>\r\n      <view class=\"duration-picker-footer\">\r\n        <view class=\"duration-picker-btn duration-picker-cancel\" @click=\"closeDurationPicker\">取消</view>\r\n        <view class=\"duration-picker-btn duration-picker-confirm\" @click=\"confirmDurationSelection\">确定</view>\r\n      </view>\r\n    </view>\r\n    \r\n    <!-- 学生界面 -->\r\n    <template v-if=\"userRole === 'student'\">\r\n      <top-navbar @change=\"onTabChange\" :navHeight=\"60\" :userRole=\"userRole\">\r\n        <template v-slot:page1>\r\n          <view class=\"page-content\">\r\n            <!-- 删除已选择日期信息显示 -->\r\n            \r\n            <!-- 添加直接显示的可预约时间段 -->\r\n            <view class=\"available-time-slots\" v-if=\"!selectedDate && showAvailableSlots\">\r\n              <view class=\"slots-title\">\r\n                <text>可预约时间</text>\r\n                <text class=\"close-slots\" @click=\"showAvailableSlots = false\">×</text>\r\n              </view>\r\n              <view class=\"date-selector\">\r\n                <view \r\n                  v-for=\"(date, idx) in availableDates\" \r\n                  :key=\"idx\" \r\n                  class=\"date-item\" \r\n                  :class=\"{'date-selected': selectedDateIndex === idx}\"\r\n                  @click=\"selectAvailableDate(idx)\"\r\n                >\r\n                  <text class=\"date-day\">{{formatDay(date)}}</text>\r\n                  <text class=\"date-date\">{{formatDate(date)}}</text>\r\n                </view>\r\n              </view>\r\n              <view class=\"time-slots-container\">\r\n                <view \r\n                  v-for=\"(slot, idx) in filteredTimeSlots\" \r\n                  :key=\"idx\"\r\n                  class=\"time-slot-item\"\r\n                  :class=\"{'time-slot-selected': selectedTimeIndex === idx}\"\r\n                  @click=\"selectTimeSlot(idx)\"\r\n                >\r\n                  <text>{{slot}}</text>\r\n                </view>\r\n              </view>\r\n              <view class=\"duration-row\">\r\n                <text class=\"duration-label\">选择时长：</text>\r\n                <picker @change=\"onDurationChange\" :value=\"durationIndex\" :range=\"durationOptions\">\r\n                  <view class=\"duration-value\">\r\n                    {{durationOptions[durationIndex]}}\r\n                  </view>\r\n                </picker>\r\n              </view>\r\n              <button class=\"confirm-selection-btn\" @click=\"confirmDirectSelection\" :disabled=\"!canConfirmSelection\">确认预约</button>\r\n            </view>\r\n            \r\n            <scroll-view class=\"course-list\" scroll-y>\r\n              <view v-for=\"(item, index) in pendingCourses\" :key=\"index\" class=\"course-item\">\r\n                <view class=\"avatar-container\">\r\n                  <image :src=\"'/static/image/style_for_pages/avatar.png'\" class=\"avatar-image\"></image>\r\n                </view>\r\n                <view class=\"course-info\">\r\n                  <text class=\"course-name\">{{item.name}}</text>\r\n                  <text class=\"course-teacher\">服务老师：{{item.teacher}}</text>\r\n                  <text class=\"course-type\">服务类型：一对一课程</text>\r\n                  <text class=\"course-lessons\">课程节数：2/10</text>\r\n                  <text v-if=\"item.isTeacherReservation\" class=\"course-time\">老师已选时间：{{item.time}}</text>\r\n                </view>\r\n                <button v-if=\"item.isTeacherReservation\" class=\"accept-btn\" @click=\"acceptReservation(index)\">接受预约</button>\r\n                <button v-else class=\"reserve-btn\" @click=\"handleReserve(index)\">预约</button>\r\n              </view>\r\n              <view v-if=\"pendingCourses.length === 0\" class=\"empty-tip\">\r\n                <text>暂无待预约课程</text>\r\n              </view>\r\n            </scroll-view>\r\n          </view>\r\n        </template>\r\n        \r\n        <template v-slot:page2>\r\n          <!-- 已预约页面 -->\r\n          <view class=\"page-content\">\r\n            <scroll-view class=\"course-list\" scroll-y>\r\n              <view v-for=\"(item, index) in reservedCourses\" :key=\"index\" class=\"course-item\">\r\n                <view class=\"avatar-container\">\r\n                  <image :src=\"'/static/image/style_for_pages/avatar.png'\" class=\"avatar-image\"></image>\r\n                </view>\r\n                <view class=\"course-info\">\r\n                  <text class=\"course-name\">{{item.name}}</text>\r\n                  <text class=\"course-teacher\">服务老师：{{item.teacher}}</text>\r\n                  <text class=\"course-type\">服务类型：一对一课程</text>\r\n                  <text class=\"course-lessons\">预约时间：{{item.reservedTime}}</text>\r\n                  <text class=\"course-duration\" v-if=\"item.duration\">课程时长：{{item.duration}}</text>\r\n                </view>\r\n                <button class=\"modify-time-btn\" @click=\"modifyReservationTime(index)\">修改时间</button>\r\n              </view>\r\n              <view v-if=\"reservedCourses.length === 0\" class=\"empty-tip\">\r\n                <text>暂无已预约课程</text>\r\n              </view>\r\n            </scroll-view>\r\n          </view>\r\n        </template>\r\n        \r\n        <template v-slot:page3>\r\n          <!-- 已完成页面 -->\r\n          <view class=\"page-content\">\r\n            <scroll-view class=\"course-list\" scroll-y>\r\n              <view v-for=\"(item, index) in completedCourses\" :key=\"index\" class=\"course-item\">\r\n                <view class=\"avatar-container\">\r\n                  <image :src=\"'/static/image/style_for_pages/avatar.png'\" class=\"avatar-image\"></image>\r\n                </view>\r\n                <view class=\"course-info\">\r\n                  <text class=\"course-name\">{{item.name}}</text>\r\n                  <text class=\"course-teacher\">服务老师：{{item.teacher}}</text>\r\n                  <text class=\"course-type\">服务类型：一对一课程</text>\r\n                  <text class=\"course-lessons\">完成时间：{{item.completedTime}}</text>\r\n                  <view class=\"rating\" v-if=\"item.rating\">\r\n                    <text class=\"rating-text\">评分: </text>\r\n                    <text class=\"rating-star\" v-for=\"i in 5\" :key=\"i\">\r\n                      {{i <= item.rating ? '★' : '☆'}}\r\n                    </text>\r\n                  </view>\r\n                </view>\r\n                <button class=\"view-feedback-btn\" @click=\"viewFeedback(item)\">查看回放</button>\r\n              </view>\r\n              <view v-if=\"completedCourses.length === 0\" class=\"empty-tip\">\r\n                <text>暂无已完成课程</text>\r\n              </view>\r\n            </scroll-view>\r\n          </view>\r\n        </template>\r\n      </top-navbar>\r\n    </template>\r\n\r\n    <!-- 老师界面 -->\r\n    <template v-else>\r\n      <top-navbar @change=\"onTeacherTabChange\" :navHeight=\"60\" :userRole=\"userRole\">\r\n        <template v-slot:page1>\r\n          <view class=\"page-content\">\r\n            <scroll-view class=\"course-list\" scroll-y>\r\n              <view v-for=\"(item, index) in teacherPendingCourses\" :key=\"index\" class=\"course-item\">\r\n                <view class=\"avatar-container\">\r\n                  <image :src=\"'/static/image/style_for_pages/avatar.png'\" class=\"avatar-image\"></image>\r\n                </view>\r\n                <view class=\"course-info\">\r\n                  <text class=\"course-name\">{{item.name}}</text>\r\n                  <text class=\"course-teacher\">学生：{{item.studentName || '暂无'}}</text>\r\n                  <text class=\"course-type\">服务类型：一对一课程</text>\r\n                  <text class=\"course-lessons\">课程节数：2/10</text>\r\n                </view>\r\n                <button class=\"reserve-btn\" @click=\"teacherReserve(index)\">发起预约</button>\r\n              </view>\r\n              <view v-if=\"teacherPendingCourses.length === 0\" class=\"empty-tip\">\r\n                <text>暂无待接受课程</text>\r\n              </view>\r\n            </scroll-view>\r\n          </view>\r\n        </template>\r\n        \r\n        <template v-slot:page2>\r\n          <!-- 老师-进行中课程 -->\r\n          <view class=\"page-content\">\r\n            <scroll-view class=\"course-list\" scroll-y>\r\n              <view v-for=\"(item, index) in teacherActiveCourses\" :key=\"index\" class=\"course-item\">\r\n                <view class=\"avatar-container\">\r\n                  <image :src=\"'/static/image/style_for_pages/avatar.png'\" class=\"avatar-image\"></image>\r\n                </view>\r\n                <view class=\"course-info\">\r\n                  <text class=\"course-name\">{{item.name}}</text>\r\n                  <text class=\"course-teacher\">学生：{{item.studentName || '暂无'}}</text>\r\n                  <text class=\"course-type\">服务类型：一对一课程</text>\r\n                  <text class=\"course-lessons\">上课时间：{{item.classTime}}</text>\r\n                  <text class=\"course-duration\" v-if=\"item.duration\">课程时长：{{item.duration}}</text>\r\n                </view>\r\n                <button class=\"confirm-class-btn\" @click=\"completeClass(index)\">确认下课</button>\r\n                <button class=\"modify-time-btn\" @click=\"rescheduleClass(index)\">修改时间</button>\r\n              </view>\r\n              <view v-if=\"teacherActiveCourses.length === 0\" class=\"empty-tip\">\r\n                <text>暂无进行中课程</text>\r\n              </view>\r\n            </scroll-view>\r\n          </view>\r\n        </template>\r\n        \r\n        <template v-slot:page3>\r\n          <!-- 老师-已完成课程 -->\r\n          <view class=\"page-content\">\r\n            <scroll-view class=\"course-list\" scroll-y>\r\n              <view v-for=\"(item, index) in teacherCompletedCourses\" :key=\"index\" class=\"course-item\">\r\n                <view class=\"avatar-container\">\r\n                  <image :src=\"'/static/image/style_for_pages/avatar.png'\" class=\"avatar-image\"></image>\r\n                </view>\r\n                <view class=\"course-info\">\r\n                  <text class=\"course-name\">{{item.name}}</text>\r\n                  <text class=\"course-teacher\">学生：{{item.studentName || '暂无'}}</text>\r\n                  <text class=\"course-type\">服务类型：一对一课程</text>\r\n                  <text class=\"course-lessons\">完成时间：{{item.completedTime}}</text>\r\n                </view>\r\n                <button class=\"view-feedback-btn\" @click=\"viewClassFeedback(item)\">查看回放</button>\r\n              </view>\r\n              <view v-if=\"teacherCompletedCourses.length === 0\" class=\"empty-tip\">\r\n                <text>暂无已完成课程</text>\r\n              </view>\r\n            </scroll-view>\r\n          </view>\r\n        </template>\r\n      </top-navbar>\r\n    </template>\r\n  </view>\r\n</template>\r\n\r\n<script lang=\"uts\">\r\nimport Header from '@/components/navigationTitleBar/header'\r\n// 导入顶部导航栏组件\r\nimport topNavbar from '@/components/top-navbar/top-navbar.vue';\r\n// 导入导航工具\r\nimport { Navigator } from '@/router/Router.js';\r\nimport uniDatetimePicker from '@/uni_modules/uni-datetime-picker/components/uni-datetime-picker/uni-datetime-picker.vue';\r\n\r\nexport default {\r\n  components: {\r\n    Header,\r\n    topNavbar,\r\n    uniDatetimePicker\r\n  },\r\n  data() {\r\n    return {\r\n      currentTab: 0,\r\n      teacherCurrentTab: 0,\r\n      // 更具体的时间段选择\r\n      timeSlots: [\r\n        { period: '上午', slots: ['08:00-09:00', '09:00-10:00', '10:00-11:00', '11:00-12:00'] },\r\n        { period: '下午', slots: ['13:00-14:00', '14:00-15:00', '15:00-16:00', '16:00-17:00'] },\r\n        { period: '晚上', slots: ['18:00-19:00', '19:00-20:00', '20:00-21:00'] }\r\n      ],\r\n      selectedTimeSlot: '',\r\n      selectedTimePeriod: '',\r\n      \r\n      // 添加日期时间选择相关数据\r\n      selectedTimestamp: Date.now(), // 学生端选择的时间戳\r\n      teacherSelectedTimestamp: Date.now(), // 老师端选择的时间戳\r\n      durationOptions: ['30分钟', '45分钟', '60分钟', '90分钟', '120分钟'], // 时长选项\r\n      durationIndex: 2, // 默认选择60分钟\r\n      teacherDurationIndex: 2, // 老师端默认选择60分钟\r\n      durationMinutes: 60, // 默认时长（分钟）\r\n      teacherDurationMinutes: 60, // 老师端默认时长（分钟）\r\n      \r\n      // 添加控制日期时间选择器显示的变量\r\n      datePickerVisible: false,\r\n      teacherDatePickerVisible: false,\r\n      \r\n      // 添加可用时间段直接显示相关数据\r\n      showAvailableSlots: false,\r\n      availableDates: [],\r\n      selectedDateIndex: -1,\r\n      selectedTimeIndex: -1,\r\n      currentCourseForDirect: null,\r\n      allTimeSlots: [], // 存储所有时间段\r\n      \r\n      // 待预约课程数据 - 修改为考研相关课程\r\n      pendingCourses: [\r\n        {\r\n          id: 1,\r\n          name: \"考研政治精讲班\",\r\n          teacher: \"王老师\",\r\n          time: \"2023-12-15 14:00\",\r\n          price: 399,\r\n          image: \"/static/images/default_avatar.png\",\r\n          description: \"系统讲解考研政治马原、毛中特、思修法基、当代世界经济与政治重点内容。\"\r\n        },\r\n        {\r\n          id: 2,\r\n          name: \"考研数学基础班\",\r\n          teacher: \"李老师\",\r\n          time: \"2023-12-16 10:00\",\r\n          price: 499,\r\n          image: \"/static/images/default_avatar.png\",\r\n          description: \"覆盖高等数学、线性代数、概率论与数理统计核心知识点，夯实数学基础。\"\r\n        },\r\n        {\r\n          id: 3,\r\n          name: \"考研英语词汇班\",\r\n          teacher: \"张老师\",\r\n          time: \"2023-12-17 15:00\",\r\n          price: 349,\r\n          image: \"/static/images/default_avatar.png\",\r\n          description: \"掌握考研英语必备5500词汇，提高阅读理解和写作能力。\"\r\n        },\r\n        {\r\n          id: 4,\r\n          name: \"计算机专业课辅导\",\r\n          teacher: \"陈老师\",\r\n          time: \"2023-12-18 19:00\",\r\n          price: 549,\r\n          image: \"/static/images/default_avatar.png\",\r\n          description: \"针对计算机专业考生，讲解数据结构、操作系统、计算机网络等核心科目。\"\r\n        }\r\n      ],\r\n      // 已预约课程数据\r\n      reservedCourses: [\r\n        {\r\n          id: 5,\r\n          name: \"考研专业课强化班\",\r\n          teacher: \"赵老师\",\r\n          price: 599,\r\n          reservedTime: \"2023-12-18 14:00\",\r\n          image: \"/static/images/default_avatar.png\",\r\n          description: \"针对专业课考试，深入讲解重点难点，提供真题分析和解题技巧。\"\r\n        },\r\n        {\r\n          id: 6,\r\n          name: \"考研政治冲刺班\",\r\n          teacher: \"孙老师\",\r\n          price: 449,\r\n          reservedTime: \"2023-12-19 10:00\",\r\n          image: \"/static/images/default_avatar.png\",\r\n          description: \"考前政治热点分析，提供答题模板和背诵要点，助力考研政治高分。\"\r\n        }\r\n      ],\r\n      // 已完成课程数据\r\n      completedCourses: [\r\n        {\r\n          id: 7,\r\n          name: \"考研英语写作班\",\r\n          teacher: \"黄老师\",\r\n          price: 399,\r\n          completedTime: \"2023-12-10 15:00\",\r\n          image: \"/static/images/default_avatar.png\",\r\n          replayUrl: \"https://meeting.tencent.com/v2/cloud-record/share?id=5fcc0283-6d70-4b56-8710-5ef9318c475b&from=3\"\r\n        },\r\n        {\r\n          id: 8,\r\n          name: \"考研复试指导课\",\r\n          teacher: \"周老师\",\r\n          price: 499,\r\n          completedTime: \"2023-12-15 09:00\",\r\n          image: \"/static/images/default_avatar.png\",\r\n          replayUrl: \"https://meeting.tencent.com/v2/cloud-record/share?id=7e9f8d62-34a1-4b12-9f80-5c31d9b52ec8&from=3\"\r\n        }\r\n      ],\r\n      currentCourseIndex: null,\r\n      selectedDate: null,\r\n      userRole: 'student', // 默认为学生角色\r\n      userName: '',\r\n      userData: {},\r\n      isLoggedIn: false,\r\n      teacherPendingCourses: [],\r\n      teacherActiveCourses: [],\r\n      teacherCompletedCourses: [],\r\n      showDurationPicker: false,\r\n      durationIndex: 2,\r\n      durationMinutes: 60,\r\n      currentOperation: null\r\n    };\r\n  },\r\n  computed: {\r\n    // 将方法改为计算属性\r\n    filteredTimeSlots() {\r\n      if (this.selectedDateIndex === -1) return [];\r\n      \r\n      // 如果allTimeSlots为空，则初始化\r\n      if (this.allTimeSlots.length === 0) {\r\n        this.timeSlots.forEach(slot => {\r\n          this.allTimeSlots.push(...slot.slots);\r\n        });\r\n      }\r\n      \r\n      // 如果是今天，只显示当前时间之后的时间段\r\n      if (this.selectedDateIndex === 0) {\r\n        const now = new Date();\r\n        const currentHour = now.getHours();\r\n        const currentMinute = now.getMinutes();\r\n        \r\n        return this.allTimeSlots.filter(slot => {\r\n          const slotStartTime = slot.split('-')[0];\r\n          const [slotHour, slotMinute] = slotStartTime.split(':').map(Number);\r\n          \r\n          // 如果小时大于当前小时，则可选\r\n          if (slotHour > currentHour) {\r\n            return true;\r\n          }\r\n          // 如果小时等于当前小时，但分钟大于当前分钟，则可选\r\n          if (slotHour === currentHour && slotMinute > currentMinute) {\r\n            return true;\r\n          }\r\n          return false;\r\n        });\r\n      }\r\n      \r\n      return this.allTimeSlots;\r\n    },\r\n    \r\n    // 是否可以确认选择\r\n    canConfirmSelection() {\r\n      return this.selectedDateIndex !== -1 && this.selectedTimeIndex !== -1;\r\n    }\r\n  },\r\n  onLoad(options) {\r\n    uni.__f__('log','at pagesMine/course/course.vue:431','课程页面 onLoad', options);\r\n    \r\n    // 初始化页面数据\r\n    this.loadUserData();\r\n    \r\n    // 使用全局状态或传递的参数确定角色\r\n    const globalData = getApp().globalData;\r\n    const storedUserRole = uni.getStorageSync('userRole');\r\n    \r\n    // 优先使用全局状态中的角色\r\n    if (globalData && globalData.userRole) {\r\n      this.userRole = globalData.userRole;\r\n      uni.__f__('log','at pagesMine/course/course.vue:443','使用全局角色状态:', this.userRole);\r\n    }\r\n    // 其次使用存储的角色\r\n    else if (storedUserRole) {\r\n      this.userRole = storedUserRole;\r\n      // 同步到全局状态\r\n      if (globalData) {\r\n        globalData.userRole = this.userRole;\r\n      }\r\n      uni.__f__('log','at pagesMine/course/course.vue:452','使用存储的角色:', this.userRole);\r\n    }\r\n    \r\n    // 加载对应角色的数据\r\n    this.loadCourseData();\r\n  },\r\n  onShow() {\r\n    uni.__f__('log','at pagesMine/course/course.vue:459','课程页面 onShow, 当前角色:', this.userRole);\r\n    \r\n    // 检查全局状态\r\n    const globalData = getApp().globalData;\r\n    if (globalData && globalData.userRole && globalData.userRole !== this.userRole) {\r\n      uni.__f__('log','at pagesMine/course/course.vue:464','全局角色变更:', globalData.userRole);\r\n      const previousRole = this.userRole;\r\n      this.userRole = globalData.userRole;\r\n      \r\n      // 如果角色发生变化，重置相关状态并更新存储\r\n      if (previousRole !== this.userRole) {\r\n        this.resetRoleRelatedState();\r\n        uni.setStorageSync('userRole', this.userRole);\r\n        this.loadCourseData();\r\n      }\r\n    }\r\n    \r\n    // 如果本地存储的角色与当前不一致，则以本地存储为准\r\n    const storedUserRole = uni.getStorageSync('userRole');\r\n    if (storedUserRole && storedUserRole !== this.userRole) {\r\n      uni.__f__('log','at pagesMine/course/course.vue:479','存储角色与当前不一致, 存储:', storedUserRole, '当前:', this.userRole);\r\n      const previousRole = this.userRole;\r\n      this.userRole = storedUserRole;\r\n      \r\n      // 同步到全局状态\r\n      if (globalData) {\r\n        globalData.userRole = this.userRole;\r\n      }\r\n      \r\n      // 如果角色发生变化，重置相关状态\r\n      if (previousRole !== this.userRole) {\r\n        this.resetRoleRelatedState();\r\n        this.loadCourseData();\r\n      }\r\n    }\r\n  },\r\n  // 页面卸载时保存状态\r\n  onUnload() {\r\n    uni.__f__('log','at pagesMine/course/course.vue:497','课程页面 onUnload, 保存当前角色:', this.userRole);\r\n    // 确保角色信息被持久化\r\n    uni.setStorageSync('userRole', this.userRole);\r\n    \r\n    // 同步到全局状态\r\n    const globalData = getApp().globalData;\r\n    if (globalData) {\r\n      globalData.userRole = this.userRole;\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n     * @description 加载用户数据\r\n     */\r\n    loadUserData() {\r\n      // 检查登录状态\r\n      const token = uni.getStorageSync('token');\r\n      this.isLoggedIn = !!token;\r\n      \r\n      if (this.isLoggedIn) {\r\n        // 获取用户信息\r\n        const userInfo = uni.getStorageSync('userInfo');\r\n        if (userInfo) {\r\n          try {\r\n            this.userData = typeof userInfo === 'string' ? JSON.parse(userInfo) : userInfo;\r\n            this.userName = this.userData.nickname || '用户';\r\n            \r\n            // 如果存储中有用户角色，使用存储的角色\r\n            const previousRole = this.userRole;\r\n            if (this.userData.role) {\r\n              // 更新当前角色\r\n              this.userRole = this.userData.role;\r\n              uni.__f__('log','at pagesMine/course/course.vue:529','从用户数据中设置角色:', this.userRole);\r\n              \r\n              // 同步更新到storage\r\n              uni.setStorageSync('userRole', this.userData.role);\r\n              \r\n              // 同步到全局状态\r\n              const globalData = getApp().globalData;\r\n              if (globalData) {\r\n                globalData.userRole = this.userRole;\r\n              }\r\n              \r\n              // 如果角色发生变化，重置相关状态\r\n              if (previousRole !== this.userRole) {\r\n                this.resetRoleRelatedState();\r\n              }\r\n            }\r\n          } catch (e) {\r\n            uni.__f__('error','at pagesMine/course/course.vue:546','解析用户信息失败:', e);\r\n          }\r\n        }\r\n      } else {\r\n        this.userData = {};\r\n        this.userName = '';\r\n        \r\n        // 注意：这里不再自动重置为学生角色\r\n        // 而是保持当前角色不变，避免意外重置\r\n        uni.__f__('log','at pagesMine/course/course.vue:555','未登录，保持当前角色:', this.userRole);\r\n      }\r\n    },\r\n    \r\n    // 重置与角色相关的状态\r\n    resetRoleRelatedState() {\r\n      uni.__f__('log','at pagesMine/course/course.vue:561','重置角色相关状态');\r\n      if (this.userRole === 'student') {\r\n        this.currentTab = 0;\r\n      } else {\r\n        this.teacherCurrentTab = 0;\r\n      }\r\n      this.selectedDate = null;\r\n      this.selectedTimeSlot = '';\r\n      this.selectedTimePeriod = '';\r\n    },\r\n    \r\n    // 处理顶部导航栏组件的标签切换事件 - 学生\r\n    onTabChange(index) {\r\n      uni.__f__('log','at pagesMine/course/course.vue:574','学生模式标签切换:', index);\r\n      this.currentTab = index;\r\n      \r\n      // 重置时间选择\r\n      if (index === 0) {\r\n        this.selectedTimeSlot = '';\r\n        this.selectedTimePeriod = '';\r\n      }\r\n    },\r\n    \r\n    // 重置日期选择\r\n    resetDateSelection() {\r\n      this.selectedDate = null;\r\n      this.selectedTimeSlot = '';\r\n      this.selectedTimePeriod = '';\r\n    },\r\n    \r\n    // 处理预约 - 修改为使用日期选择器\r\n    handleReserve(index) {\r\n      this.currentCourseIndex = index;\r\n      this.currentCourseForDirect = this.pendingCourses[index];\r\n      this.currentOperation = 'student_reserve';\r\n      \r\n      // 显示日期时间选择器\r\n      this.$refs.datetimePicker.show();\r\n    },\r\n    \r\n    // 生成可用日期\r\n    generateAvailableDates() {\r\n      const dates = [];\r\n      const today = new Date();\r\n      \r\n      for (let i = 0; i < 7; i++) {\r\n        const date = new Date(today);\r\n        date.setDate(today.getDate() + i);\r\n        dates.push(date);\r\n      }\r\n      \r\n      this.availableDates = dates;\r\n    },\r\n    \r\n    // 格式化日期显示的星期\r\n    formatDay(date) {\r\n      const days = ['周日', '周一', '周二', '周三', '周四', '周五', '周六'];\r\n      return days[date.getDay()];\r\n    },\r\n    \r\n    // 格式化日期显示的日期\r\n    formatDate(date) {\r\n      return `${date.getMonth() + 1}月${date.getDate()}日`;\r\n    },\r\n    \r\n    // 选择可用日期\r\n    selectAvailableDate(index) {\r\n      this.selectedDateIndex = index;\r\n      this.selectedTimeIndex = -1; // 重置时间选择\r\n      \r\n      // 如果选择的是今天，检查并滚动到可见的第一个时间段\r\n      if (index === 0 && this.filteredTimeSlots.length > 0) {\r\n        // 在下一个UI循环中，确保时间段列表已经更新\r\n        this.$nextTick(() => {\r\n          const timeSlotItems = document.querySelectorAll('.time-slot-item');\r\n          if (timeSlotItems.length > 0) {\r\n            timeSlotItems[0].scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n          }\r\n        });\r\n      }\r\n    },\r\n    \r\n    // 选择时间段\r\n    selectTimeSlot(index) {\r\n      this.selectedTimeIndex = index;\r\n    },\r\n    \r\n    // 时长选择变化事件\r\n    onDurationChange(e) {\r\n      this.durationIndex = e.detail.value;\r\n      // 根据选择的索引确定时长分钟数\r\n      const durationValues = [30, 45, 60, 90, 120];\r\n      this.durationMinutes = durationValues[this.durationIndex];\r\n    },\r\n    \r\n    // 显示时间选择弹窗\r\n    showTimeSelectionDialog() {\r\n      // 构建时间段选项\r\n      const periodOptions = this.timeSlots.map(item => item.period);\r\n      \r\n      // 先选择时间段（上午/下午/晚上）\r\n      uni.showActionSheet({\r\n        itemList: periodOptions,\r\n        success: (res) => {\r\n          this.selectedTimePeriod = periodOptions[res.tapIndex];\r\n          const selectedPeriod = this.timeSlots[res.tapIndex];\r\n          \r\n          // 然后选择具体时间\r\n          setTimeout(() => {\r\n            uni.showActionSheet({\r\n              itemList: selectedPeriod.slots,\r\n              success: (timeRes) => {\r\n                this.selectedTimeSlot = selectedPeriod.slots[timeRes.tapIndex];\r\n                \r\n                // 选择完时间后显示确认预约弹窗\r\n                this.confirmReservation();\r\n              }\r\n            });\r\n          }, 300);\r\n        }\r\n      });\r\n    },\r\n    \r\n    // 确认预约\r\n    confirmReservation() {\r\n      const course = this.pendingCourses[this.currentCourseIndex];\r\n      const durationText = this.durationOptions[this.durationIndex];\r\n      \r\n      // 显示确认弹窗\r\n      uni.showModal({\r\n        title: '确认预约',\r\n        content: `课程：${course.name}\\n日期时间：${this.selectedDate}\\n时长：${durationText}`,\r\n        success: (res) => {\r\n          if (res.confirm) {\r\n            // 将预约成功的课程添加到已预约列表\r\n            this.reservedCourses.push({\r\n              ...course,\r\n              reservedTime: this.selectedDate,\r\n              duration: durationText\r\n            });\r\n            \r\n            // 从待预约列表中删除\r\n            this.pendingCourses.splice(this.currentCourseIndex, 1);\r\n            \r\n            uni.showToast({\r\n              title: '预约成功',\r\n              icon: 'success',\r\n              duration: 2000\r\n            });\r\n            \r\n            // 重置状态\r\n            this.currentCourseIndex = null;\r\n            this.selectedDate = null;\r\n          }\r\n        }\r\n      });\r\n    },\r\n    \r\n    // 完成课程时添加回放链接\r\n    completeClass(index) {\r\n      const course = this.teacherActiveCourses[index];\r\n      \r\n      // 先让用户输入回放链接\r\n      uni.showModal({\r\n        title: '添加课程回放',\r\n        editable: true,\r\n        placeholderText: '请输入课程回放链接 (可选)',\r\n        success: (res) => {\r\n          let replayUrl = '';\r\n          if (res.confirm && res.content) {\r\n            replayUrl = res.content;\r\n          }\r\n          \r\n          // 再确认完成课程\r\n          uni.showModal({\r\n            title: '确认下课',\r\n            content: `确定完成${course.studentName}的${course.name}课程吗？`,\r\n            success: (confirmRes) => {\r\n              if (confirmRes.confirm) {\r\n                // 将课程从进行中移动到已完成\r\n                this.teacherCompletedCourses.push({\r\n                  ...course,\r\n                  completedTime: new Date().toISOString().split('T')[0],\r\n                  replayUrl: replayUrl\r\n                });\r\n                \r\n                // 从进行中列表中删除\r\n                this.teacherActiveCourses.splice(index, 1);\r\n                \r\n                uni.showToast({\r\n                  title: '课程已完成',\r\n                  icon: 'success',\r\n                  duration: 2000\r\n                });\r\n              }\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    \r\n    // 修改预约时间\r\n    modifyReservationTime(index) {\r\n      this.currentCourseIndex = index;\r\n      this.currentOperation = 'student_modify';\r\n      \r\n      // 显示日期时间选择器\r\n      this.$refs.datetimePicker.show();\r\n    },\r\n    \r\n    // 查看回访/回放\r\n    viewFeedback(course) {\r\n      if (course.replayUrl) {\r\n        // 如果有回放URL，跳转到回放页面\r\n        uni.showModal({\r\n          title: '查看回放',\r\n          content: '是否跳转到课程回放网页？',\r\n          success: (res) => {\r\n            if (res.confirm) {\r\n              // 跳转到外部链接\r\n              this.openExternalLink(course.replayUrl);\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        // 默认跳转到评价页面\r\n        uni.navigateTo({\r\n          url: `/pages/mine/order/appraise/appraise?courseId=${course.id}&courseName=${course.name}&teacherName=${course.teacher}&price=${course.price}`\r\n        });\r\n      }\r\n    },\r\n    \r\n    // 加载课程数据\r\n    loadCourseData() {\r\n      // 真实环境中可以从服务器获取数据\r\n      uni.__f__('log','at pagesMine/course/course.vue:796','加载课程数据，当前角色:', this.userRole);\r\n      \r\n      // 根据用户角色加载不同的数据\r\n      if (this.userRole === 'teacher') {\r\n        uni.__f__('log','at pagesMine/course/course.vue:800','加载老师课程数据');\r\n        this.initTeacherData();\r\n        \r\n        // 确保使用老师的标签页索引\r\n        this.teacherCurrentTab = 0;\r\n      } else {\r\n        uni.__f__('log','at pagesMine/course/course.vue:806','加载学生课程数据');\r\n        // 为学生角色初始化数据\r\n        this.initStudentData();\r\n        \r\n        // 确保使用学生的标签页索引\r\n        this.currentTab = 0;\r\n      }\r\n    },\r\n\r\n    // 处理老师界面的导航栏切换事件\r\n    onTeacherTabChange(index) {\r\n      uni.__f__('log','at pagesMine/course/course.vue:817','老师模式标签切换:', index);\r\n      this.teacherCurrentTab = index;\r\n      \r\n      // 触发必要的数据加载或UI更新\r\n      if (index === 0) {\r\n        // 待接受课程\r\n        uni.__f__('log','at pagesMine/course/course.vue:823','切换到老师-待接受课程标签');\r\n      } else if (index === 1) {\r\n        // 进行中课程\r\n        uni.__f__('log','at pagesMine/course/course.vue:826','切换到老师-进行中课程标签');\r\n      } else if (index === 2) {\r\n        // 已完成课程\r\n        uni.__f__('log','at pagesMine/course/course.vue:829','切换到老师-已完成课程标签');\r\n      }\r\n    },\r\n    \r\n    // 初始化教师数据\r\n    initTeacherData() {\r\n      uni.__f__('log','at pagesMine/course/course.vue:835','初始化教师数据');\r\n      \r\n      // 模拟从服务器获取教师相关数据\r\n      this.teacherPendingCourses = [\r\n        {\r\n          id: 101,\r\n          name: \"考研政治精讲班\",\r\n          studentName: \"张同学\",\r\n          price: 399,\r\n          image: \"/static/images/default_avatar.png\"\r\n        },\r\n        {\r\n          id: 102,\r\n          name: \"考研数学基础班\",\r\n          studentName: \"李同学\",\r\n          price: 499,\r\n          image: \"/static/images/default_avatar.png\"\r\n        }\r\n      ];\r\n      \r\n      this.teacherActiveCourses = [\r\n        {\r\n          id: 103,\r\n          name: \"考研英语词汇班\",\r\n          studentName: \"王同学\",\r\n          price: 349,\r\n          classTime: \"2023-12-20 15:00\",\r\n          image: \"/static/images/default_avatar.png\"\r\n        }\r\n      ];\r\n      \r\n      this.teacherCompletedCourses = [\r\n        {\r\n          id: 104,\r\n          name: \"计算机专业课辅导\",\r\n          studentName: \"赵同学\",\r\n          price: 549,\r\n          completedTime: \"2023-12-10\",\r\n          image: \"/static/images/default_avatar.png\",\r\n          replayUrl: \"https://meeting.tencent.com/v2/cloud-record/share?id=9a0c7f38-5e12-4d1d-a53e-94ed126aa3bb&from=3\"\r\n        }\r\n      ];\r\n    },\r\n    \r\n    // 老师端 - 发起预约\r\n    teacherReserve(index) {\r\n      this.currentCourseIndex = index;\r\n      // 显示日期时间选择器\r\n      this.$refs.teacherDatetimePicker.show();\r\n    },\r\n    \r\n    // 老师端 - 日期时间选择器变化事件\r\n    onTeacherDatetimeChange(e) {\r\n      this.teacherDatePickerVisible = false; // 选择后自动关闭\r\n      // 将时间戳转换为可读格式的日期时间\r\n      this.teacherSelectedTimestamp = e;\r\n      const date = new Date(e);\r\n      this.selectedDate = this.formatDateTime(date);\r\n      \r\n      // 设置当前操作标记，用于区分是发起预约还是修改时间\r\n      if (this.teacherCurrentTab === 0) {\r\n        this.currentOperation = 'reserve';\r\n      } else if (this.teacherCurrentTab === 1) {\r\n        this.currentOperation = 'reschedule';\r\n      }\r\n      \r\n      // 老师端始终显示时长选择弹窗\r\n      this.showDurationPicker = true;\r\n    },\r\n    \r\n    // 处理课程时长选择变化\r\n    onDurationPickerChange(e) {\r\n      const index = e.detail.value[0];\r\n      if (this.currentOperation === 'reserve') {\r\n        this.teacherDurationIndex = index;\r\n      } else {\r\n        this.durationIndex = index;\r\n      }\r\n    },\r\n    \r\n    // 关闭课程时长选择弹窗\r\n    closeDurationPicker() {\r\n      this.showDurationPicker = false;\r\n    },\r\n    \r\n    // 确认课程时长选择\r\n    confirmDurationSelection() {\r\n      // 根据当前操作类型确定调用哪个确认方法\r\n      if (this.currentOperation === 'reserve') {\r\n        // 更新时长分钟数\r\n        const durationValues = [30, 45, 60, 90, 120];\r\n        this.teacherDurationMinutes = durationValues[this.teacherDurationIndex];\r\n        \r\n        // 发起预约\r\n        this.confirmTeacherReservation();\r\n      } else if (this.currentOperation === 'reschedule') {\r\n        // 更新时长分钟数\r\n        const durationValues = [30, 45, 60, 90, 120];\r\n        this.durationMinutes = durationValues[this.durationIndex];\r\n        \r\n        // 修改时间\r\n        this.confirmRescheduleClass();\r\n      } else if (this.currentOperation === 'student_reserve') {\r\n        // 更新时长分钟数\r\n        const durationValues = [30, 45, 60, 90, 120];\r\n        this.durationMinutes = durationValues[this.durationIndex];\r\n        \r\n        // 学生预约确认\r\n        this.confirmReservation();\r\n      } else if (this.currentOperation === 'student_modify') {\r\n        // 更新时长分钟数\r\n        const durationValues = [30, 45, 60, 90, 120];\r\n        this.durationMinutes = durationValues[this.durationIndex];\r\n        \r\n        // 学生修改预约时间确认\r\n        this.confirmModifyReservation();\r\n      }\r\n      \r\n      // 关闭弹窗\r\n      this.showDurationPicker = false;\r\n    },\r\n    \r\n    // 格式化日期时间为易读格式\r\n    formatDateTime(date) {\r\n      const year = date.getFullYear();\r\n      const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n      const day = date.getDate().toString().padStart(2, '0');\r\n      const hours = date.getHours().toString().padStart(2, '0');\r\n      const minutes = date.getMinutes().toString().padStart(2, '0');\r\n      \r\n      return `${year}-${month}-${day} ${hours}:${minutes}`;\r\n    },\r\n    \r\n    // 老师端 - 确认预约\r\n    confirmTeacherReservation() {\r\n      const course = this.teacherPendingCourses[this.currentCourseIndex];\r\n      const durationText = this.durationOptions[this.teacherDurationIndex];\r\n      \r\n      // 显示确认弹窗\r\n      uni.showModal({\r\n        title: '确认发起预约',\r\n        content: `课程：${course.name}\\n学生：${course.studentName}\\n日期时间：${this.selectedDate}\\n时长：${durationText}`,\r\n        success: (res) => {\r\n          if (res.confirm) {\r\n            // 模拟将预约信息发送给学生\r\n            this.sendReservationToStudent(course);\r\n            \r\n            // 从待接受列表中删除\r\n            this.teacherPendingCourses.splice(this.currentCourseIndex, 1);\r\n            \r\n            uni.showToast({\r\n              title: '预约已发送',\r\n              icon: 'success',\r\n              duration: 2000\r\n            });\r\n            \r\n            // 重置状态\r\n            this.currentCourseIndex = null;\r\n            this.selectedDate = null;\r\n          }\r\n        }\r\n      });\r\n    },\r\n    \r\n    // 模拟将预约信息发送给学生\r\n    sendReservationToStudent(course) {\r\n      // 真实场景中，这里应该是通过API发送预约信息\r\n      uni.__f__('log','at pagesMine/course/course.vue:1002','发送预约信息到学生:', course.studentName);\r\n      \r\n      const durationText = this.durationOptions[this.teacherDurationIndex];\r\n      \r\n      // 模拟更新全局状态或本地存储\r\n      const globalData = getApp().globalData || {};\r\n      if (!globalData.studentReservations) {\r\n        globalData.studentReservations = [];\r\n      }\r\n      \r\n      // 添加新的预约\r\n      globalData.studentReservations.push({\r\n        id: Date.now(),\r\n        name: course.name,\r\n        teacher: '我', // 当前登录的老师\r\n        time: this.selectedDate,\r\n        duration: durationText,\r\n        price: course.price,\r\n        image: course.image || \"/static/images/default_avatar.png\",\r\n        description: `由老师发起的预约：${course.name}`,\r\n        studentName: course.studentName\r\n      });\r\n      \r\n      // 将课程添加到老师的进行中课程\r\n      this.teacherActiveCourses.push({\r\n        ...course,\r\n        classTime: this.selectedDate,\r\n        duration: durationText\r\n      });\r\n    },\r\n    \r\n    // 查看回访/回放\r\n    viewClassFeedback(item) {\r\n      if (item.replayUrl) {\r\n        // 如果有回放URL，跳转到回放页面\r\n        uni.showModal({\r\n          title: '查看回放',\r\n          content: '是否跳转到课程回放网页？',\r\n          success: (res) => {\r\n            if (res.confirm) {\r\n              // 跳转到外部链接\r\n              this.openExternalLink(item.replayUrl);\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        // 默认显示评价内容\r\n        uni.showModal({\r\n          title: '学生评价',\r\n          content: `${item.studentName}对本课程的评价：\\n非常棒的课程，讲解清晰，收获很多！`,\r\n          showCancel: false\r\n        });\r\n      }\r\n    },\r\n    \r\n    // 生成随机未来时间（辅助方法）\r\n    getRandomFutureTime() {\r\n      const now = new Date();\r\n      // 随机1-7天内的某个时间\r\n      const futureDate = new Date(now.getTime() + (1 + Math.floor(Math.random() * 7)) * 24 * 60 * 60 * 1000);\r\n      const year = futureDate.getFullYear();\r\n      const month = String(futureDate.getMonth() + 1).padStart(2, '0');\r\n      const day = String(futureDate.getDate()).padStart(2, '0');\r\n      const hours = ['09', '10', '14', '15', '16', '19', '20'][Math.floor(Math.random() * 7)];\r\n      const minutes = ['00', '30'][Math.floor(Math.random() * 2)];\r\n      \r\n      return `${year}-${month}-${day} ${hours}:${minutes}`;\r\n    },\r\n    \r\n    // 通用方法：打开外部链接（兼容多端）\r\n    openExternalLink(url) {\r\n      // 根据平台不同使用不同的方式打开外部链接\r\n\r\n\r\n\r\n\r\n      \r\n\r\n\r\n\r\n\r\n      \r\n\r\n      // 小程序环境下使用uni.navigateTo跳转到web-view页面\r\n      uni.navigateTo({\r\n        url: `/pages/webview/webview?url=${encodeURIComponent(url)}`\r\n      });\r\n\r\n      \r\n      // 其他环境\r\n      uni.__f__('log','at pagesMine/course/course.vue:1092','跳转到外部链接:', url);\r\n    },\r\n\r\n    // 确认下课\r\n    confirmClassEnd(index) {\r\n      uni.showModal({\r\n        title: '确认下课',\r\n        content: '确定要确认下课吗？',\r\n        success: (res) => {\r\n          if (res.confirm) {\r\n            // 将课程状态修改为已完成\r\n            const completedCourse = this.reservedCourses[index];\r\n            this.completedCourses.push({\r\n              ...completedCourse,\r\n              completedTime: new Date().toISOString().split('T')[0]\r\n            });\r\n            \r\n            // 从已预约列表中删除\r\n            this.reservedCourses.splice(index, 1);\r\n            \r\n            uni.showToast({ \r\n              title: '已确认下课',\r\n              icon: 'success',\r\n              duration: 2000\r\n            });\r\n          }\r\n        }\r\n      });\r\n    },\r\n\r\n    // 学生数据初始化\r\n    initStudentData() {\r\n      uni.__f__('log','at pagesMine/course/course.vue:1124','初始化学生数据');\r\n      \r\n      // 先加载默认数据\r\n      // 这里不需要重新初始化pendingCourses，因为已经有默认数据了\r\n      \r\n      // 检查全局数据中是否有老师发起的预约\r\n      const globalData = getApp().globalData || {};\r\n      if (globalData.studentReservations && globalData.studentReservations.length > 0) {\r\n        uni.__f__('log','at pagesMine/course/course.vue:1132','发现老师发起的预约:', globalData.studentReservations.length);\r\n        \r\n        // 将老师发起的预约添加到学生的待预约列表\r\n        globalData.studentReservations.forEach(reservation => {\r\n          // 检查是否已存在相同ID的课程，避免重复添加\r\n          const exists = this.pendingCourses.some(course => course.id === reservation.id);\r\n          if (!exists) {\r\n            this.pendingCourses.unshift({\r\n              id: reservation.id,\r\n              name: reservation.name,\r\n              teacher: reservation.teacher,\r\n              time: reservation.time,\r\n              price: reservation.price,\r\n              image: reservation.image,\r\n              description: reservation.description,\r\n              isTeacherReservation: true // 标记为老师发起的预约\r\n            });\r\n          }\r\n        });\r\n        \r\n        // 处理完后清空全局数据中的预约信息，避免重复显示\r\n        globalData.studentReservations = [];\r\n      }\r\n    },\r\n\r\n    // 学生端 - 接受老师发起的预约\r\n    acceptReservation(index) {\r\n      const course = this.pendingCourses[index];\r\n      \r\n      // 显示确认接受预约的弹窗\r\n      uni.showModal({\r\n        title: '接受预约',\r\n        content: `确认接受${course.teacher}的预约吗？\\n课程：${course.name}\\n时间：${course.time}\\n时长：${course.duration || '60分钟'}`,\r\n        success: (res) => {\r\n          if (res.confirm) {\r\n            // 将预约添加到已预约列表\r\n            this.reservedCourses.push({\r\n              ...course,\r\n              reservedTime: course.time,\r\n              duration: course.duration || '60分钟'\r\n            });\r\n            \r\n            // 从待预约列表中删除\r\n            this.pendingCourses.splice(index, 1);\r\n            \r\n            uni.showToast({\r\n              title: '已接受预约',\r\n              icon: 'success',\r\n              duration: 2000\r\n            });\r\n          }\r\n        }\r\n      });\r\n    },\r\n\r\n    // 添加返回方法\r\n    goBack() {\r\n      // 使用Navigator工具而不是简单的navigateBack\r\n      Navigator.toMine();\r\n    },\r\n\r\n    // 老师端 - 修改课程时间\r\n    rescheduleClass(index) {\r\n      this.currentCourseIndex = index;\r\n      \r\n      // 显示日期时间选择器，后续会在onTeacherDatetimeChange方法中处理选择的时间和时长\r\n      this.$refs.teacherDatetimePicker.show();\r\n    },\r\n\r\n    // 老师端 - 确认修改课程时间\r\n    confirmRescheduleClass() {\r\n      const course = this.teacherActiveCourses[this.currentCourseIndex];\r\n      const durationText = this.durationOptions[this.durationIndex];\r\n      \r\n      // 显示确认弹窗\r\n      uni.showModal({\r\n        title: '确认修改时间',\r\n        content: `课程：${course.name}\\n学生：${course.studentName}\\n新时间：${this.selectedDate}\\n时长：${durationText}`,\r\n        success: (res) => {\r\n          if (res.confirm) {\r\n            // 更新课程时间和时长\r\n            this.teacherActiveCourses[this.currentCourseIndex].classTime = this.selectedDate;\r\n            this.teacherActiveCourses[this.currentCourseIndex].duration = durationText;\r\n            \r\n            uni.showToast({\r\n              title: '时间已修改',\r\n              icon: 'success',\r\n              duration: 2000\r\n            });\r\n            \r\n            // 重置状态\r\n            this.currentCourseIndex = null;\r\n            this.selectedDate = null;\r\n          }\r\n        }\r\n      });\r\n    },\r\n\r\n    // 关闭日期选择器\r\n    closeDatePicker() {\r\n      this.datePickerVisible = false;\r\n    },\r\n    \r\n    // 关闭老师端日期选择器\r\n    closeTeacherDatePicker() {\r\n      this.teacherDatePickerVisible = false;\r\n    },\r\n\r\n    // 添加缺失的确认直接选择方法\r\n    confirmDirectSelection() {\r\n      if (!this.canConfirmSelection) return;\r\n      \r\n      const selectedDate = this.availableDates[this.selectedDateIndex];\r\n      const selectedTime = this.filteredTimeSlots[this.selectedTimeIndex];\r\n      \r\n      // 创建完整的日期时间字符串\r\n      const year = selectedDate.getFullYear();\r\n      const month = (selectedDate.getMonth() + 1).toString().padStart(2, '0');\r\n      const day = selectedDate.getDate().toString().padStart(2, '0');\r\n      \r\n      this.selectedDate = `${year}-${month}-${day} ${selectedTime.split('-')[0]}`;\r\n      \r\n      // 关闭时间段选择\r\n      this.showAvailableSlots = false;\r\n      \r\n      // 显示确认弹窗\r\n      this.$nextTick(() => {\r\n        this.confirmReservation();\r\n      });\r\n    },\r\n\r\n    // 添加缺失的日期时间选择器变化事件\r\n    onDatetimeChange(e) {\r\n      this.datePickerVisible = false; // 选择后自动关闭\r\n      // 将时间戳转换为可读格式的日期时间\r\n      this.selectedTimestamp = e;\r\n      const date = new Date(e);\r\n      this.selectedDate = this.formatDateTime(date);\r\n      \r\n      // 学生端直接确认预约，不再显示时长选择\r\n      if (this.currentOperation === 'student_reserve' || this.currentOperation === 'student_modify') {\r\n        // 设置默认时长（60分钟）\r\n        this.durationIndex = 2; // 对应60分钟\r\n        this.durationMinutes = 60;\r\n        \r\n        // 直接执行确认操作\r\n        if (this.currentOperation === 'student_reserve') {\r\n          this.confirmReservation();\r\n        } else if (this.currentOperation === 'student_modify') {\r\n          this.confirmModifyReservation();\r\n        }\r\n      } else {\r\n        // 老师端继续显示时长选择弹窗\r\n        this.showDurationPicker = true;\r\n      }\r\n    },\r\n\r\n    // 添加缺失的今日和下月方法\r\n    getToday() {\r\n      const today = new Date();\r\n      const year = today.getFullYear();\r\n      const month = String(today.getMonth() + 1).padStart(2, '0');\r\n      const day = String(today.getDate()).padStart(2, '0');\r\n      const hours = String(today.getHours()).padStart(2, '0');\r\n      const minutes = String(today.getMinutes()).padStart(2, '0');\r\n      \r\n      // 返回当前日期时间，格式为YYYY-MM-DD HH:MM\r\n      return `${year}-${month}-${day} ${hours}:${minutes}`;\r\n    },\r\n\r\n    // 获取一个月后的日期（日历结束日期）\r\n    getNextMonth() {\r\n      const today = new Date();\r\n      const nextMonth = new Date(today);\r\n      nextMonth.setMonth(today.getMonth() + 1);\r\n      return `${nextMonth.getFullYear()}-${String(nextMonth.getMonth() + 1).padStart(2, '0')}-${String(nextMonth.getDate()).padStart(2, '0')}`;\r\n    },\r\n\r\n    // 老师端 - 时长选择变化事件\r\n    onTeacherDurationChange(e) {\r\n      this.teacherDurationIndex = e.detail.value;\r\n      // 根据选择的索引确定时长分钟数\r\n      const durationValues = [30, 45, 60, 90, 120];\r\n      this.teacherDurationMinutes = durationValues[this.teacherDurationIndex];\r\n    },\r\n\r\n    // 学生端 - 确认修改预约时间\r\n    confirmModifyReservation() {\r\n      const course = this.reservedCourses[this.currentCourseIndex];\r\n      const durationText = this.durationOptions[this.durationIndex];\r\n      \r\n      // 显示确认弹窗\r\n      uni.showModal({\r\n        title: '确认修改预约时间',\r\n        content: `课程：${course.name}\\n新时间：${this.selectedDate}\\n时长：${durationText}`,\r\n        success: (res) => {\r\n          if (res.confirm) {\r\n            // 更新课程预约时间和时长\r\n            this.reservedCourses[this.currentCourseIndex].reservedTime = this.selectedDate;\r\n            this.reservedCourses[this.currentCourseIndex].duration = durationText;\r\n            \r\n            uni.showToast({\r\n              title: '时间已修改',\r\n              icon: 'success',\r\n              duration: 2000\r\n            });\r\n            \r\n            // 重置状态\r\n            this.currentCourseIndex = null;\r\n            this.selectedDate = null;\r\n          }\r\n        }\r\n      });\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.header-container {\r\n  width: 100%;\r\n  height: 200rpx;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  background: linear-gradient(135deg, #f5f9ff, #edf3ff);\r\n}\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  background: linear-gradient(135deg, #f5f9ff, #edf3ff);\r\n  font-family: \"PingFang SC\", \"Helvetica Neue\", Arial, sans-serif;\r\n}\r\n\r\n.page-content {\r\n  padding: 10rpx 30rpx;\r\n}\r\n\r\n.course-list {\r\n  height: calc(100vh - 130rpx);\r\n  margin-top: 5rpx;\r\n}\r\n\r\n/* 已选择日期信息样式 */\r\n.selected-date-info {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  background-color: #ffffff;\r\n  margin: 10rpx 0;\r\n  padding: 20rpx;\r\n  border-radius: 16rpx;\r\n  box-shadow: 0 4rpx 20rpx rgba(0, 0, 0, 0.08);\r\n  border-left: 8rpx solid #3a86ff;\r\n}\r\n\r\n.date-info-title {\r\n  font-size: 28rpx;\r\n  color: #666;\r\n  font-weight: 500;\r\n}\r\n\r\n.date-info-content {\r\n  font-size: 30rpx;\r\n  color: #333;\r\n  font-weight: bold;\r\n  margin: 0 15rpx;\r\n}\r\n\r\n.reset-btn {\r\n  margin-left: auto;\r\n  font-size: 26rpx;\r\n  background-color: #f0f5ff;\r\n  color: #3a86ff;\r\n  border-radius: 30rpx;\r\n  padding: 10rpx 24rpx;\r\n  line-height: 1.2;\r\n  border: 1px solid #d0e1ff;\r\n}\r\n\r\n/* 课程项目样式 */\r\n.course-item {\r\n  display: flex;\r\n  flex-direction: row;\r\n  border-radius: 16px;\r\n  margin-bottom: 15px;\r\n  position: relative;\r\n  min-height: 160rpx;\r\n  padding: 0;\r\n}\r\n\r\n.course-item::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  border-radius: 40rpx;\r\n  padding: 2rpx;\r\n  background: linear-gradient(180deg, rgba(228, 241, 255, 1) 0%, rgba(34, 136, 249, 1) 100%);\r\n  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);\r\n  -webkit-mask-composite: xor;\r\n  mask-composite: exclude;\r\n  pointer-events: none;\r\n}\r\n\r\n.course-item::after {\r\n  content: '';\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 40rpx;\r\n  pointer-events: none;\r\n  background: linear-gradient(180deg, rgba(194, 221, 250, 0.2) 11.54%, rgba(34, 136, 249, 0.2) 111.54%);\r\n  z-index: 1;\r\n}\r\n\r\n/* 课程信息容器，完全按照service-info样式 */\r\n.course-item {\r\n  padding: 25rpx 30rpx;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.avatar-container {\r\n  margin-right: 30rpx;\r\n  position: relative;\r\n  z-index: 2;\r\n  flex-shrink: 0;\r\n  padding: 0;\r\n  margin-left: 0;\r\n  border: none;\r\n}\r\n\r\n.avatar-image {\r\n  width: 160rpx;\r\n  height: 160rpx;\r\n  border-radius: 15rpx;\r\n  background-color: #f0f0f0;\r\n  overflow: hidden;\r\n  flex-shrink: 0;\r\n  box-shadow: 0 6rpx 15rpx rgba(0, 0, 0, 0.1);\r\n  border: none;\r\n}\r\n\r\n.avatar-circle {\r\n  width: 160rpx;\r\n  height: 160rpx;\r\n  border-radius: 15rpx;\r\n  background-color: #f0f0f0;\r\n  overflow: hidden;\r\n  flex-shrink: 0;\r\n  box-shadow: 0 6rpx 15rpx rgba(0, 0, 0, 0.1);\r\n  border: none;\r\n}\r\n\r\n.course-info {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding: 0;\r\n  padding-left: 15rpx;\r\n  margin-top: 5rpx;\r\n  position: relative;\r\n  z-index: 2;\r\n}\r\n\r\n.course-name {\r\n  font-family: 'PingFang SC', sans-serif;\r\n  font-weight: 600;\r\n  font-size: 27rpx;\r\n  margin-bottom: 10rpx;\r\n  color: #333;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  letter-spacing: -0.55px;\r\n  text-align: left;\r\n}\r\n\r\n.course-teacher, .course-type, .course-lessons, .course-time, .course-duration {\r\n  font-size: 20rpx;\r\n  color: #000000;\r\n  font-weight: 500;\r\n  font-family: 'PingFang SC', sans-serif;\r\n  margin-bottom: 4rpx;\r\n  line-height: 1.2;\r\n  text-align: left;\r\n  padding: 2rpx 0;\r\n}\r\n\r\n.course-duration {\r\n  color: #3a86ff;\r\n  font-weight: 600;\r\n}\r\n\r\n.price-container, .price-label, .course-price {\r\n  /* 删除这些样式 */\r\n  display: none;\r\n}\r\n\r\n.reserve-btn, .view-feedback-btn, .accept-btn, .confirm-class-btn, .modify-time-btn {\r\n  position: absolute;\r\n  right: 30rpx;\r\n  bottom: 20rpx;\r\n  border-radius: 10rpx;\r\n  padding: 0 20rpx;\r\n  height: 50rpx;\r\n  line-height: 50rpx;\r\n  font-size: 22rpx;\r\n  font-weight: 500;\r\n  background: linear-gradient(to right, #7F86F5, #464EF8);\r\n  color: white;\r\n  z-index: 2;\r\n}\r\n\r\n.reserve-btn:active, .view-feedback-btn:active, .accept-btn:active, .confirm-class-btn:active, .modify-time-btn:active {\r\n  transform: scale(0.95);\r\n  box-shadow: 0 3rpx 10rpx rgba(122, 95, 190, 0.3);\r\n}\r\n\r\n.course-time {\r\n  font-size: 26rpx;\r\n  color: #ff7043;\r\n  font-weight: 500;\r\n  margin-top: 4rpx;\r\n  margin-bottom: 4rpx;\r\n  line-height: 1.2;\r\n  text-align: left;\r\n  padding: 2rpx 0;\r\n}\r\n\r\n.empty-tip {\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 60rpx 0;\r\n  color: #8c9db5;\r\n  font-size: 30rpx;\r\n  font-weight: 500;\r\n}\r\n\r\n.tab-container {\r\n  flex-direction: row;\r\n  height: 60rpx; /* 进一步降低高度 */\r\n  background-color: #ffffff;\r\n  border-bottom-width: 1rpx;\r\n  border-bottom-color: #eeeeee;\r\n}\r\n\r\n/* 添加时长选择器样式 */\r\n.duration-selector {\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: #ffffff;\r\n  margin: 15rpx 0;\r\n  padding: 20rpx;\r\n  border-radius: 16rpx;\r\n  box-shadow: 0 4rpx 20rpx rgba(0, 0, 0, 0.08);\r\n  border-left: 8rpx solid #3a86ff;\r\n}\r\n\r\n.duration-label {\r\n  font-size: 28rpx;\r\n  color: #666;\r\n  font-weight: 500;\r\n}\r\n\r\n.duration-value {\r\n  font-size: 28rpx;\r\n  color: #333;\r\n  font-weight: bold;\r\n  padding: 8rpx 30rpx;\r\n  border-radius: 30rpx;\r\n  background-color: #f0f5ff;\r\n  border: 1px solid #d0e1ff;\r\n}\r\n\r\n/* 可预约时间段样式 */\r\n.available-time-slots {\r\n  background-color: #ffffff;\r\n  border-radius: 16rpx;\r\n  padding: 20rpx;\r\n  margin: 20rpx 0;\r\n  box-shadow: 0 4rpx 20rpx rgba(0, 0, 0, 0.08);\r\n}\r\n\r\n.slots-title {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding-bottom: 20rpx;\r\n  border-bottom: 1px solid #f0f0f0;\r\n}\r\n\r\n.slots-title text {\r\n  font-size: 30rpx;\r\n  font-weight: 600;\r\n  color: #333;\r\n}\r\n\r\n.close-slots {\r\n  font-size: 40rpx;\r\n  color: #999;\r\n  padding: 0 10rpx;\r\n}\r\n\r\n.date-selector {\r\n  display: flex;\r\n  flex-direction: row;\r\n  overflow-x: scroll;\r\n  padding: 20rpx 0;\r\n}\r\n\r\n.date-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-width: 100rpx;\r\n  height: 120rpx;\r\n  margin-right: 20rpx;\r\n  padding: 0 10rpx;\r\n  border-radius: 12rpx;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.date-selected {\r\n  background-color: #e6f1ff;\r\n  border: 1px solid #3a86ff;\r\n}\r\n\r\n.date-day {\r\n  font-size: 26rpx;\r\n  color: #666;\r\n  margin-bottom: 8rpx;\r\n}\r\n\r\n.date-date {\r\n  font-size: 24rpx;\r\n  color: #333;\r\n}\r\n\r\n.time-slots-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 20rpx 0;\r\n}\r\n\r\n.time-slot-item {\r\n  width: 30%;\r\n  margin: 10rpx 1.66%;\r\n  height: 70rpx;\r\n  line-height: 70rpx;\r\n  text-align: center;\r\n  border-radius: 8rpx;\r\n  background-color: #f9f9f9;\r\n  font-size: 26rpx;\r\n  color: #333;\r\n}\r\n\r\n.time-slot-selected {\r\n  background-color: #3a86ff;\r\n  color: white;\r\n}\r\n\r\n.duration-row {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 20rpx 0;\r\n  border-top: 1px solid #f0f0f0;\r\n}\r\n\r\n.confirm-selection-btn {\r\n  width: 100%;\r\n  height: 80rpx;\r\n  line-height: 80rpx;\r\n  text-align: center;\r\n  color: white;\r\n  font-size: 28rpx;\r\n  border-radius: 40rpx;\r\n  background: linear-gradient(to right, #7F86F5, #464EF8);\r\n  margin-top: 20rpx;\r\n}\r\n\r\n.confirm-selection-btn:active {\r\n  transform: scale(0.95);\r\n  opacity: 0.9;\r\n}\r\n\r\n.confirm-selection-btn[disabled] {\r\n  opacity: 0.6;\r\n  background: #cccccc;\r\n}\r\n\r\n/* 课程时长选择弹窗样式 */\r\n.duration-picker-mask {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  z-index: 1000;\r\n}\r\n\r\n.duration-picker-container {\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  background: white;\r\n  border-radius: 20rpx 20rpx 0 0;\r\n  padding: 30rpx;\r\n  z-index: 1001;\r\n  box-shadow: 0 -4rpx 16rpx rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.duration-picker-header {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-bottom: 20rpx;\r\n  border-bottom: 1px solid #f0f0f0;\r\n}\r\n\r\n.duration-picker-header text {\r\n  font-size: 32rpx;\r\n  font-weight: 600;\r\n  color: #333;\r\n}\r\n\r\n.duration-picker {\r\n  width: 100%;\r\n  height: 400rpx;\r\n  margin: 30rpx 0;\r\n}\r\n\r\n.duration-picker-item {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 80rpx;\r\n  font-size: 32rpx;\r\n  color: #333;\r\n}\r\n\r\n.duration-picker-footer {\r\n  display: flex !important;\r\n  flex-direction: row !important;\r\n  justify-content: space-between !important;\r\n  padding: 20rpx 30rpx 40rpx 30rpx;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.duration-picker-btn {\r\n  width: 48% !important;\r\n  height: 90rpx;\r\n  display: flex !important;\r\n  align-items: center !important;\r\n  justify-content: center !important;\r\n  font-size: 32rpx;\r\n  font-weight: 500;\r\n  border-radius: 45rpx;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.duration-picker-cancel {\r\n  background: #f5f5f5;\r\n  color: #666;\r\n}\r\n\r\n.duration-picker-confirm {\r\n  background: linear-gradient(to right, #7F86F5, #464EF8);\r\n  color: white;\r\n}\r\n</style>    ","import MiniProgramPage from 'E:/研师录与其他人共享文件/teacherDirectory/vue实现Lottie动画代码/pagesMine/course/course.vue'\nwx.createPage(MiniProgramPage)"],"names":["Header","topNavbar","uniDatetimePicker","_sfc_main","defineComponent","slot","now","currentHour","currentMinute","slotStartTime","_a","__read","slotHour","slotMinute","options","uni","globalData","storedUserRole","previousRole","token","userInfo","e","index","dates","today","i","date","timeSlotItems","durationValues","periodOptions","item","res","selectedPeriod","timeRes","course","durationText","replayUrl","confirmRes","year","month","day","hours","minutes","futureDate","url","completedCourse","reservation","Navigator","selectedDate","selectedTime","nextMonth","MiniProgramPage"],"mappings":"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"}