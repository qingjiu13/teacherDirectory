{"version":3,"file":"vuex-debug.js","sources":["utils/vuex-debug.js"],"sourcesContent":["/**\r\n * Vuex调试工具\r\n * 帮助诊断Vuex注入和状态问题\r\n * 仅支持Vue 3\r\n */\r\n\r\n/**\r\n * 安装调试插件\r\n * @param {Object} store - Vuex store实例\r\n */\r\nexport const installDebugPlugin = (store) => {\r\n  // 添加订阅插件\r\n  store.subscribeAction({\r\n    before: (action, state) => {\r\n      console.log(`即将执行action: ${action.type}，参数:`, action.payload);\r\n    },\r\n    after: (action, state) => {\r\n      console.log(`action: ${action.type} 执行完成`);\r\n    }\r\n  });\r\n  \r\n  // 添加调试方法到全局对象\r\n  if (typeof window !== 'undefined') {\r\n    window.debugVuex = {\r\n      // 检查store是否可用\r\n      checkStore: () => {\r\n        const result = {\r\n          storeExists: !!store,\r\n          modules: store ? Object.keys(store._modules?.root?.children || {}) : [],\r\n          modulesNamespaceMap: store ? Object.keys(store._modulesNamespaceMap || {}) : [],\r\n          state: store ? JSON.parse(JSON.stringify(store.state)) : null\r\n        };\r\n        console.log('Vuex Store 状态:', result);\r\n        return result;\r\n      },\r\n      \r\n      // 检查特定模块是否存在\r\n      checkModule: (modulePath) => {\r\n        const exists = !!store?._modulesNamespaceMap[`${modulePath}/`];\r\n        console.log(`模块 ${modulePath} ${exists ? '存在' : '不存在'}`);\r\n        return exists;\r\n      },\r\n      \r\n      // 检查特定state是否存在\r\n      getState: (path) => {\r\n        try {\r\n          const parts = path.split('.');\r\n          let current = store.state;\r\n          for (const part of parts) {\r\n            current = current[part];\r\n            if (current === undefined) {\r\n              console.warn(`路径 ${path} 在 ${part} 处中断`);\r\n              return undefined;\r\n            }\r\n          }\r\n          console.log(`状态 ${path}:`, current);\r\n          return current;\r\n        } catch (error) {\r\n          console.error(`获取状态 ${path} 时出错:`, error);\r\n          return undefined;\r\n        }\r\n      }\r\n    };\r\n    \r\n    console.log('Vuex调试工具已安装，可以使用 debugVuex 对象进行调试');\r\n  }\r\n};\r\n\r\n/**\r\n * 为Vue 3应用安装Vuex调试工具\r\n * @param {Object} app - Vue 3应用实例\r\n * @param {Object} store - Vuex store实例\r\n */\r\nexport const installDebugForVue3 = (app, store) => {\r\n  if (!app || !store) {\r\n    console.error('应用或store不可用，无法安装调试工具');\r\n    return;\r\n  }\r\n  \r\n  // 使用provide提供store（增强依赖注入）\r\n  app.provide('store', store);\r\n  \r\n  // 添加调试钩子\r\n  app.mixin({\r\n    created() {\r\n      // 在根组件中检查store可用性\r\n      if (!this.$parent) {\r\n        console.log('根组件创建，Vue 3环境');\r\n        \r\n        // 获取store (Vue 3中通过全局属性获取)\r\n        const storeRef = this.$store || app.config.globalProperties.$store;\r\n        \r\n        if (!storeRef) {\r\n          console.error('$store在根组件中未定义 (Vue 3)');\r\n        } else {\r\n          console.log('$store在根组件中可用 (Vue 3)');\r\n          \r\n          // 检查基本模块\r\n          try {\r\n            console.log('检查Vuex模块...');\r\n            const userModuleExists = store._modulesNamespaceMap['user/'];\r\n            console.log('user模块存在:', !!userModuleExists);\r\n            \r\n            const baseInfoModuleExists = store._modulesNamespaceMap['user/baseInfo/'];\r\n            console.log('user/baseInfo模块存在:', !!baseInfoModuleExists);\r\n          } catch (error) {\r\n            console.error('检查模块时出错:', error);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  });\r\n  \r\n  console.log('Vue 3调试混入已安装');\r\n}; "],"names":["uni"],"mappings":";;AAUY,MAAC,qBAAqB,CAAC,UAAU;AAE3C,QAAM,gBAAgB;AAAA,IACpB,QAAQ,CAAC,QAAQ,UAAU;AACzBA,oBAAAA,MAAY,MAAA,OAAA,6BAAA,eAAe,OAAO,IAAI,QAAQ,OAAO,OAAO;AAAA,IAC7D;AAAA,IACD,OAAO,CAAC,QAAQ,UAAU;AACxBA,oEAAY,WAAW,OAAO,IAAI,OAAO;AAAA,IAC1C;AAAA,EACL,CAAG;AAGD,MAAI,OAAO,WAAW,aAAa;AACjC,WAAO,YAAY;AAAA;AAAA,MAEjB,YAAY,MAAM;;AAChB,cAAM,SAAS;AAAA,UACb,aAAa,CAAC,CAAC;AAAA,UACf,SAAS,QAAQ,OAAO,OAAK,iBAAM,aAAN,mBAAgB,SAAhB,mBAAsB,aAAY,CAAE,CAAA,IAAI,CAAE;AAAA,UACvE,qBAAqB,QAAQ,OAAO,KAAK,MAAM,wBAAwB,CAAE,CAAA,IAAI,CAAE;AAAA,UAC/E,OAAO,QAAQ,KAAK,MAAM,KAAK,UAAU,MAAM,KAAK,CAAC,IAAI;AAAA,QACnE;AACQA,sBAAY,MAAA,MAAA,OAAA,6BAAA,kBAAkB,MAAM;AACpC,eAAO;AAAA,MACR;AAAA;AAAA,MAGD,aAAa,CAAC,eAAe;AAC3B,cAAM,SAAS,CAAC,EAAC,+BAAO,qBAAqB,GAAG,UAAU;AAC1DA,sBAAAA,MAAA,MAAA,OAAA,6BAAY,MAAM,UAAU,IAAI,SAAS,OAAO,KAAK,EAAE;AACvD,eAAO;AAAA,MACR;AAAA;AAAA,MAGD,UAAU,CAAC,SAAS;AAClB,YAAI;AACF,gBAAM,QAAQ,KAAK,MAAM,GAAG;AAC5B,cAAI,UAAU,MAAM;AACpB,qBAAW,QAAQ,OAAO;AACxB,sBAAU,QAAQ,IAAI;AACtB,gBAAI,YAAY,QAAW;AACzBA,4BAAAA,MAAa,MAAA,QAAA,6BAAA,MAAM,IAAI,MAAM,IAAI,MAAM;AACvC,qBAAO;AAAA,YACR;AAAA,UACF;AACDA,wEAAY,MAAM,IAAI,KAAK,OAAO;AAClC,iBAAO;AAAA,QACR,SAAQ,OAAO;AACdA,8BAAA,MAAA,SAAA,6BAAc,QAAQ,IAAI,SAAS,KAAK;AACxC,iBAAO;AAAA,QACR;AAAA,MACF;AAAA,IACP;AAEIA,kBAAAA,gDAAY,mCAAmC;AAAA,EAChD;AACH;AAOY,MAAC,sBAAsB,CAAC,KAAK,UAAU;AACjD,MAAI,CAAC,OAAO,CAAC,OAAO;AAClBA,kBAAAA,MAAA,MAAA,SAAA,6BAAc,sBAAsB;AACpC;AAAA,EACD;AAGD,MAAI,QAAQ,SAAS,KAAK;AAG1B,MAAI,MAAM;AAAA,IACR,UAAU;AAER,UAAI,CAAC,KAAK,SAAS;AACjBA,sBAAAA,MAAA,MAAA,OAAA,6BAAY,eAAe;AAG3B,cAAM,WAAW,KAAK,UAAU,IAAI,OAAO,iBAAiB;AAE5D,YAAI,CAAC,UAAU;AACbA,wBAAAA,MAAA,MAAA,SAAA,6BAAc,wBAAwB;AAAA,QAChD,OAAe;AACLA,wBAAAA,gDAAY,uBAAuB;AAGnC,cAAI;AACFA,0BAAAA,MAAY,MAAA,OAAA,8BAAA,aAAa;AACzB,kBAAM,mBAAmB,MAAM,qBAAqB,OAAO;AAC3DA,0BAAY,MAAA,MAAA,OAAA,8BAAA,aAAa,CAAC,CAAC,gBAAgB;AAE3C,kBAAM,uBAAuB,MAAM,qBAAqB,gBAAgB;AACxEA,0BAAY,MAAA,MAAA,OAAA,8BAAA,sBAAsB,CAAC,CAAC,oBAAoB;AAAA,UACzD,SAAQ,OAAO;AACdA,0BAAA,MAAA,MAAA,SAAA,8BAAc,YAAY,KAAK;AAAA,UAChC;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACL,CAAG;AAEDA,gBAAAA,MAAY,MAAA,OAAA,8BAAA,cAAc;AAC5B;;;"}