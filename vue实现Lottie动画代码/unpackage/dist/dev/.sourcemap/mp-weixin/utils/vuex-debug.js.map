{"version":3,"file":"vuex-debug.js","sources":["utils/vuex-debug.js"],"sourcesContent":["/**\r\n * Vuex调试工具\r\n * 帮助诊断Vuex注入和状态问题\r\n * 仅支持Vue 3\r\n */\r\n\r\n/**\r\n * 安装调试插件\r\n * @param {Object} store - Vuex store实例\r\n */\r\nexport const installDebugPlugin = (store) => {\r\n  // 添加订阅插件\r\n  store.subscribeAction({\r\n    before: (action, state) => {\r\n      console.log(`即将执行action: ${action.type}，参数:`, action.payload);\r\n    },\r\n    after: (action, state) => {\r\n      console.log(`action: ${action.type} 执行完成`);\r\n    }\r\n  });\r\n  \r\n  // 添加调试方法到全局对象\r\n  if (typeof window !== 'undefined') {\r\n    window.debugVuex = {\r\n      // 检查store是否可用\r\n      checkStore: () => {\r\n        const result = {\r\n          storeExists: !!store,\r\n          modules: store ? Object.keys(store._modules?.root?.children || {}) : [],\r\n          modulesNamespaceMap: store ? Object.keys(store._modulesNamespaceMap || {}) : [],\r\n          state: store ? JSON.parse(JSON.stringify(store.state)) : null\r\n        };\r\n        console.log('Vuex Store 状态:', result);\r\n        return result;\r\n      },\r\n      \r\n      // 检查特定模块是否存在\r\n      checkModule: (modulePath) => {\r\n        const exists = !!store?._modulesNamespaceMap[`${modulePath}/`];\r\n        console.log(`模块 ${modulePath} ${exists ? '存在' : '不存在'}`);\r\n        return exists;\r\n      },\r\n      \r\n      // 检查特定state是否存在\r\n      getState: (path) => {\r\n        try {\r\n          const parts = path.split('.');\r\n          let current = store.state;\r\n          for (const part of parts) {\r\n            current = current[part];\r\n            if (current === undefined) {\r\n              console.warn(`路径 ${path} 在 ${part} 处中断`);\r\n              return undefined;\r\n            }\r\n          }\r\n          console.log(`状态 ${path}:`, current);\r\n          return current;\r\n        } catch (error) {\r\n          console.error(`获取状态 ${path} 时出错:`, error);\r\n          return undefined;\r\n        }\r\n      }\r\n    };\r\n    \r\n    console.log('Vuex调试工具已安装，可以使用 debugVuex 对象进行调试');\r\n  }\r\n};\r\n\r\n/**\r\n * 为Vue 3应用安装Vuex调试工具\r\n * @param {Object} app - Vue 3应用实例\r\n * @param {Object} store - Vuex store实例\r\n */\r\nexport const installDebugForVue3 = (app, store) => {\r\n  if (!app || !store) {\r\n    console.error('应用或store不可用，无法安装调试工具');\r\n    return;\r\n  }\r\n  \r\n  // 使用provide提供store（增强依赖注入）\r\n  app.provide('store', store);\r\n  \r\n  // 添加调试钩子\r\n  app.mixin({\r\n    created() {\r\n      // 在根组件中检查store可用性\r\n      if (!this.$parent) {\r\n        console.log('根组件创建，Vue 3环境');\r\n        \r\n        // 获取store (Vue 3中通过全局属性获取)\r\n        const storeRef = this.$store || app.config.globalProperties.$store;\r\n        \r\n        if (!storeRef) {\r\n          console.error('$store在根组件中未定义 (Vue 3)');\r\n        } else {\r\n          console.log('$store在根组件中可用 (Vue 3)');\r\n          \r\n          // 检查基本模块\r\n          try {\r\n            console.log('检查Vuex模块...');\r\n            const userModuleExists = store._modulesNamespaceMap['user/'];\r\n            console.log('user模块存在:', !!userModuleExists);\r\n            \r\n            const baseInfoModuleExists = store._modulesNamespaceMap['user/baseInfo/'];\r\n            console.log('user/baseInfo模块存在:', !!baseInfoModuleExists);\r\n          } catch (error) {\r\n            console.error('检查模块时出错:', error);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  });\r\n  \r\n  console.log('Vue 3调试混入已安装');\r\n}; "],"names":["installDebugPlugin","store","action","state","uni","result","_b","_a","modulePath","exists","path","parts","current","part","error","installDebugForVue3","app","userModuleExists","baseInfoModuleExists"],"mappings":"oDAUaA,EAAsBC,GAAU,CAE3CA,EAAM,gBAAgB,CACpB,OAAQ,CAACC,EAAQC,IAAU,CACzBC,EAAAA,MAAY,MAAA,MAAA,4BAAA,eAAeF,EAAO,IAAI,OAAQA,EAAO,OAAO,CAC7D,EACD,MAAO,CAACA,EAAQC,IAAU,CACxBC,gDAAY,WAAWF,EAAO,IAAI,OAAO,CAC1C,CACL,CAAG,EAGG,OAAO,OAAW,MACpB,OAAO,UAAY,CAEjB,WAAY,IAAM,SAChB,MAAMG,EAAS,CACb,YAAa,CAAC,CAACJ,EACf,QAASA,EAAQ,OAAO,OAAKK,GAAAC,EAAAN,EAAM,WAAN,YAAAM,EAAgB,OAAhB,YAAAD,EAAsB,WAAY,CAAE,CAAA,EAAI,CAAE,EACvE,oBAAqBL,EAAQ,OAAO,KAAKA,EAAM,sBAAwB,CAAE,CAAA,EAAI,CAAE,EAC/E,MAAOA,EAAQ,KAAK,MAAM,KAAK,UAAUA,EAAM,KAAK,CAAC,EAAI,IACnE,EACQG,OAAAA,EAAY,MAAA,MAAA,MAAA,4BAAA,iBAAkBC,CAAM,EAC7BA,CACR,EAGD,YAAcG,GAAe,CAC3B,MAAMC,EAAS,CAAC,EAACR,GAAA,MAAAA,EAAO,qBAAqB,GAAGO,CAAU,MAC1DJ,OAAAA,EAAAA,MAAA,MAAA,MAAA,4BAAY,MAAMI,CAAU,IAAIC,EAAS,KAAO,KAAK,EAAE,EAChDA,CACR,EAGD,SAAWC,GAAS,CAClB,GAAI,CACF,MAAMC,EAAQD,EAAK,MAAM,GAAG,EAC5B,IAAIE,EAAUX,EAAM,MACpB,UAAWY,KAAQF,EAEjB,GADAC,EAAUA,EAAQC,CAAI,EAClBD,IAAY,OAAW,CACzBR,EAAAA,MAAa,MAAA,OAAA,4BAAA,MAAMM,CAAI,MAAMG,CAAI,MAAM,EACvC,MACD,CAEHT,OAAAA,gDAAY,MAAMM,CAAI,IAAKE,CAAO,EAC3BA,CACR,OAAQE,EAAO,CACdV,QAAA,MAAA,QAAA,4BAAc,QAAQM,CAAI,QAASI,CAAK,EACxC,MACD,CACF,CACP,EAEIV,EAAAA,8CAAY,mCAAmC,EAEnD,EAOaW,EAAsB,CAACC,EAAKf,IAAU,CACjD,GAAI,CAACe,GAAO,CAACf,EAAO,CAClBG,EAAAA,MAAA,MAAA,QAAA,4BAAc,sBAAsB,EACpC,MACD,CAGDY,EAAI,QAAQ,QAASf,CAAK,EAG1Be,EAAI,MAAM,CACR,SAAU,CAER,GAAI,CAAC,KAAK,QAMR,GALAZ,EAAAA,MAAA,MAAA,MAAA,4BAAY,eAAe,EAKvB,EAFa,KAAK,QAAUY,EAAI,OAAO,iBAAiB,QAG1DZ,EAAAA,MAAA,MAAA,QAAA,4BAAc,wBAAwB,MACjC,CACLA,EAAAA,8CAAY,uBAAuB,EAGnC,GAAI,CACFA,EAAAA,MAAY,MAAA,MAAA,6BAAA,aAAa,EACzB,MAAMa,EAAmBhB,EAAM,qBAAqB,OAAO,EAC3DG,EAAY,MAAA,MAAA,MAAA,6BAAA,YAAa,CAAC,CAACa,CAAgB,EAE3C,MAAMC,EAAuBjB,EAAM,qBAAqB,gBAAgB,EACxEG,EAAY,MAAA,MAAA,MAAA,6BAAA,qBAAsB,CAAC,CAACc,CAAoB,CACzD,OAAQJ,EAAO,CACdV,EAAA,MAAA,MAAA,QAAA,6BAAc,WAAYU,CAAK,CAChC,CACF,CAEJ,CACL,CAAG,EAEDV,EAAAA,MAAY,MAAA,MAAA,6BAAA,cAAc,CAC5B"}