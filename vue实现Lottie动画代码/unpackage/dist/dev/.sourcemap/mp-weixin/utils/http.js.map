{"version":3,"file":"http.js","sources":["utils/http.js"],"sourcesContent":["// @/utils/http.js\r\nimport { UPLOAD_FILE_URL } from '@/store/user/API.js';\r\n\r\nexport const http = (options) => {\r\n    return new Promise((resolve, reject) => {\r\n        uni.request({\r\n            url: baseURL + options.url,\r\n            method: options.method || 'GET',\r\n            data: options.data || {},\r\n            header: options.header || {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            success: (res) => {\r\n                if (res.statusCode === 200) {\r\n                    resolve(res.data);\r\n                } else {\r\n                    reject(res.data);\r\n                }\r\n            },\r\n            fail: (err) => {\r\n                reject(err);\r\n            }\r\n        });\r\n    });\r\n};\r\n\r\nexport const uploadFile = (filePath, userId, fileType = 'file') => {\r\n    return new Promise((resolve, reject) => {\r\n        uni.uploadFile({\r\n            url: UPLOAD_FILE_URL,\r\n            filePath,\r\n            name: fileType,\r\n            formData: {\r\n                userId: userId\r\n            },\r\n            success: (res) => {\r\n                const data = JSON.parse(res.data);\r\n                if (data.code === 200) {\r\n                    resolve(data);\r\n                } else {\r\n                    reject(data);\r\n                }\r\n            },\r\n            fail: (err) => {\r\n                reject(err);\r\n            }\r\n        });\r\n    });\r\n};\r\n"],"names":["uni","UPLOAD_FILE_URL"],"mappings":";;;AA0BY,MAAC,aAAa,CAAC,UAAU,QAAQ,WAAW,WAAW;AAC/D,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpCA,kBAAAA,MAAI,WAAW;AAAA,MACX,KAAKC,eAAe;AAAA,MACpB;AAAA,MACA,MAAM;AAAA,MACN,UAAU;AAAA,QACN;AAAA,MACH;AAAA,MACD,SAAS,CAAC,QAAQ;AACd,cAAM,OAAO,KAAK,MAAM,IAAI,IAAI;AAChC,YAAI,KAAK,SAAS,KAAK;AACnB,kBAAQ,IAAI;AAAA,QAChC,OAAuB;AACH,iBAAO,IAAI;AAAA,QACd;AAAA,MACJ;AAAA,MACD,MAAM,CAAC,QAAQ;AACX,eAAO,GAAG;AAAA,MACb;AAAA,IACb,CAAS;AAAA,EACT,CAAK;AACL;;"}