"use strict";const t=require("../common/vendor.js"),i=require("./websocketManager.js"),n=require("./pageStateManager.js");class s{constructor(){this.isPolling=!1,this.pollingInterval=null,this.pollingCallbacks=new Map,i.websocketManager.addConnectionListener(l=>{this.updatePollingState()}),n.pageStateManager.addPageListener(l=>{this.updatePollingState()})}setCurrentPage(l){t.index.__f__("log","at utils/pollingManager.js:31","[轮询管理] 设置当前页面:",l),n.pageStateManager.setCurrentPage(l)}updatePollingState(){const l=this.shouldStartPolling();l&&!this.isPolling?this.startPolling():!l&&this.isPolling&&this.stopPolling()}shouldStartPolling(){const l=i.websocketManager.getConnectionStatus(),e=n.pageStateManager.getCurrentPage();if(t.index.__f__("log","at utils/pollingManager.js:56","[轮询调试] 判断是否应该轮询:",{websocketConnected:l,currentPage:e,shouldPoll:!1}),e==="chat-box"){const a=!l;return t.index.__f__("log","at utils/pollingManager.js:65","[轮询调试] chat-box页面，WebSocket断开:",!l,"应该轮询:",a),a}if(e==="chat-list"){const a=!l;return t.index.__f__("log","at utils/pollingManager.js:77","[轮询调试] chat-list页面，WebSocket断开:",!l,"应该轮询:",a),a}return t.index.__f__("log","at utils/pollingManager.js:87","[轮询调试] 其他页面，不轮询"),!1}startPolling(){if(this.isPolling){t.index.__f__("log","at utils/pollingManager.js:96","[轮询管理] 轮询已在进行中，跳过");return}const l=n.pageStateManager.getCurrentPage();t.index.__f__("log","at utils/pollingManager.js:101","[轮询管理] 开始轮询，当前页面:",l),this.isPolling=!0,this.pollingInterval=setInterval(()=>{this.executePollingCallbacks()},2e3)}stopPolling(){this.isPolling&&(t.index.__f__("log","at utils/pollingManager.js:117","[轮询管理] 停止轮询"),this.isPolling=!1,this.pollingInterval&&(clearInterval(this.pollingInterval),this.pollingInterval=null))}registerPollingCallback(l,e){this.pollingCallbacks.set(l,e),t.index.__f__("log","at utils/pollingManager.js:133","[轮询管理] 注册轮询回调:",l)}unregisterPollingCallback(l){this.pollingCallbacks.delete(l),t.index.__f__("log","at utils/pollingManager.js:142","[轮询管理] 注销轮询回调:",l)}executePollingCallbacks(){this.pollingCallbacks.size!==0&&(t.index.__f__("log","at utils/pollingManager.js:153","[轮询管理] 执行轮询回调，数量:",this.pollingCallbacks.size),this.pollingCallbacks.forEach((l,e)=>{try{l()}catch(a){t.index.__f__("error","at utils/pollingManager.js:159","[轮询管理] 执行回调失败:",e,a)}}))}getStatus(){return{isPolling:this.isPolling,currentPage:n.pageStateManager.getCurrentPage(),websocketConnected:i.websocketManager.getConnectionStatus(),callbackCount:this.pollingCallbacks.size}}cleanup(){this.stopPolling(),this.pollingCallbacks.clear(),t.index.__f__("log","at utils/pollingManager.js:183","[轮询管理] 清理完成")}triggerPollingCallback(l){const e=this.pollingCallbacks.get(l);if(e)try{e()}catch(a){t.index.__f__("error","at utils/pollingManager.js:196","[轮询管理] 手动触发回调失败:",l,a)}}}const o=new s;exports.pollingManager=o;
//# sourceMappingURL=../../.sourcemap/mp-weixin/utils/pollingManager.js.map
