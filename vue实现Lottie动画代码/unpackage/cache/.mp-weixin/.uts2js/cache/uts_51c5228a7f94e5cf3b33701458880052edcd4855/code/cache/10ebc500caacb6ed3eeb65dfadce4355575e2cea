{"code":"import { defineComponent } from \"vue\";\nimport Header from '@/components/navigationTitleBar/header';\n// 导入顶部导航栏组件\nimport topNavbar from '@/components/top-navbar/top-navbar.vue';\n// 导入导航工具\nimport { Navigator } from '@/router/Router.js';\nexport default defineComponent({\n    components: {\n        Header,\n        topNavbar\n    },\n    data() {\n        return {\n            currentTab: 0,\n            teacherCurrentTab: 0,\n            // 更具体的时间段选择\n            timeSlots: [\n                new UTSJSONObject({ period: '上午', slots: ['08:00-09:00', '09:00-10:00', '10:00-11:00', '11:00-12:00'] }),\n                new UTSJSONObject({ period: '下午', slots: ['13:00-14:00', '14:00-15:00', '15:00-16:00', '16:00-17:00'] }),\n                new UTSJSONObject({ period: '晚上', slots: ['18:00-19:00', '19:00-20:00', '20:00-21:00'] })\n            ],\n            selectedTimeSlot: '',\n            selectedTimePeriod: '',\n            // 待预约课程数据 - 修改为考研相关课程\n            pendingCourses: [\n                new UTSJSONObject({\n                    id: 1,\n                    name: \"考研政治精讲班\",\n                    teacher: \"王老师\",\n                    time: \"2023-12-15 14:00\",\n                    price: 399,\n                    image: \"/static/images/default_avatar.png\",\n                    description: \"系统讲解考研政治马原、毛中特、思修法基、当代世界经济与政治重点内容。\"\n                }),\n                new UTSJSONObject({\n                    id: 2,\n                    name: \"考研数学基础班\",\n                    teacher: \"李老师\",\n                    time: \"2023-12-16 10:00\",\n                    price: 499,\n                    image: \"/static/images/default_avatar.png\",\n                    description: \"覆盖高等数学、线性代数、概率论与数理统计核心知识点，夯实数学基础。\"\n                }),\n                new UTSJSONObject({\n                    id: 3,\n                    name: \"考研英语词汇班\",\n                    teacher: \"张老师\",\n                    time: \"2023-12-17 15:00\",\n                    price: 349,\n                    image: \"/static/images/default_avatar.png\",\n                    description: \"掌握考研英语必备5500词汇，提高阅读理解和写作能力。\"\n                }),\n                new UTSJSONObject({\n                    id: 4,\n                    name: \"计算机专业课辅导\",\n                    teacher: \"陈老师\",\n                    time: \"2023-12-18 19:00\",\n                    price: 549,\n                    image: \"/static/images/default_avatar.png\",\n                    description: \"针对计算机专业考生，讲解数据结构、操作系统、计算机网络等核心科目。\"\n                })\n            ],\n            // 已预约课程数据\n            reservedCourses: [\n                new UTSJSONObject({\n                    id: 5,\n                    name: \"考研专业课强化班\",\n                    teacher: \"赵老师\",\n                    price: 599,\n                    reservedTime: \"2023-12-18 14:00\",\n                    image: \"/static/images/default_avatar.png\",\n                    description: \"针对专业课考试，深入讲解重点难点，提供真题分析和解题技巧。\"\n                }),\n                new UTSJSONObject({\n                    id: 6,\n                    name: \"考研政治冲刺班\",\n                    teacher: \"孙老师\",\n                    price: 449,\n                    reservedTime: \"2023-12-19 10:00\",\n                    image: \"/static/images/default_avatar.png\",\n                    description: \"考前政治热点分析，提供答题模板和背诵要点，助力考研政治高分。\"\n                })\n            ],\n            // 已完成课程数据\n            completedCourses: [\n                new UTSJSONObject({\n                    id: 7,\n                    name: \"考研英语写作班\",\n                    teacher: \"黄老师\",\n                    price: 399,\n                    completedTime: \"2023-12-10 15:00\",\n                    image: \"/static/images/default_avatar.png\",\n                    replayUrl: \"https://meeting.tencent.com/v2/cloud-record/share?id=5fcc0283-6d70-4b56-8710-5ef9318c475b&from=3\"\n                }),\n                new UTSJSONObject({\n                    id: 8,\n                    name: \"考研复试指导课\",\n                    teacher: \"周老师\",\n                    price: 499,\n                    completedTime: \"2023-12-15 09:00\",\n                    image: \"/static/images/default_avatar.png\",\n                    replayUrl: \"https://meeting.tencent.com/v2/cloud-record/share?id=7e9f8d62-34a1-4b12-9f80-5c31d9b52ec8&from=3\"\n                })\n            ],\n            currentCourseIndex: null,\n            selectedDate: null,\n            userRole: 'student',\n            userName: '',\n            userData: new UTSJSONObject({}),\n            isLoggedIn: false,\n            teacherPendingCourses: [],\n            teacherActiveCourses: [],\n            teacherCompletedCourses: []\n        };\n    },\n    onLoad(options) {\n        uni.__f__('log', 'at pagesMine/course/course.vue:302', '课程页面 onLoad', options);\n        // 初始化页面数据\n        this.loadUserData();\n        // 使用全局状态或传递的参数确定角色\n        const globalData = getApp().globalData;\n        const storedUserRole = uni.getStorageSync('userRole');\n        // 优先使用全局状态中的角色\n        if (globalData && globalData.userRole) {\n            this.userRole = globalData.userRole;\n            uni.__f__('log', 'at pagesMine/course/course.vue:314', '使用全局角色状态:', this.userRole);\n        }\n        // 其次使用存储的角色\n        else if (storedUserRole) {\n            this.userRole = storedUserRole;\n            // 同步到全局状态\n            if (globalData) {\n                globalData.userRole = this.userRole;\n            }\n            uni.__f__('log', 'at pagesMine/course/course.vue:323', '使用存储的角色:', this.userRole);\n        }\n        // 加载对应角色的数据\n        this.loadCourseData();\n    },\n    onShow() {\n        uni.__f__('log', 'at pagesMine/course/course.vue:330', '课程页面 onShow, 当前角色:', this.userRole);\n        // 检查全局状态\n        const globalData = getApp().globalData;\n        if (globalData && globalData.userRole && globalData.userRole !== this.userRole) {\n            uni.__f__('log', 'at pagesMine/course/course.vue:335', '全局角色变更:', globalData.userRole);\n            const previousRole = this.userRole;\n            this.userRole = globalData.userRole;\n            // 如果角色发生变化，重置相关状态并更新存储\n            if (previousRole !== this.userRole) {\n                this.resetRoleRelatedState();\n                uni.setStorageSync('userRole', this.userRole);\n                this.loadCourseData();\n            }\n        }\n        // 如果本地存储的角色与当前不一致，则以本地存储为准\n        const storedUserRole = uni.getStorageSync('userRole');\n        if (storedUserRole && storedUserRole !== this.userRole) {\n            uni.__f__('log', 'at pagesMine/course/course.vue:350', '存储角色与当前不一致, 存储:', storedUserRole, '当前:', this.userRole);\n            const previousRole = this.userRole;\n            this.userRole = storedUserRole;\n            // 同步到全局状态\n            if (globalData) {\n                globalData.userRole = this.userRole;\n            }\n            // 如果角色发生变化，重置相关状态\n            if (previousRole !== this.userRole) {\n                this.resetRoleRelatedState();\n                this.loadCourseData();\n            }\n        }\n    },\n    // 页面卸载时保存状态\n    onUnload() {\n        uni.__f__('log', 'at pagesMine/course/course.vue:368', '课程页面 onUnload, 保存当前角色:', this.userRole);\n        // 确保角色信息被持久化\n        uni.setStorageSync('userRole', this.userRole);\n        // 同步到全局状态\n        const globalData = getApp().globalData;\n        if (globalData) {\n            globalData.userRole = this.userRole;\n        }\n    },\n    methods: {\n        /**\n         * @description 加载用户数据\n         */\n        loadUserData() {\n            // 检查登录状态\n            const token = uni.getStorageSync('token');\n            this.isLoggedIn = !!token;\n            if (this.isLoggedIn) {\n                // 获取用户信息\n                const userInfo = uni.getStorageSync('userInfo');\n                if (userInfo) {\n                    try {\n                        this.userData = typeof userInfo === 'string' ? UTS.JSON.parse(userInfo) : userInfo;\n                        this.userName = this.userData.nickname || '用户';\n                        // 如果存储中有用户角色，使用存储的角色\n                        const previousRole = this.userRole;\n                        if (this.userData.role) {\n                            // 更新当前角色\n                            this.userRole = this.userData.role;\n                            uni.__f__('log', 'at pagesMine/course/course.vue:400', '从用户数据中设置角色:', this.userRole);\n                            // 同步更新到storage\n                            uni.setStorageSync('userRole', this.userData.role);\n                            // 同步到全局状态\n                            const globalData = getApp().globalData;\n                            if (globalData) {\n                                globalData.userRole = this.userRole;\n                            }\n                            // 如果角色发生变化，重置相关状态\n                            if (previousRole !== this.userRole) {\n                                this.resetRoleRelatedState();\n                            }\n                        }\n                    }\n                    catch (e) {\n                        uni.__f__('error', 'at pagesMine/course/course.vue:417', '解析用户信息失败:', e);\n                    }\n                }\n            }\n            else {\n                this.userData = new UTSJSONObject({});\n                this.userName = '';\n                // 注意：这里不再自动重置为学生角色\n                // 而是保持当前角色不变，避免意外重置\n                uni.__f__('log', 'at pagesMine/course/course.vue:426', '未登录，保持当前角色:', this.userRole);\n            }\n        },\n        // 重置与角色相关的状态\n        resetRoleRelatedState() {\n            uni.__f__('log', 'at pagesMine/course/course.vue:432', '重置角色相关状态');\n            if (this.userRole === 'student') {\n                this.currentTab = 0;\n            }\n            else {\n                this.teacherCurrentTab = 0;\n            }\n            this.selectedDate = null;\n            this.selectedTimeSlot = '';\n            this.selectedTimePeriod = '';\n        },\n        // 处理顶部导航栏组件的标签切换事件 - 学生\n        onTabChange(index = null) {\n            uni.__f__('log', 'at pagesMine/course/course.vue:445', '学生模式标签切换:', index);\n            this.currentTab = index;\n            // 重置时间选择\n            if (index === 0) {\n                this.selectedTimeSlot = '';\n                this.selectedTimePeriod = '';\n            }\n        },\n        // 重置日期选择\n        resetDateSelection() {\n            this.selectedDate = null;\n            this.selectedTimeSlot = '';\n            this.selectedTimePeriod = '';\n        },\n        // 处理预约 - 修改为显示日历\n        handleReserve(index = null) {\n            this.currentCourseIndex = index;\n            // 如果已经选择了日期，则显示时间选择弹窗\n            if (this.selectedDate) {\n                this.showTimeSelectionDialog();\n            }\n            else {\n                // 显示日历选择器\n                this.$refs.calendar.open();\n            }\n        },\n        // 日历确认事件\n        onCalendarConfirm(e = null) {\n            this.selectedDate = e.fulldate;\n            // 选择日期后立即显示时间选择弹窗\n            this.$nextTick(() => {\n                this.showTimeSelectionDialog();\n            });\n        },\n        // 显示时间选择弹窗\n        showTimeSelectionDialog() {\n            // 构建时间段选项\n            const periodOptions = this.timeSlots.map(item => { return item.period; });\n            // 先选择时间段（上午/下午/晚上）\n            uni.showActionSheet({\n                itemList: periodOptions,\n                success: (res) => {\n                    this.selectedTimePeriod = periodOptions[res.tapIndex];\n                    const selectedPeriod = this.timeSlots[res.tapIndex];\n                    // 然后选择具体时间\n                    setTimeout(() => {\n                        uni.showActionSheet({\n                            itemList: selectedPeriod.slots,\n                            success: (timeRes) => {\n                                this.selectedTimeSlot = selectedPeriod.slots[timeRes.tapIndex];\n                                // 选择完时间后显示确认预约弹窗\n                                this.confirmReservation();\n                            }\n                        });\n                    }, 300);\n                }\n            });\n        },\n        // 确认预约\n        confirmReservation() {\n            const course = this.pendingCourses[this.currentCourseIndex];\n            // 显示确认弹窗\n            uni.showModal(new UTSJSONObject({\n                title: '确认预约',\n                content: `课程：${course.name}\\n日期：${this.selectedDate}\\n时间：${this.selectedTimeSlot}`,\n                success: (res) => {\n                    if (res.confirm) {\n                        // 将预约成功的课程添加到已预约列表\n                        this.reservedCourses.push(Object.assign(Object.assign({}, course), { reservedTime: `${this.selectedDate} ${this.selectedTimeSlot}` }));\n                        // 从待预约列表中删除\n                        this.pendingCourses.splice(this.currentCourseIndex, 1);\n                        uni.showToast({\n                            title: '预约成功',\n                            icon: 'success',\n                            duration: 2000\n                        });\n                        // 重置状态\n                        this.currentCourseIndex = null;\n                        this.selectedDate = null;\n                        this.selectedTimeSlot = '';\n                        this.selectedTimePeriod = '';\n                    }\n                }\n            }));\n        },\n        // 完成课程时添加回放链接\n        completeClass(index = null) {\n            const course = this.teacherActiveCourses[index];\n            // 先让用户输入回放链接\n            uni.showModal(new UTSJSONObject({\n                title: '添加课程回放',\n                editable: true,\n                placeholderText: '请输入课程回放链接 (可选)',\n                success: (res) => {\n                    let replayUrl = '';\n                    if (res.confirm && res.content) {\n                        replayUrl = res.content;\n                    }\n                    // 再确认完成课程\n                    uni.showModal(new UTSJSONObject({\n                        title: '确认下课',\n                        content: `确定完成${course.studentName}的${course.name}课程吗？`,\n                        success: (confirmRes) => {\n                            if (confirmRes.confirm) {\n                                // 将课程从进行中移动到已完成\n                                this.teacherCompletedCourses.push(Object.assign(Object.assign({}, course), { completedTime: new Date().toISOString().split('T')[0], replayUrl: replayUrl }));\n                                // 从进行中列表中删除\n                                this.teacherActiveCourses.splice(index, 1);\n                                uni.showToast({\n                                    title: '课程已完成',\n                                    icon: 'success',\n                                    duration: 2000\n                                });\n                            }\n                        }\n                    }));\n                }\n            }));\n        },\n        // 修改预约时间\n        modifyReservationTime(index = null) {\n            this.currentCourseIndex = index;\n            // 如果已经选择了日期，则显示时间选择弹窗\n            if (this.selectedDate) {\n                this.showTimeSelectionDialog();\n            }\n            else {\n                // 显示日历选择器\n                this.$refs.calendar.open();\n            }\n        },\n        // 查看回访/回放\n        viewFeedback(course = null) {\n            if (course.replayUrl) {\n                // 如果有回放URL，跳转到回放页面\n                uni.showModal(new UTSJSONObject({\n                    title: '查看回放',\n                    content: '是否跳转到课程回放网页？',\n                    success: (res) => {\n                        if (res.confirm) {\n                            // 跳转到外部链接\n                            this.openExternalLink(course.replayUrl);\n                        }\n                    }\n                }));\n            }\n            else {\n                // 默认跳转到评价页面\n                uni.navigateTo({\n                    url: `/pages/mine/order/appraise/appraise?courseId=${course.id}&courseName=${course.name}&teacherName=${course.teacher}&price=${course.price}`\n                });\n            }\n        },\n        // 获取今天的日期\n        getToday() {\n            const today = new Date();\n            return `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}-${String(today.getDate()).padStart(2, '0')}`;\n        },\n        // 获取一个月后的日期（日历结束日期）\n        getNextMonth() {\n            const today = new Date();\n            const nextMonth = new Date(today);\n            nextMonth.setMonth(today.getMonth() + 1);\n            return `${nextMonth.getFullYear()}-${String(nextMonth.getMonth() + 1).padStart(2, '0')}-${String(nextMonth.getDate()).padStart(2, '0')}`;\n        },\n        // 加载课程数据\n        loadCourseData() {\n            // 真实环境中可以从服务器获取数据\n            uni.__f__('log', 'at pagesMine/course/course.vue:643', '加载课程数据，当前角色:', this.userRole);\n            // 根据用户角色加载不同的数据\n            if (this.userRole === 'teacher') {\n                uni.__f__('log', 'at pagesMine/course/course.vue:647', '加载老师课程数据');\n                this.initTeacherData();\n                // 确保使用老师的标签页索引\n                this.teacherCurrentTab = 0;\n            }\n            else {\n                uni.__f__('log', 'at pagesMine/course/course.vue:653', '加载学生课程数据');\n                // 为学生角色初始化数据\n                this.initStudentData();\n                // 确保使用学生的标签页索引\n                this.currentTab = 0;\n            }\n        },\n        // 处理老师界面的导航栏切换事件\n        onTeacherTabChange(index = null) {\n            uni.__f__('log', 'at pagesMine/course/course.vue:664', '老师模式标签切换:', index);\n            this.teacherCurrentTab = index;\n            // 触发必要的数据加载或UI更新\n            if (index === 0) {\n                // 待接受课程\n                uni.__f__('log', 'at pagesMine/course/course.vue:670', '切换到老师-待接受课程标签');\n            }\n            else if (index === 1) {\n                // 进行中课程\n                uni.__f__('log', 'at pagesMine/course/course.vue:673', '切换到老师-进行中课程标签');\n            }\n            else if (index === 2) {\n                // 已完成课程\n                uni.__f__('log', 'at pagesMine/course/course.vue:676', '切换到老师-已完成课程标签');\n            }\n        },\n        // 初始化教师数据\n        initTeacherData() {\n            uni.__f__('log', 'at pagesMine/course/course.vue:682', '初始化教师数据');\n            // 模拟从服务器获取教师相关数据\n            this.teacherPendingCourses = [\n                {\n                    id: 101,\n                    name: \"考研政治精讲班\",\n                    studentName: \"张同学\",\n                    price: 399,\n                    image: \"/static/images/default_avatar.png\"\n                },\n                {\n                    id: 102,\n                    name: \"考研数学基础班\",\n                    studentName: \"李同学\",\n                    price: 499,\n                    image: \"/static/images/default_avatar.png\"\n                }\n            ];\n            this.teacherActiveCourses = [\n                {\n                    id: 103,\n                    name: \"考研英语词汇班\",\n                    studentName: \"王同学\",\n                    price: 349,\n                    classTime: \"2023-12-20 15:00\",\n                    image: \"/static/images/default_avatar.png\"\n                }\n            ];\n            this.teacherCompletedCourses = [\n                {\n                    id: 104,\n                    name: \"计算机专业课辅导\",\n                    studentName: \"赵同学\",\n                    price: 549,\n                    completedTime: \"2023-12-10\",\n                    image: \"/static/images/default_avatar.png\",\n                    replayUrl: \"https://meeting.tencent.com/v2/cloud-record/share?id=9a0c7f38-5e12-4d1d-a53e-94ed126aa3bb&from=3\"\n                }\n            ];\n        },\n        // 老师端 - 发起预约\n        teacherReserve(index = null) {\n            this.currentCourseIndex = index;\n            // 显示日历选择器\n            this.$refs.teacherCalendar.open();\n        },\n        // 老师端 - 日历确认事件\n        onTeacherCalendarConfirm(e = null) {\n            this.selectedDate = e.fulldate;\n            // 选择日期后立即显示时间选择弹窗\n            this.$nextTick(() => {\n                this.showTeacherTimeSelectionDialog();\n            });\n        },\n        // 老师端 - 显示时间选择弹窗\n        showTeacherTimeSelectionDialog() {\n            // 构建时间段选项\n            const periodOptions = this.timeSlots.map(item => { return item.period; });\n            // 先选择时间段（上午/下午/晚上）\n            uni.showActionSheet({\n                itemList: periodOptions,\n                success: (res) => {\n                    this.selectedTimePeriod = periodOptions[res.tapIndex];\n                    const selectedPeriod = this.timeSlots[res.tapIndex];\n                    // 然后选择具体时间\n                    setTimeout(() => {\n                        uni.showActionSheet({\n                            itemList: selectedPeriod.slots,\n                            success: (timeRes) => {\n                                this.selectedTimeSlot = selectedPeriod.slots[timeRes.tapIndex];\n                                // 选择完时间后显示确认预约弹窗\n                                this.confirmTeacherReservation();\n                            }\n                        });\n                    }, 300);\n                }\n            });\n        },\n        // 老师端 - 确认预约\n        confirmTeacherReservation() {\n            const course = this.teacherPendingCourses[this.currentCourseIndex];\n            // 显示确认弹窗\n            uni.showModal(new UTSJSONObject({\n                title: '确认发起预约',\n                content: `课程：${course.name}\\n学生：${course.studentName}\\n日期：${this.selectedDate}\\n时间：${this.selectedTimeSlot}`,\n                success: (res) => {\n                    if (res.confirm) {\n                        // 模拟将预约信息发送给学生\n                        this.sendReservationToStudent(course);\n                        // 从待接受列表中删除\n                        this.teacherPendingCourses.splice(this.currentCourseIndex, 1);\n                        uni.showToast({\n                            title: '预约已发送',\n                            icon: 'success',\n                            duration: 2000\n                        });\n                        // 重置状态\n                        this.currentCourseIndex = null;\n                        this.selectedDate = null;\n                        this.selectedTimeSlot = '';\n                        this.selectedTimePeriod = '';\n                    }\n                }\n            }));\n        },\n        // 模拟将预约信息发送给学生\n        sendReservationToStudent(course = null) {\n            // 真实场景中，这里应该是通过API发送预约信息\n            uni.__f__('log', 'at pagesMine/course/course.vue:806', '发送预约信息到学生:', course.studentName);\n            // 模拟更新全局状态或本地存储\n            const globalData = getApp().globalData || new UTSJSONObject({});\n            if (!globalData.studentReservations) {\n                globalData.studentReservations = [];\n            }\n            // 添加新的预约\n            globalData.studentReservations.push(new UTSJSONObject({\n                id: Date.now(),\n                name: course.name,\n                teacher: '我',\n                time: `${this.selectedDate} ${this.selectedTimeSlot}`,\n                price: course.price,\n                image: course.image || \"/static/images/default_avatar.png\",\n                description: `由老师发起的预约：${course.name}`,\n                studentName: course.studentName\n            }));\n            // 将课程添加到老师的进行中课程\n            this.teacherActiveCourses.push(Object.assign(Object.assign({}, course), { classTime: `${this.selectedDate} ${this.selectedTimeSlot}` }));\n        },\n        // 查看回访/回放\n        viewClassFeedback(item = null) {\n            if (item.replayUrl) {\n                // 如果有回放URL，跳转到回放页面\n                uni.showModal(new UTSJSONObject({\n                    title: '查看回放',\n                    content: '是否跳转到课程回放网页？',\n                    success: (res) => {\n                        if (res.confirm) {\n                            // 跳转到外部链接\n                            this.openExternalLink(item.replayUrl);\n                        }\n                    }\n                }));\n            }\n            else {\n                // 默认显示评价内容\n                uni.showModal(new UTSJSONObject({\n                    title: '学生评价',\n                    content: `${item.studentName}对本课程的评价：\\n非常棒的课程，讲解清晰，收获很多！`,\n                    showCancel: false\n                }));\n            }\n        },\n        // 生成随机未来时间（辅助方法）\n        getRandomFutureTime() {\n            const now = new Date();\n            // 随机1-7天内的某个时间\n            const futureDate = new Date(now.getTime() + (1 + Math.floor(Math.random() * 7)) * 24 * 60 * 60 * 1000);\n            const year = futureDate.getFullYear();\n            const month = String(futureDate.getMonth() + 1).padStart(2, '0');\n            const day = String(futureDate.getDate()).padStart(2, '0');\n            const hours = ['09', '10', '14', '15', '16', '19', '20'][Math.floor(Math.random() * 7)];\n            const minutes = ['00', '30'][Math.floor(Math.random() * 2)];\n            return `${year}-${month}-${day} ${hours}:${minutes}`;\n        },\n        // 通用方法：打开外部链接（兼容多端）\n        openExternalLink(url = null) {\n            // 根据平台不同使用不同的方式打开外部链接\n            // 小程序环境下使用uni.navigateTo跳转到web-view页面\n            uni.navigateTo({\n                url: `/pages/webview/webview?url=${encodeURIComponent(url)}`\n            });\n            // 其他环境\n            uni.__f__('log', 'at pagesMine/course/course.vue:892', '跳转到外部链接:', url);\n        },\n        // 确认下课\n        confirmClassEnd(index = null) {\n            uni.showModal(new UTSJSONObject({\n                title: '确认下课',\n                content: '确定要确认下课吗？',\n                success: (res) => {\n                    if (res.confirm) {\n                        // 将课程状态修改为已完成\n                        const completedCourse = this.reservedCourses[index];\n                        this.completedCourses.push(Object.assign(Object.assign({}, completedCourse), { completedTime: new Date().toISOString().split('T')[0] }));\n                        // 从已预约列表中删除\n                        this.reservedCourses.splice(index, 1);\n                        uni.showToast({\n                            title: '已确认下课',\n                            icon: 'success',\n                            duration: 2000\n                        });\n                    }\n                }\n            }));\n        },\n        // 学生数据初始化\n        initStudentData() {\n            uni.__f__('log', 'at pagesMine/course/course.vue:924', '初始化学生数据');\n            // 先加载默认数据\n            // 这里不需要重新初始化pendingCourses，因为已经有默认数据了\n            // 检查全局数据中是否有老师发起的预约\n            const globalData = getApp().globalData || new UTSJSONObject({});\n            if (globalData.studentReservations && globalData.studentReservations.length > 0) {\n                uni.__f__('log', 'at pagesMine/course/course.vue:932', '发现老师发起的预约:', globalData.studentReservations.length);\n                // 将老师发起的预约添加到学生的待预约列表\n                globalData.studentReservations.forEach((reservation = null) => {\n                    // 检查是否已存在相同ID的课程，避免重复添加\n                    const exists = this.pendingCourses.some(course => { return course.id === reservation.id; });\n                    if (!exists) {\n                        this.pendingCourses.unshift({\n                            id: reservation.id,\n                            name: reservation.name,\n                            teacher: reservation.teacher,\n                            time: reservation.time,\n                            price: reservation.price,\n                            image: reservation.image,\n                            description: reservation.description,\n                            isTeacherReservation: true // 标记为老师发起的预约\n                        });\n                    }\n                });\n                // 处理完后清空全局数据中的预约信息，避免重复显示\n                globalData.studentReservations = [];\n            }\n        },\n        // 学生端 - 接受老师发起的预约\n        acceptReservation(index = null) {\n            const course = this.pendingCourses[index];\n            // 显示确认接受预约的弹窗\n            uni.showModal(new UTSJSONObject({\n                title: '接受预约',\n                content: `确认接受${course.teacher}的预约吗？\\n课程：${course.name}\\n时间：${course.time}`,\n                success: (res) => {\n                    if (res.confirm) {\n                        // 将预约添加到已预约列表\n                        this.reservedCourses.push(Object.assign(Object.assign({}, course), { reservedTime: course.time }));\n                        // 从待预约列表中删除\n                        this.pendingCourses.splice(index, 1);\n                        uni.showToast({\n                            title: '已接受预约',\n                            icon: 'success',\n                            duration: 2000\n                        });\n                    }\n                }\n            }));\n        },\n        // 添加返回方法\n        goBack() {\n            // 使用Navigator工具而不是简单的navigateBack\n            Navigator.toMine();\n        },\n        // 老师端 - 修改课程时间\n        rescheduleClass(index = null) {\n            this.currentCourseIndex = index;\n            // 显示日历选择器\n            this.$refs.teacherCalendar.open();\n        },\n    }\n});\n//# sourceMappingURL=E:/%E7%A0%94%E5%B8%88%E5%BD%95%E4%B8%8E%E5%85%B6%E4%BB%96%E4%BA%BA%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6/teacherDirectory/vue%E5%AE%9E%E7%8E%B0Lottie%E5%8A%A8%E7%94%BB%E4%BB%A3%E7%A0%81/pagesMine/course/course.vue?vue&type=script&lang.uts.js.map","references":["E:/研师录与其他人共享文件/teacherDirectory/vue实现Lottie动画代码/components/navigationTitleBar/header.vue.ts","E:/研师录与其他人共享文件/teacherDirectory/vue实现Lottie动画代码/components/top-navbar/top-navbar.vue.ts","E:/研师录与其他人共享文件/teacherDirectory/vue实现Lottie动画代码/router/Router.js"],"uniExtApis":["uni.__f__","uni.getStorageSync","uni.setStorageSync","uni.showActionSheet","uni.showModal","uni.showToast","uni.navigateTo"],"map":"{\"version\":3,\"file\":\"course.vue?vue&type=script&lang.uts.js\",\"sourceRoot\":\"\",\"sources\":[\"course.vue?vue&type=script&lang.uts\"],\"names\":[],\"mappings\":\";AACA,OAAO,MAAM,MAAM,wCAAwC,CAAA;AAC3D,YAAY;AACZ,OAAO,SAAS,MAAM,wCAAwC,CAAC;AAC/D,SAAS;AACT,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;AAE/C,+BAAe;IACb,UAAU,EAAE;QACV,MAAM;QACN,SAAS;KACV;IACD,IAAI;QACF,OAAO;YACL,UAAU,EAAE,CAAC;YACb,iBAAiB,EAAE,CAAC;YACpB,YAAY;YACZ,SAAS,EAAE;kCACT,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,CAAC,EAAE;kCACrF,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,CAAC,EAAE;kCACrF,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,aAAa,EAAE,aAAa,EAAE,aAAa,CAAC,EAAE;aACvE;YACD,gBAAgB,EAAE,EAAE;YACpB,kBAAkB,EAAE,EAAE;YACtB,sBAAsB;YACtB,cAAc,EAAE;kCACd;oBACE,EAAE,EAAE,CAAC;oBACL,IAAI,EAAE,SAAS;oBACf,OAAO,EAAE,KAAK;oBACd,IAAI,EAAE,kBAAkB;oBACxB,KAAK,EAAE,GAAG;oBACV,KAAK,EAAE,mCAAmC;oBAC1C,WAAW,EAAE,oCAAoC;iBAClD;kCACD;oBACE,EAAE,EAAE,CAAC;oBACL,IAAI,EAAE,SAAS;oBACf,OAAO,EAAE,KAAK;oBACd,IAAI,EAAE,kBAAkB;oBACxB,KAAK,EAAE,GAAG;oBACV,KAAK,EAAE,mCAAmC;oBAC1C,WAAW,EAAE,mCAAmC;iBACjD;kCACD;oBACE,EAAE,EAAE,CAAC;oBACL,IAAI,EAAE,SAAS;oBACf,OAAO,EAAE,KAAK;oBACd,IAAI,EAAE,kBAAkB;oBACxB,KAAK,EAAE,GAAG;oBACV,KAAK,EAAE,mCAAmC;oBAC1C,WAAW,EAAE,6BAA6B;iBAC3C;kCACD;oBACE,EAAE,EAAE,CAAC;oBACL,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,KAAK;oBACd,IAAI,EAAE,kBAAkB;oBACxB,KAAK,EAAE,GAAG;oBACV,KAAK,EAAE,mCAAmC;oBAC1C,WAAW,EAAE,mCAAmC;iBACjD;aACF;YACD,UAAU;YACV,eAAe,EAAE;kCACf;oBACE,EAAE,EAAE,CAAC;oBACL,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,KAAK;oBACd,KAAK,EAAE,GAAG;oBACV,YAAY,EAAE,kBAAkB;oBAChC,KAAK,EAAE,mCAAmC;oBAC1C,WAAW,EAAE,+BAA+B;iBAC7C;kCACD;oBACE,EAAE,EAAE,CAAC;oBACL,IAAI,EAAE,SAAS;oBACf,OAAO,EAAE,KAAK;oBACd,KAAK,EAAE,GAAG;oBACV,YAAY,EAAE,kBAAkB;oBAChC,KAAK,EAAE,mCAAmC;oBAC1C,WAAW,EAAE,gCAAgC;iBAC9C;aACF;YACD,UAAU;YACV,gBAAgB,EAAE;kCAChB;oBACE,EAAE,EAAE,CAAC;oBACL,IAAI,EAAE,SAAS;oBACf,OAAO,EAAE,KAAK;oBACd,KAAK,EAAE,GAAG;oBACV,aAAa,EAAE,kBAAkB;oBACjC,KAAK,EAAE,mCAAmC;oBAC1C,SAAS,EAAE,kGAAkG;iBAC9G;kCACD;oBACE,EAAE,EAAE,CAAC;oBACL,IAAI,EAAE,SAAS;oBACf,OAAO,EAAE,KAAK;oBACd,KAAK,EAAE,GAAG;oBACV,aAAa,EAAE,kBAAkB;oBACjC,KAAK,EAAE,mCAAmC;oBAC1C,SAAS,EAAE,kGAAkG;iBAC9G;aACF;YACD,kBAAkB,EAAE,IAAI;YACxB,YAAY,EAAE,IAAI;YAClB,QAAQ,EAAE,SAAS;YACnB,QAAQ,EAAE,EAAE;YACZ,QAAQ,oBAAE,EAAE,CAAA;YACZ,UAAU,EAAE,KAAK;YACjB,qBAAqB,EAAE,EAAE;YACzB,oBAAoB,EAAE,EAAE;YACxB,uBAAuB,EAAE,EAAE;SAC5B,CAAC;IACJ,CAAC;IACD,MAAM,CAAC,OAAO;QACZ,GAAG,CAAC,KAAK,CAAC,KAAK,EAAC,oCAAoC,EAAC,aAAa,EAAE,OAAO,CAAC,CAAC;QAE7E,UAAU;QACV,IAAI,CAAC,YAAY,EAAE,CAAC;QAEpB,mBAAmB;QACnB,MAAM,UAAU,GAAG,MAAM,EAAE,CAAC,UAAU,CAAC;QACvC,MAAM,cAAc,GAAG,GAAG,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QAEtD,eAAe;QACf,IAAI,UAAU,IAAI,UAAU,CAAC,QAAQ,EAAE;YACrC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;YACpC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAC,oCAAoC,EAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SAClF;QACD,YAAY;aACP,IAAI,cAAc,EAAE;YACvB,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC;YAC/B,UAAU;YACV,IAAI,UAAU,EAAE;gBACd,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;aACrC;YACD,GAAG,CAAC,KAAK,CAAC,KAAK,EAAC,oCAAoC,EAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SACjF;QAED,YAAY;QACZ,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IACD,MAAM;QACJ,GAAG,CAAC,KAAK,CAAC,KAAK,EAAC,oCAAoC,EAAC,oBAAoB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE1F,SAAS;QACT,MAAM,UAAU,GAAG,MAAM,EAAE,CAAC,UAAU,CAAC;QACvC,IAAI,UAAU,IAAI,UAAU,CAAC,QAAQ,IAAI,UAAU,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,EAAE;YAC9E,GAAG,CAAC,KAAK,CAAC,KAAK,EAAC,oCAAoC,EAAC,SAAS,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;YACrF,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;YACnC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;YAEpC,uBAAuB;YACvB,IAAI,YAAY,KAAK,IAAI,CAAC,QAAQ,EAAE;gBAClC,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAC7B,GAAG,CAAC,cAAc,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC9C,IAAI,CAAC,cAAc,EAAE,CAAC;aACvB;SACF;QAED,2BAA2B;QAC3B,MAAM,cAAc,GAAG,GAAG,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QACtD,IAAI,cAAc,IAAI,cAAc,KAAK,IAAI,CAAC,QAAQ,EAAE;YACtD,GAAG,CAAC,KAAK,CAAC,KAAK,EAAC,oCAAoC,EAAC,iBAAiB,EAAE,cAAc,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC9G,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;YACnC,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC;YAE/B,UAAU;YACV,IAAI,UAAU,EAAE;gBACd,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;aACrC;YAED,kBAAkB;YAClB,IAAI,YAAY,KAAK,IAAI,CAAC,QAAQ,EAAE;gBAClC,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAC7B,IAAI,CAAC,cAAc,EAAE,CAAC;aACvB;SACF;IACH,CAAC;IACD,YAAY;IACZ,QAAQ;QACN,GAAG,CAAC,KAAK,CAAC,KAAK,EAAC,oCAAoC,EAAC,wBAAwB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9F,aAAa;QACb,GAAG,CAAC,cAAc,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE9C,UAAU;QACV,MAAM,UAAU,GAAG,MAAM,EAAE,CAAC,UAAU,CAAC;QACvC,IAAI,UAAU,EAAE;YACd,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SACrC;IACH,CAAC;IACD,OAAO,EAAE;QACP;;WAEG;QACH,YAAY;YACV,SAAS;YACT,MAAM,KAAK,GAAG,GAAG,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;YAC1C,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,KAAK,CAAC;YAE1B,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,SAAS;gBACT,MAAM,QAAQ,GAAG,GAAG,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;gBAChD,IAAI,QAAQ,EAAE;oBACZ,IAAI;wBACF,IAAI,CAAC,QAAQ,GAAG,OAAO,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC,SAAK,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;wBAC/E,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,IAAI,CAAC;wBAE/C,qBAAqB;wBACrB,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;wBACnC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;4BACtB,SAAS;4BACT,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;4BACnC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAC,oCAAoC,EAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;4BAEnF,eAAe;4BACf,GAAG,CAAC,cAAc,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;4BAEnD,UAAU;4BACV,MAAM,UAAU,GAAG,MAAM,EAAE,CAAC,UAAU,CAAC;4BACvC,IAAI,UAAU,EAAE;gCACd,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;6BACrC;4BAED,kBAAkB;4BAClB,IAAI,YAAY,KAAK,IAAI,CAAC,QAAQ,EAAE;gCAClC,IAAI,CAAC,qBAAqB,EAAE,CAAC;6BAC9B;yBACF;qBACF;oBAAC,OAAO,CAAC,EAAE;wBACV,GAAG,CAAC,KAAK,CAAC,OAAO,EAAC,oCAAoC,EAAC,WAAW,EAAE,CAAC,CAAC,CAAC;qBACxE;iBACF;aACF;iBAAM;gBACL,IAAI,CAAC,QAAQ,qBAAG,EAAE,CAAA,CAAC;gBACnB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;gBAEnB,mBAAmB;gBACnB,oBAAoB;gBACpB,GAAG,CAAC,KAAK,CAAC,KAAK,EAAC,oCAAoC,EAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;aACpF;QACH,CAAC;QAED,aAAa;QACb,qBAAqB;YACnB,GAAG,CAAC,KAAK,CAAC,KAAK,EAAC,oCAAoC,EAAC,UAAU,CAAC,CAAC;YACjE,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;gBAC/B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;aACrB;iBAAM;gBACL,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;aAC5B;YACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;YAC3B,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC/B,CAAC;QAED,wBAAwB;QACxB,WAAW,CAAC,KAAK,OAAA;YACf,GAAG,CAAC,KAAK,CAAC,KAAK,EAAC,oCAAoC,EAAC,WAAW,EAAE,KAAK,CAAC,CAAC;YACzE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAExB,SAAS;YACT,IAAI,KAAK,KAAK,CAAC,EAAE;gBACf,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;gBAC3B,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;aAC9B;QACH,CAAC;QAED,SAAS;QACT,kBAAkB;YAChB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;YAC3B,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC/B,CAAC;QAED,iBAAiB;QACjB,aAAa,CAAC,KAAK,OAAA;YACjB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAEhC,sBAAsB;YACtB,IAAI,IAAI,CAAC,YAAY,EAAE;gBACrB,IAAI,CAAC,uBAAuB,EAAE,CAAC;aAChC;iBAAM;gBACL,UAAU;gBACV,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;aAC5B;QACH,CAAC;QAED,SAAS;QACT,iBAAiB,CAAC,CAAC,OAAA;YACjB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,QAAQ,CAAC;YAE/B,kBAAkB;YAClB,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,CAAC,uBAAuB,EAAE,CAAC;YACjC,CAAC,CAAC,CAAC;QACL,CAAC;QAED,WAAW;QACX,uBAAuB;YACrB,UAAU;YACV,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,MAAI,OAAA,IAAI,CAAC,MAAM,EAAX,CAAW,CAAC,CAAC;YAE9D,mBAAmB;YACnB,GAAG,CAAC,eAAe,CAAC;gBAClB,QAAQ,EAAE,aAAa;gBACvB,OAAO,EAAE,CAAC,GAAG;oBACX,IAAI,CAAC,kBAAkB,GAAG,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBACtD,MAAM,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBAEpD,WAAW;oBACX,UAAU,CAAC;wBACT,GAAG,CAAC,eAAe,CAAC;4BAClB,QAAQ,EAAE,cAAc,CAAC,KAAK;4BAC9B,OAAO,EAAE,CAAC,OAAO;gCACf,IAAI,CAAC,gBAAgB,GAAG,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gCAE/D,iBAAiB;gCACjB,IAAI,CAAC,kBAAkB,EAAE,CAAC;4BAC5B,CAAC;yBACF,CAAC,CAAC;oBACL,CAAC,EAAE,GAAG,CAAC,CAAC;gBACV,CAAC;aACF,CAAC,CAAC;QACL,CAAC;QAED,OAAO;QACP,kBAAkB;YAChB,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAE5D,SAAS;YACT,GAAG,CAAC,SAAS,mBAAC;gBACZ,KAAK,EAAE,MAAM;gBACb,OAAO,EAAE,MAAM,MAAM,CAAC,IAAI,QAAQ,IAAI,CAAC,YAAY,QAAQ,IAAI,CAAC,gBAAgB,EAAE;gBAClF,OAAO,EAAE,CAAC,GAAG;oBACX,IAAI,GAAG,CAAC,OAAO,EAAE;wBACf,mBAAmB;wBACnB,IAAI,CAAC,eAAe,CAAC,IAAI,iCACpB,MAAM,KACT,YAAY,EAAE,GAAG,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,gBAAgB,EAAE,IAC7D,CAAC;wBAEH,YAAY;wBACZ,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC;wBAEvD,GAAG,CAAC,SAAS,CAAC;4BACZ,KAAK,EAAE,MAAM;4BACb,IAAI,EAAE,SAAS;4BACf,QAAQ,EAAE,IAAI;yBACf,CAAC,CAAC;wBAEH,OAAO;wBACP,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;wBAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;wBACzB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;wBAC3B,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;qBAC9B;gBACH,CAAC;aACF,EAAC,CAAC;QACL,CAAC;QAED,cAAc;QACd,aAAa,CAAC,KAAK,OAAA;YACjB,MAAM,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;YAEhD,aAAa;YACb,GAAG,CAAC,SAAS,mBAAC;gBACZ,KAAK,EAAE,QAAQ;gBACf,QAAQ,EAAE,IAAI;gBACd,eAAe,EAAE,gBAAgB;gBACjC,OAAO,EAAE,CAAC,GAAG;oBACX,IAAI,SAAS,GAAG,EAAE,CAAC;oBACnB,IAAI,GAAG,CAAC,OAAO,IAAI,GAAG,CAAC,OAAO,EAAE;wBAC9B,SAAS,GAAG,GAAG,CAAC,OAAO,CAAC;qBACzB;oBAED,UAAU;oBACV,GAAG,CAAC,SAAS,mBAAC;wBACZ,KAAK,EAAE,MAAM;wBACb,OAAO,EAAE,OAAO,MAAM,CAAC,WAAW,IAAI,MAAM,CAAC,IAAI,MAAM;wBACvD,OAAO,EAAE,CAAC,UAAU;4BAClB,IAAI,UAAU,CAAC,OAAO,EAAE;gCACtB,gBAAgB;gCAChB,IAAI,CAAC,uBAAuB,CAAC,IAAI,iCAC5B,MAAM,KACT,aAAa,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EACrD,SAAS,EAAE,SAAS,IACpB,CAAC;gCAEH,YAAY;gCACZ,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gCAE3C,GAAG,CAAC,SAAS,CAAC;oCACZ,KAAK,EAAE,OAAO;oCACd,IAAI,EAAE,SAAS;oCACf,QAAQ,EAAE,IAAI;iCACf,CAAC,CAAC;6BACJ;wBACH,CAAC;qBACF,EAAC,CAAC;gBACL,CAAC;aACF,EAAC,CAAC;QACL,CAAC;QAED,SAAS;QACT,qBAAqB,CAAC,KAAK,OAAA;YACzB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAEhC,sBAAsB;YACtB,IAAI,IAAI,CAAC,YAAY,EAAE;gBACrB,IAAI,CAAC,uBAAuB,EAAE,CAAC;aAChC;iBAAM;gBACL,UAAU;gBACV,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;aAC5B;QACH,CAAC;QAED,UAAU;QACV,YAAY,CAAC,MAAM,OAAA;YACjB,IAAI,MAAM,CAAC,SAAS,EAAE;gBACpB,mBAAmB;gBACnB,GAAG,CAAC,SAAS,mBAAC;oBACZ,KAAK,EAAE,MAAM;oBACb,OAAO,EAAE,cAAc;oBACvB,OAAO,EAAE,CAAC,GAAG;wBACX,IAAI,GAAG,CAAC,OAAO,EAAE;4BACf,UAAU;4BACV,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;yBACzC;oBACH,CAAC;iBACF,EAAC,CAAC;aACJ;iBAAM;gBACL,YAAY;gBACZ,GAAG,CAAC,UAAU,CAAC;oBACb,GAAG,EAAE,gDAAgD,MAAM,CAAC,EAAE,eAAe,MAAM,CAAC,IAAI,gBAAgB,MAAM,CAAC,OAAO,UAAU,MAAM,CAAC,KAAK,EAAE;iBAC/I,CAAC,CAAC;aACJ;QACH,CAAC;QAED,UAAU;QACV,QAAQ;YACN,MAAM,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;YACzB,OAAO,GAAG,KAAK,CAAC,WAAW,EAAE,IAAI,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC;QAC/H,CAAC;QAED,oBAAoB;QACpB,YAAY;YACV,MAAM,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;YACzB,MAAM,SAAS,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;YAClC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;YACzC,OAAO,GAAG,SAAS,CAAC,WAAW,EAAE,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC;QAC3I,CAAC;QAED,SAAS;QACT,cAAc;YACZ,kBAAkB;YAClB,GAAG,CAAC,KAAK,CAAC,KAAK,EAAC,oCAAoC,EAAC,cAAc,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YAEpF,gBAAgB;YAChB,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;gBAC/B,GAAG,CAAC,KAAK,CAAC,KAAK,EAAC,oCAAoC,EAAC,UAAU,CAAC,CAAC;gBACjE,IAAI,CAAC,eAAe,EAAE,CAAC;gBAEvB,eAAe;gBACf,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;aAC5B;iBAAM;gBACL,GAAG,CAAC,KAAK,CAAC,KAAK,EAAC,oCAAoC,EAAC,UAAU,CAAC,CAAC;gBACjE,aAAa;gBACb,IAAI,CAAC,eAAe,EAAE,CAAC;gBAEvB,eAAe;gBACf,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;aACrB;QACH,CAAC;QAED,iBAAiB;QACjB,kBAAkB,CAAC,KAAK,OAAA;YACtB,GAAG,CAAC,KAAK,CAAC,KAAK,EAAC,oCAAoC,EAAC,WAAW,EAAE,KAAK,CAAC,CAAC;YACzE,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAE/B,iBAAiB;YACjB,IAAI,KAAK,KAAK,CAAC,EAAE;gBACf,QAAQ;gBACR,GAAG,CAAC,KAAK,CAAC,KAAK,EAAC,oCAAoC,EAAC,eAAe,CAAC,CAAC;aACvE;iBAAM,IAAI,KAAK,KAAK,CAAC,EAAE;gBACtB,QAAQ;gBACR,GAAG,CAAC,KAAK,CAAC,KAAK,EAAC,oCAAoC,EAAC,eAAe,CAAC,CAAC;aACvE;iBAAM,IAAI,KAAK,KAAK,CAAC,EAAE;gBACtB,QAAQ;gBACR,GAAG,CAAC,KAAK,CAAC,KAAK,EAAC,oCAAoC,EAAC,eAAe,CAAC,CAAC;aACvE;QACH,CAAC;QAED,UAAU;QACV,eAAe;YACb,GAAG,CAAC,KAAK,CAAC,KAAK,EAAC,oCAAoC,EAAC,SAAS,CAAC,CAAC;YAEhE,iBAAiB;YACjB,IAAI,CAAC,qBAAqB,GAAG;gBAC3B;oBACE,EAAE,EAAE,GAAG;oBACP,IAAI,EAAE,SAAS;oBACf,WAAW,EAAE,KAAK;oBAClB,KAAK,EAAE,GAAG;oBACV,KAAK,EAAE,mCAAmC;iBAC3C;gBACD;oBACE,EAAE,EAAE,GAAG;oBACP,IAAI,EAAE,SAAS;oBACf,WAAW,EAAE,KAAK;oBAClB,KAAK,EAAE,GAAG;oBACV,KAAK,EAAE,mCAAmC;iBAC3C;aACF,CAAC;YAEF,IAAI,CAAC,oBAAoB,GAAG;gBAC1B;oBACE,EAAE,EAAE,GAAG;oBACP,IAAI,EAAE,SAAS;oBACf,WAAW,EAAE,KAAK;oBAClB,KAAK,EAAE,GAAG;oBACV,SAAS,EAAE,kBAAkB;oBAC7B,KAAK,EAAE,mCAAmC;iBAC3C;aACF,CAAC;YAEF,IAAI,CAAC,uBAAuB,GAAG;gBAC7B;oBACE,EAAE,EAAE,GAAG;oBACP,IAAI,EAAE,UAAU;oBAChB,WAAW,EAAE,KAAK;oBAClB,KAAK,EAAE,GAAG;oBACV,aAAa,EAAE,YAAY;oBAC3B,KAAK,EAAE,mCAAmC;oBAC1C,SAAS,EAAE,kGAAkG;iBAC9G;aACF,CAAC;QACJ,CAAC;QAED,aAAa;QACb,cAAc,CAAC,KAAK,OAAA;YAClB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAChC,UAAU;YACV,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QACpC,CAAC;QAED,eAAe;QACf,wBAAwB,CAAC,CAAC,OAAA;YACxB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,QAAQ,CAAC;YAE/B,kBAAkB;YAClB,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,CAAC,8BAA8B,EAAE,CAAC;YACxC,CAAC,CAAC,CAAC;QACL,CAAC;QAED,iBAAiB;QACjB,8BAA8B;YAC5B,UAAU;YACV,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,MAAI,OAAA,IAAI,CAAC,MAAM,EAAX,CAAW,CAAC,CAAC;YAE9D,mBAAmB;YACnB,GAAG,CAAC,eAAe,CAAC;gBAClB,QAAQ,EAAE,aAAa;gBACvB,OAAO,EAAE,CAAC,GAAG;oBACX,IAAI,CAAC,kBAAkB,GAAG,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBACtD,MAAM,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBAEpD,WAAW;oBACX,UAAU,CAAC;wBACT,GAAG,CAAC,eAAe,CAAC;4BAClB,QAAQ,EAAE,cAAc,CAAC,KAAK;4BAC9B,OAAO,EAAE,CAAC,OAAO;gCACf,IAAI,CAAC,gBAAgB,GAAG,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gCAE/D,iBAAiB;gCACjB,IAAI,CAAC,yBAAyB,EAAE,CAAC;4BACnC,CAAC;yBACF,CAAC,CAAC;oBACL,CAAC,EAAE,GAAG,CAAC,CAAC;gBACV,CAAC;aACF,CAAC,CAAC;QACL,CAAC;QAED,aAAa;QACb,yBAAyB;YACvB,MAAM,MAAM,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAEnE,SAAS;YACT,GAAG,CAAC,SAAS,mBAAC;gBACZ,KAAK,EAAE,QAAQ;gBACf,OAAO,EAAE,MAAM,MAAM,CAAC,IAAI,QAAQ,MAAM,CAAC,WAAW,QAAQ,IAAI,CAAC,YAAY,QAAQ,IAAI,CAAC,gBAAgB,EAAE;gBAC5G,OAAO,EAAE,CAAC,GAAG;oBACX,IAAI,GAAG,CAAC,OAAO,EAAE;wBACf,eAAe;wBACf,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC;wBAEtC,YAAY;wBACZ,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC;wBAE9D,GAAG,CAAC,SAAS,CAAC;4BACZ,KAAK,EAAE,OAAO;4BACd,IAAI,EAAE,SAAS;4BACf,QAAQ,EAAE,IAAI;yBACf,CAAC,CAAC;wBAEH,OAAO;wBACP,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;wBAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;wBACzB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;wBAC3B,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;qBAC9B;gBACH,CAAC;aACF,EAAC,CAAC;QACL,CAAC;QAED,eAAe;QACf,wBAAwB,CAAC,MAAM,OAAA;YAC7B,yBAAyB;YACzB,GAAG,CAAC,KAAK,CAAC,KAAK,EAAC,oCAAoC,EAAC,YAAY,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;YAEvF,gBAAgB;YAChB,MAAM,UAAU,GAAG,MAAM,EAAE,CAAC,UAAU,sBAAI,EAAE,CAAA,CAAC;YAC7C,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE;gBACnC,UAAU,CAAC,mBAAmB,GAAG,EAAE,CAAC;aACrC;YAED,SAAS;YACT,UAAU,CAAC,mBAAmB,CAAC,IAAI,mBAAC;gBAClC,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE;gBACd,IAAI,EAAE,MAAM,CAAC,IAAI;gBACjB,OAAO,EAAE,GAAG;gBACZ,IAAI,EAAE,GAAG,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBACrD,KAAK,EAAE,MAAM,CAAC,KAAK;gBACnB,KAAK,EAAE,MAAM,CAAC,KAAK,IAAI,mCAAmC;gBAC1D,WAAW,EAAE,YAAY,MAAM,CAAC,IAAI,EAAE;gBACtC,WAAW,EAAE,MAAM,CAAC,WAAW;aAChC,EAAC,CAAC;YAEH,iBAAiB;YACjB,IAAI,CAAC,oBAAoB,CAAC,IAAI,iCACzB,MAAM,KACT,SAAS,EAAE,GAAG,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,gBAAgB,EAAE,IAC1D,CAAC;QACL,CAAC;QAED,UAAU;QACV,iBAAiB,CAAC,IAAI,OAAA;YACpB,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,mBAAmB;gBACnB,GAAG,CAAC,SAAS,mBAAC;oBACZ,KAAK,EAAE,MAAM;oBACb,OAAO,EAAE,cAAc;oBACvB,OAAO,EAAE,CAAC,GAAG;wBACX,IAAI,GAAG,CAAC,OAAO,EAAE;4BACf,UAAU;4BACV,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;yBACvC;oBACH,CAAC;iBACF,EAAC,CAAC;aACJ;iBAAM;gBACL,WAAW;gBACX,GAAG,CAAC,SAAS,mBAAC;oBACZ,KAAK,EAAE,MAAM;oBACb,OAAO,EAAE,GAAG,IAAI,CAAC,WAAW,6BAA6B;oBACzD,UAAU,EAAE,KAAK;iBAClB,EAAC,CAAC;aACJ;QACH,CAAC;QAED,iBAAiB;QACjB,mBAAmB;YACjB,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;YACvB,eAAe;YACf,MAAM,UAAU,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;YACvG,MAAM,IAAI,GAAG,UAAU,CAAC,WAAW,EAAE,CAAC;YACtC,MAAM,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YACjE,MAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YAC1D,MAAM,KAAK,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YACxF,MAAM,OAAO,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YAE5D,OAAO,GAAG,IAAI,IAAI,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,OAAO,EAAE,CAAC;QACvD,CAAC;QAED,oBAAoB;QACpB,gBAAgB,CAAC,GAAG,OAAA;YAClB,sBAAsB;YAYtB,sCAAsC;YACtC,GAAG,CAAC,UAAU,CAAC;gBACb,GAAG,EAAE,8BAA8B,kBAAkB,CAAC,GAAG,CAAC,EAAE;aAC7D,CAAC,CAAC;YAGH,OAAO;YACP,GAAG,CAAC,KAAK,CAAC,KAAK,EAAC,oCAAoC,EAAC,UAAU,EAAE,GAAG,CAAC,CAAC;QACxE,CAAC;QAED,OAAO;QACP,eAAe,CAAC,KAAK,OAAA;YACnB,GAAG,CAAC,SAAS,mBAAC;gBACZ,KAAK,EAAE,MAAM;gBACb,OAAO,EAAE,WAAW;gBACpB,OAAO,EAAE,CAAC,GAAG;oBACX,IAAI,GAAG,CAAC,OAAO,EAAE;wBACf,cAAc;wBACd,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;wBACpD,IAAI,CAAC,gBAAgB,CAAC,IAAI,iCACrB,eAAe,KAClB,aAAa,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IACrD,CAAC;wBAEH,YAAY;wBACZ,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;wBAEtC,GAAG,CAAC,SAAS,CAAC;4BACZ,KAAK,EAAE,OAAO;4BACd,IAAI,EAAE,SAAS;4BACf,QAAQ,EAAE,IAAI;yBACf,CAAC,CAAC;qBACJ;gBACH,CAAC;aACF,EAAC,CAAC;QACL,CAAC;QAED,UAAU;QACV,eAAe;YACb,GAAG,CAAC,KAAK,CAAC,KAAK,EAAC,oCAAoC,EAAC,SAAS,CAAC,CAAC;YAEhE,UAAU;YACV,sCAAsC;YAEtC,oBAAoB;YACpB,MAAM,UAAU,GAAG,MAAM,EAAE,CAAC,UAAU,sBAAI,EAAE,CAAA,CAAC;YAC7C,IAAI,UAAU,CAAC,mBAAmB,IAAI,UAAU,CAAC,mBAAmB,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC/E,GAAG,CAAC,KAAK,CAAC,KAAK,EAAC,oCAAoC,EAAC,YAAY,EAAE,UAAU,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;gBAE1G,sBAAsB;gBACtB,UAAU,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAA,WAAW,OAAA;oBAChD,wBAAwB;oBACxB,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,MAAI,OAAA,MAAM,CAAC,EAAE,KAAK,WAAW,CAAC,EAAE,EAA5B,CAA4B,CAAC,CAAC;oBAChF,IAAI,CAAC,MAAM,EAAE;wBACX,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC;4BAC1B,EAAE,EAAE,WAAW,CAAC,EAAE;4BAClB,IAAI,EAAE,WAAW,CAAC,IAAI;4BACtB,OAAO,EAAE,WAAW,CAAC,OAAO;4BAC5B,IAAI,EAAE,WAAW,CAAC,IAAI;4BACtB,KAAK,EAAE,WAAW,CAAC,KAAK;4BACxB,KAAK,EAAE,WAAW,CAAC,KAAK;4BACxB,WAAW,EAAE,WAAW,CAAC,WAAW;4BACpC,oBAAoB,EAAE,IAAI,CAAC,aAAa;yBACzC,CAAC,CAAC;qBACJ;gBACH,CAAC,CAAC,CAAC;gBAEH,0BAA0B;gBAC1B,UAAU,CAAC,mBAAmB,GAAG,EAAE,CAAC;aACrC;QACH,CAAC;QAED,kBAAkB;QAClB,iBAAiB,CAAC,KAAK,OAAA;YACrB,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;YAE1C,cAAc;YACd,GAAG,CAAC,SAAS,mBAAC;gBACZ,KAAK,EAAE,MAAM;gBACb,OAAO,EAAE,OAAO,MAAM,CAAC,OAAO,aAAa,MAAM,CAAC,IAAI,QAAQ,MAAM,CAAC,IAAI,EAAE;gBAC3E,OAAO,EAAE,CAAC,GAAG;oBACX,IAAI,GAAG,CAAC,OAAO,EAAE;wBACf,cAAc;wBACd,IAAI,CAAC,eAAe,CAAC,IAAI,iCACpB,MAAM,KACT,YAAY,EAAE,MAAM,CAAC,IAAI,IACzB,CAAC;wBAEH,YAAY;wBACZ,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;wBAErC,GAAG,CAAC,SAAS,CAAC;4BACZ,KAAK,EAAE,OAAO;4BACd,IAAI,EAAE,SAAS;4BACf,QAAQ,EAAE,IAAI;yBACf,CAAC,CAAC;qBACJ;gBACH,CAAC;aACF,EAAC,CAAC;QACL,CAAC;QAED,SAAS;QACT,MAAM;YACJ,kCAAkC;YAClC,SAAS,CAAC,MAAM,EAAE,CAAC;QACrB,CAAC;QAED,eAAe;QACf,eAAe,CAAC,KAAK,OAAA;YACnB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAEhC,UAAU;YACV,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QACpC,CAAC;KACF;CACF,EAAC\"}"}
