{"code":"import { defineComponent } from \"vue\";\nimport Header from '@/components/navigationTitleBar/header.vue';\nimport { Navigator } from '@/router/Router.js';\n// 导入日期选择器组件\nimport uniDatetimePicker from '@/uni_modules/uni-datetime-picker/components/uni-datetime-picker/uni-datetime-picker.vue';\n// 导入模拟数据\nimport moneyState from '@/store/user/money/state.js';\nexport default defineComponent({\n    components: {\n        Header,\n        uniDatetimePicker\n    },\n    data() {\n        return {\n            refreshing: false,\n            // 直接使用模拟数据\n            localTransactionList: moneyState.transactionList,\n            isLoading: false,\n            hasMore: false,\n            // 新增日期选择器控制\n            showDatePicker: false,\n            currentDate: Date.now(),\n            // 账单数据\n            currentMonth: this.getCurrentMonthLabel(),\n            showMonthPicker: false,\n            availableMonths: [],\n            currentFilter: 'all',\n            filters: [\n                new UTSJSONObject({ label: '全部', value: 'all' }),\n                new UTSJSONObject({ label: '收入', value: 'income' }),\n                new UTSJSONObject({ label: '支出', value: 'expense' })\n            ],\n            showDetail: false,\n            selectedTransaction: null,\n            // 时间索引相关数据\n            showTimeIndexPanel: false,\n            availableYears: [2021, 2022, 2023, 2024, 2025],\n            currentYearIndex: new Date().getFullYear(),\n            quickSelectType: '',\n            // 交易类别图标映射\n            categoryIcons: new UTSJSONObject({\n                income: new UTSJSONObject({\n                    default: '/static/image/bill/income.png',\n                    course: '/static/image/bill/course.png',\n                    salary: '/static/image/bill/income.png',\n                    refund: '/static/image/bill/income.png',\n                    interest: '/static/image/bill/income.png'\n                }),\n                expense: new UTSJSONObject({\n                    default: '/static/image/bill/expense.png',\n                    withdraw: '/static/image/bill/withdraw.png',\n                    transfer: '/static/image/bill/expense.png',\n                    shopping: '/static/image/bill/expense.png',\n                    dining: '/static/image/bill/expense.png'\n                })\n            })\n        };\n    },\n    computed: {\n        // 使用本地数据\n        transactionList() {\n            return this.localTransactionList;\n        },\n        // 按筛选条件过滤的交易记录\n        filteredTransactions() {\n            if (!this.transactionList || this.transactionList.length === 0) {\n                return [];\n            }\n            // 先按月份筛选\n            const selectedMonth = this.parseMonthLabel(this.currentMonth);\n            let monthFiltered = this.transactionList.filter((item = null) => {\n                const date = new Date(item.date);\n                return date.getFullYear() === selectedMonth.year && date.getMonth() + 1 === selectedMonth.month;\n            });\n            // 再按类型筛选\n            if (this.currentFilter === 'income') {\n                monthFiltered = monthFiltered.filter((item = null) => { return item.amount > 0; });\n            }\n            else if (this.currentFilter === 'expense') {\n                monthFiltered = monthFiltered.filter((item = null) => { return item.amount < 0; });\n            }\n            // 按时间排序（从新到旧）\n            return monthFiltered.sort((a = null, b = null) => { return b.date - a.date; });\n        },\n        // 总收入\n        totalIncome() {\n            return this.filteredTransactions\n                .filter((item = null) => { return item.amount > 0; })\n                .reduce((sum = null, item = null) => { return sum + item.amount; }, 0)\n                .toFixed(2);\n        },\n        // 总支出\n        totalExpense() {\n            return this.filteredTransactions\n                .filter((item = null) => { return item.amount < 0; })\n                .reduce((sum = null, item = null) => { return sum + Math.abs(item.amount); }, 0)\n                .toFixed(2);\n        }\n    },\n    onLoad() {\n        // 初始化月份列表\n        this.generateAvailableMonths();\n        // 初始化加载交易记录\n        uni.__f__('log', 'at pagesMine/bill/bill.vue:309', '加载交易记录:', this.transactionList);\n        this.fetchData();\n    },\n    // 下拉触底加载更多\n    onReachBottom() {\n        this.loadMore();\n    },\n    methods: {\n        // 返回上一页\n        goBack() {\n            try {\n                Navigator.toMine();\n            }\n            catch (error) {\n                uni.__f__('error', 'at pagesMine/bill/bill.vue:322', '导航错误:', error);\n                // 回退到原始导航方法\n                uni.navigateBack(new UTSJSONObject({\n                    delta: 1\n                }));\n            }\n        },\n        // 打开日期选择器\n        openDateSelector() {\n            // 优先使用月份选择器\n            this.showMonthPicker = true;\n            // 如果需要使用日期选择器，则使用下面的代码\n            // const dateStr = this.parseMonthLabel(this.currentMonth);\n            // const date = new Date(dateStr.year, dateStr.month - 1, 1);\n            // this.currentDate = date.getTime();\n            // this.showDatePicker = true;\n        },\n        // 初始化加载交易数据 - 使用模拟数据，无需实际请求\n        fetchData() {\n            // 模拟加载中状态\n            this.isLoading = true;\n            setTimeout(() => {\n                // 确保交易记录数据已正确加载\n                if (!this.localTransactionList || this.localTransactionList.length === 0) {\n                    this.localTransactionList = moneyState.transactionList || [];\n                }\n                // 扩充模拟数据\n                if (this.localTransactionList.length < 10) {\n                    this.expandMockData();\n                }\n                // 重置加载状态\n                this.isLoading = false;\n                // 设置是否有更多数据\n                this.hasMore = this.localTransactionList.length > 10;\n            }, 500);\n        },\n        // 扩充模拟数据\n        expandMockData() {\n            // 添加更多模拟数据，微信支付风格的交易记录\n            const newTransactions = [\n                new UTSJSONObject({\n                    id: 'tx003',\n                    name: '同济超市',\n                    date: 1743120000000,\n                    amount: -5.70,\n                    channel: '微信支付'\n                }),\n                new UTSJSONObject({\n                    id: 'tx004',\n                    name: '全家',\n                    date: 1742860800000,\n                    amount: -15.80,\n                    channel: '微信支付'\n                }),\n                new UTSJSONObject({\n                    id: 'tx005',\n                    name: '扫二维码付款-给曹殷杰',\n                    date: 1742774400000,\n                    amount: -6.00,\n                    channel: '微信支付'\n                }),\n                new UTSJSONObject({\n                    id: 'tx006',\n                    name: '微信红包-来自妈',\n                    date: 1742515200000,\n                    amount: 100.00,\n                    channel: '微信红包'\n                }),\n                new UTSJSONObject({\n                    id: 'tx007',\n                    name: 'luckin coffee',\n                    date: 1742256000000,\n                    amount: -14.35,\n                    channel: '微信支付'\n                }),\n                new UTSJSONObject({\n                    id: 'tx008',\n                    name: '同济大学',\n                    date: 1742083200000,\n                    amount: -30.00,\n                    channel: '微信支付'\n                }),\n                new UTSJSONObject({\n                    id: 'tx009',\n                    name: '嘉众越',\n                    date: 1741824000000,\n                    amount: -19.90,\n                    channel: '微信支付'\n                }),\n                new UTSJSONObject({\n                    id: 'tx010',\n                    name: '上海独美科技有限公司',\n                    date: 1741305600000,\n                    amount: -14.90,\n                    channel: '微信支付'\n                }),\n                new UTSJSONObject({\n                    id: 'tx011',\n                    name: '好利来',\n                    date: 1741132800000,\n                    amount: -35.50,\n                    channel: '微信支付'\n                }),\n                new UTSJSONObject({\n                    id: 'tx012',\n                    name: '中石化加油站',\n                    date: 1741046400000,\n                    amount: -208.56,\n                    channel: '微信支付'\n                }),\n                new UTSJSONObject({\n                    id: 'tx013',\n                    name: '春风十里',\n                    date: 1740873600000,\n                    amount: -158.00,\n                    channel: '微信支付'\n                }),\n                new UTSJSONObject({\n                    id: 'tx014',\n                    name: '美团外卖',\n                    date: 1740787200000,\n                    amount: -25.80,\n                    channel: '微信支付'\n                }),\n                new UTSJSONObject(\n                // 2月份数据\n                {\n                    id: 'tx015',\n                    name: '工资',\n                    date: 1740096000000,\n                    amount: 6000.00,\n                    channel: '微信支付'\n                }),\n                new UTSJSONObject({\n                    id: 'tx016',\n                    name: '淘宝退款',\n                    date: 1739836800000,\n                    amount: 86.50,\n                    channel: '支付宝'\n                }),\n                new UTSJSONObject({\n                    id: 'tx017',\n                    name: '沃尔玛',\n                    date: 1739750400000,\n                    amount: -235.60,\n                    channel: '微信支付'\n                }),\n                new UTSJSONObject({\n                    id: 'tx018',\n                    name: '水费',\n                    date: 1739491200000,\n                    amount: -78.25,\n                    channel: '微信支付'\n                })\n            ];\n            this.localTransactionList = [...newTransactions];\n            // 按日期排序，新的在前\n            this.localTransactionList.sort((a = null, b = null) => { return b.date - a.date; });\n        },\n        // 加载更多交易数据\n        loadMore() {\n            // 如果没有更多数据或正在加载中，则不执行\n            if (!this.hasMore || this.isLoading)\n                return null;\n            // 模拟加载更多 - 实际应用中应该调用API\n            this.isLoading = true;\n            setTimeout(() => {\n                this.isLoading = false;\n                // 模拟没有更多数据\n                this.hasMore = false;\n            }, 500);\n        },\n        // 下拉刷新\n        refresh() {\n            this.refreshing = true;\n            setTimeout(() => {\n                // 重新获取数据\n                this.fetchData();\n                // 模拟刷新完成\n                this.refreshing = false;\n            }, 1000);\n        },\n        // 日期确认选择\n        onDateConfirm(e = null) {\n            const date = new Date(e);\n            this.currentMonth = `${date.getFullYear()}年${date.getMonth() + 1}月`;\n            this.showDatePicker = false;\n        },\n        // 格式化日期为MM月DD日\n        formatGroupDate(dateStr = null) {\n            const date = new Date(dateStr);\n            return `${date.getMonth() + 1}月${date.getDate()}日`;\n        },\n        // 格式化日期为YYYY-MM-DD\n        formatDate(timestamp = null) {\n            const date = new Date(timestamp);\n            const now = new Date();\n            const yesterday = new Date(now);\n            yesterday.setDate(now.getDate() - 1);\n            // 如果是今天，显示\"今天\"\n            if (date.toDateString() === now.toDateString()) {\n                return \"今天\";\n            }\n            // 如果是昨天，显示\"昨天\"\n            if (date.toDateString() === yesterday.toDateString()) {\n                return \"昨天\";\n            }\n            // 否则显示月日\n            return `${date.getMonth() + 1}月${date.getDate()}日`;\n        },\n        // 格式化时间为HH:mm\n        formatTime(timestamp = null) {\n            const date = new Date(timestamp);\n            return `${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`;\n        },\n        // 详细格式化日期\n        formatDetailDate(timestamp = null) {\n            const date = new Date(timestamp);\n            const year = date.getFullYear();\n            const month = String(date.getMonth() + 1).padStart(2, '0');\n            const day = String(date.getDate()).padStart(2, '0');\n            const hours = String(date.getHours()).padStart(2, '0');\n            const minutes = String(date.getMinutes()).padStart(2, '0');\n            const seconds = String(date.getSeconds()).padStart(2, '0');\n            return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n        },\n        // 获取当前月份标签\n        getCurrentMonthLabel() {\n            const now = new Date();\n            return `${now.getFullYear()}年${now.getMonth() + 1}月`;\n        },\n        // 解析月份标签为年月对象\n        parseMonthLabel(label = null) {\n            const parts = label.match(/(\\d+)年(\\d+)月/);\n            if (parts && parts.length === 3) {\n                return new UTSJSONObject({\n                    year: parseInt(parts[1]),\n                    month: parseInt(parts[2])\n                });\n            }\n            // 默认返回当前年月\n            const now = new Date();\n            return new UTSJSONObject({\n                year: now.getFullYear(),\n                month: now.getMonth() + 1\n            });\n        },\n        // 生成可用月份列表\n        generateAvailableMonths() {\n            const months = [];\n            const now = new Date();\n            const currentYear = now.getFullYear();\n            const currentMonth = now.getMonth() + 1;\n            // 添加最近12个月\n            for (let i = 0; i < 12; i++) {\n                let year = currentYear;\n                let month = currentMonth - i;\n                if (month <= 0) {\n                    month += 12;\n                    year -= 1;\n                }\n                months.push(`${year}年${month}月`);\n            }\n            this.availableMonths = months;\n        },\n        // 选择月份\n        selectMonth(month = null) {\n            this.currentMonth = month;\n            this.showMonthPicker = false;\n        },\n        // 设置筛选类型\n        setFilter(filterValue = null) {\n            this.currentFilter = filterValue;\n        },\n        // 显示交易详情\n        showTransactionDetail(transaction = null) {\n            this.selectedTransaction = transaction;\n            this.showDetail = true;\n        },\n        // 获取交易图标\n        getTransactionIcon(transaction = null) {\n            if (transaction.amount > 0) {\n                // 收入类型图标\n                if (transaction.name.includes('课程')) {\n                    return this.categoryIcons.income.course;\n                }\n                else if (transaction.name.includes('工资')) {\n                    return this.categoryIcons.income.salary;\n                }\n                else if (transaction.name.includes('退款')) {\n                    return this.categoryIcons.income.refund;\n                }\n                else if (transaction.name.includes('利息')) {\n                    return this.categoryIcons.income.interest;\n                }\n                return this.categoryIcons.income.default;\n            }\n            else {\n                // 支出类型图标\n                if (transaction.name.includes('提现')) {\n                    return this.categoryIcons.expense.withdraw;\n                }\n                else if (transaction.name.includes('转账')) {\n                    return this.categoryIcons.expense.transfer;\n                }\n                else if (transaction.name.includes('购物') || transaction.name.includes('购买')) {\n                    return this.categoryIcons.expense.shopping;\n                }\n                else if (transaction.name.includes('餐饮') || transaction.name.includes('肯德基')) {\n                    return this.categoryIcons.expense.dining;\n                }\n                return this.categoryIcons.expense.default;\n            }\n        },\n        // 选择最近几个月\n        selectRecentMonths(months = null) {\n            this.quickSelectType = `recent${months}`;\n            // 获取当前日期\n            const now = new Date();\n            const currentYear = now.getFullYear();\n            const currentMonth = now.getMonth() + 1;\n            // 计算开始月份\n            let startYear = currentYear;\n            let startMonth = currentMonth - months + 1;\n            if (startMonth <= 0) {\n                startMonth += 12;\n                startYear -= 1;\n            }\n            // 更新当前月份为开始月份\n            this.currentMonth = `${startYear}年${startMonth}月`;\n            this.showTimeIndexPanel = false;\n        },\n        // 选择年份\n        selectYear(year = null) {\n            this.currentYearIndex = year;\n        },\n        // 判断月份是否为当前选中\n        isMonthActive(month = null) {\n            const selectedMonth = this.parseMonthLabel(this.currentMonth);\n            return selectedMonth.year === this.currentYearIndex && selectedMonth.month === month;\n        },\n        // 通过索引选择月份\n        selectMonthByIndex(month = null) {\n            const selectedYear = this.currentYearIndex;\n            this.currentMonth = `${selectedYear}年${month}月`;\n            this.showTimeIndexPanel = false;\n        },\n        // 选择当前年份的所有月份\n        selectCurrentYear() {\n            const now = new Date();\n            this.currentYearIndex = now.getFullYear();\n            this.currentMonth = `${now.getFullYear()}年1月`;\n            this.quickSelectType = 'currentYear';\n            this.showTimeIndexPanel = false;\n        }\n    }\n});\n//# sourceMappingURL=E:/%E7%A0%94%E5%B8%88%E5%BD%95%E4%B8%8E%E5%85%B6%E4%BB%96%E4%BA%BA%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6/teacherDirectory/vue%E5%AE%9E%E7%8E%B0Lottie%E5%8A%A8%E7%94%BB%E4%BB%A3%E7%A0%81/pagesMine/bill/bill.vue?vue&type=script&lang.uts.js.map","references":["E:/研师录与其他人共享文件/teacherDirectory/vue实现Lottie动画代码/components/navigationTitleBar/header.vue.ts","E:/研师录与其他人共享文件/teacherDirectory/vue实现Lottie动画代码/router/Router.js","E:/研师录与其他人共享文件/teacherDirectory/vue实现Lottie动画代码/uni_modules/uni-datetime-picker/components/uni-datetime-picker/uni-datetime-picker.vue.ts","E:/研师录与其他人共享文件/teacherDirectory/vue实现Lottie动画代码/store/user/money/state.js"],"uniExtApis":["uni.__f__","uni.navigateBack"],"map":"{\"version\":3,\"file\":\"bill.vue?vue&type=script&lang.uts.js\",\"sourceRoot\":\"\",\"sources\":[\"bill.vue?vue&type=script&lang.uts\"],\"names\":[],\"mappings\":\"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\"}"}
