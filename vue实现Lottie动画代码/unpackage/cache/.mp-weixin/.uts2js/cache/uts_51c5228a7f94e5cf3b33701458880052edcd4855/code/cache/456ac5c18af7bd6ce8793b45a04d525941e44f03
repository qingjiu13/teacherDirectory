{"code":"import { __awaiter } from \"tslib\";\nimport { defineComponent as _defineComponent } from 'vue';\nimport { o as _o, p as _p, toDisplayString as _toDisplayString, t as _t, unref as _unref, n as _n, f as _f, resolveComponent as _resolveComponent, gei as _gei, sei as _sei, e as _e } from \"vue\";\nconst __BINDING_COMPONENTS__ = '{\"Header\":{\"name\":\"Header\",\"type\":\"setup\"},\"ChatMessageItem\":{\"name\":\"ChatMessageItem\",\"type\":\"setup\"},\"u--textarea\":{\"name\":\"_easycom_u__textarea\",\"type\":\"unknown\"}}';\nif (!Array) {\n    const _easycom_u__textarea_1 = _resolveComponent(\"u--textarea\");\n    (_easycom_u__textarea_1)();\n}\nimport _easycom_u__textarea from 'E:/研师录与其他人共享文件/teacherDirectory/vue实现Lottie动画代码/uni_modules/uview-plus/components/u--textarea/u--textarea.vue';\nif (!Math) {\n    (Header + ChatMessageItem + _easycom_u__textarea)();\n}\nimport { ref, computed, watch } from \"vue\";\nimport { onLoad, onShow, onUnload } from \"@dcloudio/uni-app\";\nimport ChatMessageItem from \"./components/chat-message-item/chat-message-item.vue\";\nimport UNI_APP from \"./env.js\";\nimport Header from \"@/components/navigationTitleBar/header.vue\";\nimport { getCurrentToken, getCurrentUserId } from \"@/store/user/JWT.js\";\nimport pollingManager from \"@/utils/pollingManager.js\";\nimport websocketManager from \"@/utils/websocketManager.js\";\nimport { toTimeText } from \"./common/date.js\";\n// --- 数据定义 ---\nconst ADMIN_ID = 1;\n// 添加轮询相关变量\nconst FIVE_MINUTES = 5 * 60 * 1000;\nexport default /*#__PURE__*/ _defineComponent({\n    __name: 'chat-box',\n    setup(__props) {\n        const chatId = ref(null);\n        const selfId = ref(null);\n        const chatTitle = ref(\"\");\n        const chatAvatar = ref(\"\");\n        const messages = ref([]);\n        const textInput = ref(\"\");\n        const scrollTop = ref(0);\n        const keyboardHeight = ref(0);\n        const statusBarHeight = ref(0);\n        const windowHeight = ref(0);\n        const navbarHeight = ref(44); // 添加导航栏高度，默认44px\n        // 客服ID\n        const pollingInterval = ref(null);\n        const lastMessageId = ref(0);\n        const isPolling = computed(() => { return pollingManager.getStatus().isPolling; });\n        // WebSocket 相关变量\n        const isSocketOpen = ref(false);\n        let socketTask = null;\n        // 计算消息列表高度\n        const messageListHeight = computed(() => {\n            return windowHeight.value - navbarHeight.value - 140 - keyboardHeight.value;\n        });\n        // --- 本地缓存相关 ---\n        function getCacheKey() {\n            return `chat_messages_${selfId.value}_${chatId.value}`;\n        }\n        function saveMessagesToCache() {\n            try {\n                const messagesToSave = messages.value.filter((msg) => { return msg.status === \"confirmed\" || msg.isLocal; });\n                const maxCacheSize = 100;\n                const messagesToCache = messagesToSave.slice(-maxCacheSize);\n                const cacheKey = getCacheKey();\n                uni.setStorageSync(cacheKey, messagesToCache);\n            }\n            catch (error) { }\n        }\n        function loadMessagesFromCache() {\n            const cacheKey = getCacheKey();\n            const cached = uni.getStorageSync(cacheKey) || [];\n            if (cached.length === 0 && Number(chatId.value) === 1) {\n                // 客服会话且无消息，插入欢迎语\n                messages.value.splice(0, messages.value.length, {\n                    id: \"welcome\",\n                    senderId: 1,\n                    receiverId: selfId.value,\n                    content: \"您好，我是小助手，有什么可以帮到您？\",\n                    messageType: 1,\n                    createdAt: new Date().toISOString(),\n                    isSelf: false,\n                    status: \"confirmed\",\n                    isLocal: false,\n                });\n            }\n            else {\n                messages.value.splice(0, messages.value.length, ...cached);\n            }\n        }\n        // --- 键盘事件处理 ---\n        const onInputFocus = (e = null) => {\n            // 键盘弹出时的处理\n            setTimeout(() => {\n                scrollToBottom();\n            }, 300);\n        };\n        const onInputBlur = () => {\n            // 键盘收起时的处理\n            keyboardHeight.value = 0;\n        };\n        // --- 键盘监听 ---\n        const initKeyboardListener = () => {\n            // 监听键盘高度变化\n            uni.onKeyboardHeightChange((res = null) => {\n                keyboardHeight.value = res.height || 0;\n                // 键盘弹出时滚动到底部\n                if (res.height > 0) {\n                    setTimeout(() => {\n                        scrollToBottom();\n                    }, 100);\n                }\n            });\n        };\n        // --- 生命周期 ---\n        onLoad((options = null) => { return __awaiter(this, void 0, void 0, function* () {\n            // 获取系统信息\n            const systemInfo = uni.getSystemInfoSync();\n            statusBarHeight.value = systemInfo.statusBarHeight || 0;\n            windowHeight.value = systemInfo.windowHeight;\n            // 初始化键盘监听\n            initKeyboardListener();\n            uni.__f__('log', 'at pagesChat/chat-box.vue:212', \"[调试] onLoad options:\", options);\n            // 校验 chatId 参数\n            if (!options.id) {\n                uni.__f__('error', 'at pagesChat/chat-box.vue:216', \"[调试] 错误：onLoad 未接收到 chatId 参数！\");\n                uni.showToast({ title: \"参数错误\", icon: \"none\" });\n                setTimeout(() => { return uni.navigateBack(); }, 1500);\n                return Promise.resolve(null);\n            }\n            chatId.value = options.id;\n            selfId.value = Number(getCurrentUserId() || 1);\n            chatTitle.value = options.title ? decodeURIComponent(options.title) : \"\";\n            chatAvatar.value =\n                options.avatar || \"/static/image/defaultAvatar/student-man.png\";\n            uni.__f__('log', 'at pagesChat/chat-box.vue:227', \"[调试] onLoad chatId:\", chatId.value, \"selfId:\", selfId.value, \"chatId类型:\", typeof chatId.value);\n            // 拉取历史消息后，如果 chatTitle 还是空，就自动从消息里找\n            if (!chatTitle.value) {\n                // 找到第一条对方发来的消息\n                const otherMsg = UTS.arrayFind(messages.value, (m) => { return m.senderId && m.senderId !== selfId.value && m.nickname; });\n                if (otherMsg && otherMsg.nickname) {\n                    chatTitle.value = otherMsg.nickname;\n                }\n            }\n            if (!chatTitle.value) {\n                chatTitle.value = \"聊天\";\n            }\n            // 先清空本地消息\n            messages.value.splice(0, messages.value.length);\n            // 检查网络连接和token\n            const token = getCurrentToken();\n            uni.__f__('log', 'at pagesChat/chat-box.vue:255', \"[调试] 页面加载，检查配置:\", new UTSJSONObject({\n                chatId: chatId.value,\n                chatIdType: typeof chatId.value,\n                selfId: selfId.value,\n                hasToken: !!token,\n                baseUrl: UNI_APP.BASE_URL,\n                wsUrl: UNI_APP.WS_URL,\n            }));\n            if (!token) {\n                uni.__f__('error', 'at pagesChat/chat-box.vue:265', \"[调试] 未找到token，无法建立连接\");\n                uni.showToast({ title: \"请先登录\", icon: \"none\" });\n                return Promise.resolve(null);\n            }\n            // 页面加载时读取缓存\n            loadMessagesFromCache();\n            uni.__f__('log', 'at pagesChat/chat-box.vue:272', \"[调试] onLoad 缓存消息:\", UTS.JSON.parse(UTS.JSON.stringify(messages.value)));\n            // 确保 chatId 有效后再加载历史消息\n            if (chatId.value) {\n                yield loadChatHistory();\n            }\n            else {\n                uni.__f__('error', 'at pagesChat/chat-box.vue:281', \"[调试] chatId 无效，跳过历史消息加载\");\n            }\n            // 设置当前页面为chat-box\n            pollingManager.setCurrentPage(\"chat-box\");\n            // 注册轮询回调\n            pollingManager.registerPollingCallback(\"chat-box\", checkNewMessages);\n            // 确保 chatId 有效后再连接 WebSocket\n            if (chatId.value) {\n                connectWebSocket();\n            }\n            else {\n                uni.__f__('error', 'at pagesChat/chat-box.vue:294', \"[调试] chatId 无效，跳过 WebSocket 连接\");\n            }\n        }); });\n        onShow(() => {\n            uni.__f__('log', 'at pagesChat/chat-box.vue:299', \"[调试] onShow - 页面显示\");\n            // 设置当前页面为聊天页面\n            pollingManager.setCurrentPage(\"chat-box\");\n            // 如果WebSocket断开，尝试重连\n            if (!isSocketOpen.value) {\n                uni.__f__('log', 'at pagesChat/chat-box.vue:305', \"[调试] onShow - WebSocket断开，尝试重连\");\n                setTimeout(() => {\n                    connectWebSocket();\n                }, 1000);\n            }\n        });\n        onUnload(() => {\n            uni.__f__('log', 'at pagesChat/chat-box.vue:313', \"[调试] onUnload - 页面卸载\");\n            // 注销轮询回调\n            pollingManager.unregisterPollingCallback(\"chat-box\");\n            // 关闭WebSocket连接\n            closeWebSocket();\n            // 清理缓存\n            saveMessagesToCache();\n        });\n        // --- API 调用 ---\n        function getCurrentChatInfo() {\n            // chatId为对方id\n            const id = Number(chatId.value);\n            // 由于无法直接导入chats，这里返回空对象\n            // 如果需要获取聊天信息，可以通过API调用或本地存储获取\n            return new UTSJSONObject({});\n        }\n        const loadChatHistory = () => { return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chatId.value)\n                    return Promise.resolve(null);\n                loadMessagesFromCache();\n                const token = getCurrentToken();\n                if (!token)\n                    return Promise.resolve(null);\n                // 只用 chatId 作为目标用户，后端自动识别当前用户\n                uni.__f__('log', 'at pagesChat/chat-box.vue:340', \"[调试] 拉取历史消息参数:\", new UTSJSONObject({ targetUserId: chatId.value }));\n                const response = yield uni.request({\n                    url: `${UNI_APP.BASE_URL}/yanshilu/chatMessage/history/${chatId.value}`,\n                    method: \"GET\",\n                    data: new UTSJSONObject({\n                        chatId: chatId.value,\n                    }),\n                    header: new UTSJSONObject({ Authorization: `Bearer ${token}` }),\n                });\n                let resData = response[1] ? response[1] : response;\n                if (resData &&\n                    resData.statusCode === 200 &&\n                    resData.data &&\n                    resData.data.code === 200) {\n                    const history_1 = resData.data.data || [];\n                    const historyMessages = history_1.map((msg = null) => { return (new UTSJSONObject({\n                        id: msg.id || msg.chatMessageId,\n                        chatMessageId: msg.chatMessageId,\n                        senderId: msg.sendId || msg.senderId,\n                        receiverId: msg.receiverId,\n                        content: msg.content,\n                        messageType: msg.type || msg.msgType,\n                        createdAt: msg.sendTime || msg.send_time,\n                        isSelf: (msg.sendId || msg.senderId) === selfId.value,\n                        status: \"confirmed\",\n                        isLocal: false,\n                        avatar: msg.avatar ||\n                            msg.senderPicture ||\n                            msg.headImage ||\n                            \"/static/image/defaultAvatar/student-man.png\",\n                        nickname: msg.nickname ||\n                            msg.senderName ||\n                            msg.nickName ||\n                            `用户${msg.senderId || msg.sendId}`,\n                    })); });\n                    const filtered = historyMessages.filter((m = null) => {\n                        return (m.senderId === selfId.value &&\n                            m.receiverId === Number(chatId.value)) ||\n                            (m.senderId === Number(chatId.value) && m.receiverId === selfId.value);\n                    });\n                    messages.value.splice(0, messages.value.length, ...filtered);\n                    saveMessagesToCache();\n                    scrollToBottom();\n                    // 拉取历史消息后，如果 chatTitle 还是空，就自动从消息里找\n                    if (!chatTitle.value) {\n                        const otherMsg = filtered.find((m = null) => { return m.senderId && m.senderId !== selfId.value && m.nickname; });\n                        if (otherMsg && otherMsg.nickname) {\n                            chatTitle.value = otherMsg.nickname;\n                        }\n                    }\n                    if (!chatTitle.value) {\n                        chatTitle.value = \"聊天\";\n                    }\n                }\n                else {\n                    uni.__f__('log', 'at pagesChat/chat-box.vue:401', \"[调试] loadChatHistory 未通过判断，resData:\", UTS.JSON.stringify(resData));\n                }\n            }\n            catch (e) { }\n        }); };\n        // 获取用户头像\n        const getAvatarForUser = (senderId = null, chatId = null) => {\n            if (senderId === selfId.value) {\n                return (uni.getStorageSync(\"userAvatar\") ||\n                    \"/static/image/defaultAvatar/student-man.png\");\n            }\n            else if (senderId === chatId) {\n                const chatInfo = getCurrentChatInfo();\n                return (chatInfo.headImage ||\n                    chatInfo.chatAvatar ||\n                    \"/static/image/defaultAvatar/student-man.png\");\n            }\n            return \"/static/image/defaultAvatar/student-man.png\";\n        };\n        // 2. 发送消息到 WebSocket\n        const sendSocketMessage = () => {\n            if (!isSocketOpen.value || !socketTask) {\n                connectWebSocket();\n                setTimeout(() => {\n                    if (isSocketOpen.value && socketTask)\n                        sendSocketMessage();\n                }, 2000);\n                return null;\n            }\n            if (!textInput.value.trim())\n                return null;\n            if (!chatId.value)\n                return null;\n            let fromUserId = selfId.value;\n            let toUserId = Number(chatId.value);\n            const messageId = `msg_${Date.now()}_${Math.random()\n                .toString(36)\n                .substr(2, 9)}`;\n            const content = textInput.value;\n            const localMsg = new UTSJSONObject({\n                id: messageId,\n                senderId: fromUserId,\n                receiverId: toUserId,\n                content,\n                messageType: 1,\n                createdAt: new Date().toISOString(),\n                isSelf: true,\n                status: \"sending\",\n                isLocal: true,\n            });\n            messages.value.push(localMsg);\n            scrollToBottom();\n            saveMessagesToCache();\n            textInput.value = \"\";\n            const messagePayload = new UTSJSONObject({\n                category: \"PRIVATE_CHAT\",\n                messageId,\n                timestamp: Date.now(),\n                payload: new UTSJSONObject({\n                    receiveUserId: toUserId,\n                    content,\n                    messageType: 1,\n                }),\n                metadata: new UTSJSONObject({}),\n            });\n            socketTask.send(new UTSJSONObject({\n                data: UTS.JSON.stringify(messagePayload),\n                success: () => {\n                    try {\n                        pollingManager.triggerPollingCallback &&\n                            pollingManager.triggerPollingCallback(\"chat-list-sessions\");\n                    }\n                    catch (e) {\n                        uni.__f__('error', 'at pagesChat/chat-box.vue:480', \"[调试] 触发会话列表轮询失败\", e);\n                    }\n                },\n                fail: (err = null) => {\n                    uni.showToast({ title: \"消息发送失败\", icon: \"none\" });\n                },\n            }));\n        };\n        // WebSocket 核心逻辑\n        function closeWebSocket() {\n            if (socketTask) {\n                try {\n                    socketTask.close();\n                }\n                catch (e) { }\n                socketTask = null;\n                isSocketOpen.value = false;\n                // 通知WebSocket管理器连接断开\n                websocketManager.setConnectionStatus(false);\n            }\n        }\n        const connectWebSocket = () => {\n            // 防重复连接：如果已连接则不再创建\n            if (socketTask && isSocketOpen.value) {\n                return null;\n            }\n            closeWebSocket();\n            const token = getCurrentToken() || \"\";\n            if (!token) {\n                uni.__f__('error', 'at pagesChat/chat-box.vue:511', \"聊天需要认证，但未找到token\");\n                uni.showToast({ title: \"请先登录\", icon: \"none\" });\n                // 没有token时通知WebSocket管理器连接断开\n                websocketManager.setConnectionStatus(false);\n                return null;\n            }\n            // 校验 chatId\n            if (!chatId.value) {\n                uni.__f__('error', 'at pagesChat/chat-box.vue:520', \"[调试] WebSocket连接失败：chatId 无效！\");\n                uni.showToast({ title: \"会话参数错误\", icon: \"none\" });\n                websocketManager.setConnectionStatus(false);\n                return null;\n            }\n            const conversationId = chatId.value;\n            const url = `${UNI_APP.WS_URL}/websocket/message?token=${encodeURIComponent(token)}&conversationId=${conversationId}`;\n            try {\n                socketTask = uni.connectSocket({\n                    url: url,\n                    success: () => { },\n                    fail: (err) => {\n                        websocketManager.setConnectionStatus(false);\n                    },\n                });\n                if (!socketTask) {\n                    websocketManager.setConnectionStatus(false);\n                    return null;\n                }\n                socketTask.onOpen(() => {\n                    isSocketOpen.value = true;\n                    // 通知WebSocket管理器连接成功\n                    websocketManager.setConnectionStatus(true, conversationId);\n                    // 发送初始连接消息\n                    const initMessage = new UTSJSONObject({\n                        category: \"CONNECTION\",\n                        messageId: \"init_\" + Date.now(),\n                        timestamp: Date.now(),\n                        payload: new UTSJSONObject({\n                            type: \"connect\",\n                            conversationId: conversationId,\n                        }),\n                    });\n                    try {\n                        socketTask.send(new UTSJSONObject({\n                            data: UTS.JSON.stringify(initMessage),\n                        }));\n                    }\n                    catch (error) { }\n                });\n                socketTask.onClose((e = null) => {\n                    isSocketOpen.value = false;\n                    socketTask = null;\n                    // 通知WebSocket管理器连接断开\n                    websocketManager.setConnectionStatus(false);\n                });\n                socketTask.onError((err = null) => {\n                    isSocketOpen.value = false;\n                    socketTask = null;\n                    // 通知WebSocket管理器连接断开\n                    websocketManager.setConnectionStatus(false);\n                });\n                socketTask.onMessage((res = null) => {\n                    var _a, _b;\n                    if (typeof res.data === \"string\" &&\n                        (res.data.trim().startsWith(\"{\") || res.data.trim().startsWith(\"[\"))) {\n                        try {\n                            const newMessage = UTS.JSON.parse(res.data);\n                            if (newMessage && typeof newMessage === \"object\") {\n                                // 处理连接确认消息\n                                if (newMessage.category === \"CONNECTION_ACK\") {\n                                    return null;\n                                }\n                                // 处理消息确认\n                                if (newMessage.category === \"MESSAGE_CONFIRM\") {\n                                    const messageId = (_a = newMessage.payload) === null || _a === void 0 ? null : _a.messageId;\n                                    if (messageId) {\n                                        // 更新本地消息状态为已确认\n                                        const msgIndex = messages.value.findIndex((m) => { return m.id === messageId; });\n                                        if (msgIndex !== -1) {\n                                            messages.value[msgIndex].status = \"confirmed\";\n                                            messages.value[msgIndex].isLocal = false; // 不再是本地消息\n                                            messages.value[msgIndex].chatMessageId =\n                                                newMessage.payload.messageId; // 保存服务器消息ID\n                                            saveMessagesToCache();\n                                        }\n                                    }\n                                    return null;\n                                }\n                                // 处理错误消息\n                                if (newMessage.category === \"MESSAGE_ERROR\") {\n                                    const messageId = newMessage.messageId;\n                                    if (messageId) {\n                                        const msgIndex = messages.value.findIndex((m) => { return m.id === messageId; });\n                                        if (msgIndex !== -1) {\n                                            messages.value[msgIndex].status = \"failed\";\n                                            saveMessagesToCache();\n                                        }\n                                    }\n                                    uni.showToast({\n                                        title: ((_b = newMessage.payload) === null || _b === void 0 ? null : _b.content) || \"消息发送失败\",\n                                        icon: \"none\",\n                                    });\n                                    return null;\n                                }\n                                // 处理私聊消息推送\n                                if (newMessage.category === \"PRIVATE_CHAT\") {\n                                    // 只处理属于当前会话的消息\n                                    const payload = newMessage.payload || new UTSJSONObject({});\n                                    if ((payload.senderId === selfId.value &&\n                                        payload.receiveUserId === Number(chatId.value)) ||\n                                        (payload.senderId === Number(chatId.value) &&\n                                            payload.receiveUserId === selfId.value)) {\n                                        const receivedMessage = new UTSJSONObject({\n                                            id: newMessage.messageId || `server_${Date.now()}`,\n                                            senderId: payload.senderId,\n                                            receiverId: payload.receiveUserId,\n                                            content: payload.content,\n                                            messageType: payload.messageType,\n                                            createdAt: payload.createdAt || new Date().toISOString(),\n                                            isSelf: payload.senderId === selfId.value,\n                                            status: \"received\",\n                                            isLocal: false,\n                                            chatMessageId: payload.messageId,\n                                        });\n                                        messages.value.push(receivedMessage);\n                                        scrollToBottom();\n                                        saveMessagesToCache();\n                                    }\n                                    return null;\n                                }\n                            }\n                            else {\n                            }\n                        }\n                        catch (error) { }\n                    }\n                    else {\n                    }\n                });\n            }\n            catch (error) {\n                websocketManager.setConnectionStatus(false);\n            }\n        };\n        // 轮询获取新消息 - 移除原有的轮询逻辑，使用轮询管理器\n        const startMessagePolling = () => {\n            // 这个方法现在由轮询管理器统一管理，不再需要手动调用\n        };\n        const stopMessagePolling = () => {\n            // 这个方法现在由轮询管理器统一管理，不再需要手动调用\n        };\n        // 检查新消息 - 保持原有逻辑，但由轮询管理器调用\n        const checkNewMessages = () => { return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chatId.value)\n                    return Promise.resolve(null);\n                const token = getCurrentToken();\n                if (!token)\n                    return Promise.resolve(null);\n                let fromUserId = selfId.value;\n                let toUserId = Number(chatId.value);\n                const response = yield new Promise((resolve, reject) => {\n                    uni.request({\n                        url: `${UNI_APP.BASE_URL}/message/private/newMessages`,\n                        method: \"GET\",\n                        data: new UTSJSONObject({\n                            fromUserId,\n                            toUserId,\n                            lastMessageId: lastMessageId.value,\n                            limit: 20,\n                            chatId: chatId.value,\n                        }),\n                        header: new UTSJSONObject({ Authorization: `Bearer ${token}` }),\n                        success: (res) => { return resolve(res); },\n                        fail: (err) => { return reject(err); },\n                    });\n                });\n                if (response.statusCode === 200 && response.data.code === 200) {\n                    const newMessages = response.data.data || [];\n                    newMessages.forEach((msg = null) => {\n                        const messageObj = new UTSJSONObject({\n                            id: `msg_${msg.chatMessageId}`,\n                            chatMessageId: msg.chatMessageId,\n                            senderId: msg.senderId,\n                            receiverId: msg.receiverId,\n                            content: msg.content,\n                            messageType: msg.msgType,\n                            createdAt: msg.sendTime,\n                            isSelf: msg.senderId === selfId.value,\n                            status: \"received\",\n                            isLocal: false,\n                        });\n                        // 只保留双方的消息\n                        if ((messageObj.senderId === fromUserId &&\n                            messageObj.receiverId === toUserId) ||\n                            (messageObj.senderId === toUserId &&\n                                messageObj.receiverId === fromUserId)) {\n                            const exists = UTS.arrayFind(messages.value, (m) => { return m.chatMessageId === msg.chatMessageId; });\n                            if (!exists) {\n                                messages.value.push(messageObj);\n                                lastMessageId.value = Math.max(lastMessageId.value, msg.chatMessageId);\n                            }\n                        }\n                    });\n                    scrollToBottom();\n                    saveMessagesToCache();\n                }\n            }\n            catch (error) { }\n        }); };\n        // --- 辅助函数 ---\n        const goBack = () => {\n            uni.navigateBack();\n        };\n        const handleMore = () => {\n            uni.showToast({\n                title: \"更多功能开发中\",\n                icon: \"none\",\n            });\n        };\n        const scrollToBottom = () => {\n            setTimeout(() => {\n                scrollTop.value = scrollTop.value + 9999;\n            }, 100);\n        };\n        const manualReconnect = () => {\n            uni.showToast({ title: \"正在重新连接...\", icon: \"loading\" });\n            connectWebSocket();\n        };\n        // 显示调试信息\n        const showDebugInfo = () => {\n            const debugInfo = new UTSJSONObject({\n                chatId: chatId.value,\n                selfId: selfId.value,\n                isSocketOpen: isSocketOpen.value,\n                isPolling: isPolling.value,\n                hasSocketTask: !!socketTask,\n                baseUrl: UNI_APP.BASE_URL,\n                wsUrl: UNI_APP.WS_URL,\n                hasToken: !!getCurrentToken(),\n            });\n            uni.showModal(new UTSJSONObject({\n                title: \"调试信息\",\n                content: UTS.JSON.stringify(debugInfo, null, 2),\n                showCancel: false,\n            }));\n        };\n        // 检查连接状态\n        const checkConnectionStatus = () => {\n            websocketManager.setConnectionStatus(isSocketOpen.value, chatId.value);\n        };\n        // 在消息渲染前加日志（setup末尾）\n        watch(messages, (val) => {\n            uni.__f__('log', 'at pagesChat/chat-box.vue:795', \"[调试] 消息 senderId/selfId 类型和值:\", val.map((m) => { return (new UTSJSONObject({\n                id: m.id,\n                senderId: m.senderId,\n                senderIdType: typeof m.senderId,\n                selfId: selfId.value,\n                selfIdType: typeof selfId.value,\n                content: m.content,\n            })); }));\n        });\n        const messageListWithTimeTips = computed(() => {\n            const result = [];\n            let lastTime = null;\n            messages.value.forEach((msg, idx) => {\n                const msgTime = new Date(msg.createdAt || msg.sendTime).getTime();\n                if (idx === 0 || (lastTime && msgTime - lastTime > FIVE_MINUTES)) {\n                    result.push({\n                        type: \"time-tip\",\n                        time: msgTime,\n                        id: `time_${msgTime}_${idx}`,\n                    });\n                }\n                result.push(Object.assign({ type: \"message\" }, msg));\n                lastTime = msgTime;\n            });\n            return result;\n        });\n        return (_ctx = null, _cache = null) => {\n            const __returned__ = _e(new UTSJSONObject({\n                a: _o(goBack),\n                b: _p(new UTSJSONObject({\n                    title: chatTitle.value,\n                    avatar: chatAvatar.value\n                })),\n                c: !isSocketOpen.value\n            }), !isSocketOpen.value ? new UTSJSONObject({\n                d: _t(isPolling.value ? \"轮询模式\" : \"连接已断开\"),\n                e: _t(isPolling.value ? \"每5秒检查新消息\" : \"无法实时接收消息\"),\n                f: _o(manualReconnect)\n            }) : new UTSJSONObject({}), new UTSJSONObject({\n                g: _f(messageListWithTimeTips.value, (item = null, k0 = null, i0 = null) => {\n                    return _e(new UTSJSONObject({\n                        a: item.type === 'time-tip'\n                    }), item.type === 'time-tip' ? new UTSJSONObject({\n                        b: _t(_unref(toTimeText)(item.time))\n                    }) : new UTSJSONObject({\n                        c: '787963f2-1' + '-' + i0,\n                        d: _p(new UTSJSONObject({\n                            message: item,\n                            ['is-self']: Number(item.senderId) === Number(selfId.value)\n                        })),\n                        e: _n(new UTSJSONObject({\n                            self: Number(item.senderId) === Number(selfId.value)\n                        }))\n                    }), new UTSJSONObject({\n                        f: item.id\n                    }));\n                }),\n                h: scrollTop.value,\n                i: messageListHeight.value + 'px',\n                j: _o(onInputFocus),\n                k: _o(onInputBlur),\n                l: _o(($event = null) => { return textInput.value = $event; }),\n                m: _p(new UTSJSONObject({\n                    placeholder: '\\u8BF7\\u8F93\\u5165\\u5185\\u5BB9',\n                    showConfirmBar: false,\n                    autoHeight: true,\n                    adjustPosition: false,\n                    border: 'surround',\n                    maxlength: 500,\n                    modelValue: textInput.value\n                })),\n                n: textInput.value.length > 0\n            }), textInput.value.length > 0 ? new UTSJSONObject({\n                o: _o(sendSocketMessage),\n                p: _o(showDebugInfo)\n            }) : new UTSJSONObject({\n                q: _o(handleMore),\n                r: _o(showDebugInfo)\n            }), new UTSJSONObject({\n                s: keyboardHeight.value + 'px',\n                t: _sei(_gei(_ctx, ''), 'view')\n            }));\n            return __returned__;\n        };\n    }\n});\n//# sourceMappingURL=E:/%E7%A0%94%E5%B8%88%E5%BD%95%E4%B8%8E%E5%85%B6%E4%BB%96%E4%BA%BA%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6/teacherDirectory/vue%E5%AE%9E%E7%8E%B0Lottie%E5%8A%A8%E7%94%BB%E4%BB%A3%E7%A0%81/pagesChat/chat-box.vue?vue&type=script&setup=true&lang.uts.js.map","references":["E:/HBuilderX/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts","E:/HBuilderX/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts","E:/研师录与其他人共享文件/teacherDirectory/vue实现Lottie动画代码/uni_modules/uview-plus/components/u--textarea/u--textarea.vue.ts","E:/HBuilderX/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts","E:/HBuilderX/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-uts-v1/node_modules/@dcloudio/uni-uts-v1/lib/tsconfig/types/dcloudio__uni-app/types/index.d.ts","E:/研师录与其他人共享文件/teacherDirectory/vue实现Lottie动画代码/pagesChat/components/chat-message-item/chat-message-item.vue.ts","E:/研师录与其他人共享文件/teacherDirectory/vue实现Lottie动画代码/pagesChat/env.js","E:/研师录与其他人共享文件/teacherDirectory/vue实现Lottie动画代码/components/navigationTitleBar/header.vue.ts","E:/研师录与其他人共享文件/teacherDirectory/vue实现Lottie动画代码/store/user/JWT.js","E:/研师录与其他人共享文件/teacherDirectory/vue实现Lottie动画代码/utils/pollingManager.js","E:/研师录与其他人共享文件/teacherDirectory/vue实现Lottie动画代码/utils/websocketManager.js","E:/研师录与其他人共享文件/teacherDirectory/vue实现Lottie动画代码/pagesChat/common/date.js"],"uniExtApis":["uni.setStorageSync","uni.getStorageSync","uni.onKeyboardHeightChange","uni.getSystemInfoSync","uni.__f__","uni.showToast","uni.navigateBack","uni.request","uni.connectSocket","uni.showModal"],"map":"{\"version\":3,\"file\":\"chat-box.vue?vue&type=script&setup=true&lang.uts.js\",\"sourceRoot\":\"\",\"sources\":[\"chat-box.vue?vue&type=script&setup=true&lang.uts\"],\"names\":[],\"mappings\":\"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\"}"}
