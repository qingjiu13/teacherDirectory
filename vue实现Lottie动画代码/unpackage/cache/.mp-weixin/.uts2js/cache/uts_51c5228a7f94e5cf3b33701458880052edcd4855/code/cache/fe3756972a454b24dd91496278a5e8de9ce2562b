{"code":"import { defineComponent } from \"vue\";\nimport { initVueI18n } from '@dcloudio/uni-i18n';\nimport i18nMessages from './i18n/index.js';\nconst t = initVueI18n(i18nMessages).t;\nimport { fixIosDateFormat } from './util';\n/**\n * DatetimePicker 时间选择器\n * @description 可以同时选择日期和时间的选择器\n * @tutorial https://ext.dcloud.net.cn/plugin?id=xxx\n * @property {String} type = [datetime | date | time] 显示模式\n * @property {Boolean} multiple = [true|false] 是否多选\n * @property {String|Number} value 默认值\n * @property {String|Number} start 起始日期或时间\n * @property {String|Number} end 起始日期或时间\n * @property {String} return-type = [timestamp | string]\n * @event {Function} change  选中发生变化触发\n */\nexport default defineComponent({\n    name: 'UniDatetimePicker',\n    data() {\n        return {\n            indicatorStyle: `height: 50px;`,\n            visible: false,\n            fixNvueBug: new UTSJSONObject({}),\n            dateShow: true,\n            timeShow: true,\n            title: '日期和时间',\n            // 输入框当前时间\n            time: '',\n            // 当前的年月日时分秒\n            year: 1920,\n            month: 0,\n            day: 0,\n            hour: 0,\n            minute: 0,\n            second: 0,\n            // 起始时间\n            startYear: 1920,\n            startMonth: 1,\n            startDay: 1,\n            startHour: 0,\n            startMinute: 0,\n            startSecond: 0,\n            // 结束时间\n            endYear: 2120,\n            endMonth: 12,\n            endDay: 31,\n            endHour: 23,\n            endMinute: 59,\n            endSecond: 59,\n        };\n    },\n    options: {\n        virtualHost: true\n    },\n    props: {\n        type: {\n            type: String,\n            default: 'datetime'\n        },\n        value: {\n            type: [String, Number],\n            default: ''\n        },\n        modelValue: {\n            type: [String, Number],\n            default: ''\n        },\n        start: {\n            type: [Number, String],\n            default: ''\n        },\n        end: {\n            type: [Number, String],\n            default: ''\n        },\n        returnType: {\n            type: String,\n            default: 'string'\n        },\n        disabled: {\n            type: [Boolean, String],\n            default: false\n        },\n        border: {\n            type: [Boolean, String],\n            default: true\n        },\n        hideSecond: {\n            type: [Boolean, String],\n            default: false\n        }\n    },\n    watch: {\n        modelValue: {\n            handler(newVal = null) {\n                if (newVal) {\n                    this.parseValue(fixIosDateFormat(newVal));\n                    this.initTime(false);\n                }\n                else {\n                    this.time = '';\n                    this.parseValue(Date.now());\n                }\n            },\n            immediate: true\n        },\n        type: {\n            handler(newValue = null) {\n                if (newValue === 'date') {\n                    this.dateShow = true;\n                    this.timeShow = false;\n                    this.title = '日期';\n                }\n                else if (newValue === 'time') {\n                    this.dateShow = false;\n                    this.timeShow = true;\n                    this.title = '时间';\n                }\n                else {\n                    this.dateShow = true;\n                    this.timeShow = true;\n                    this.title = '日期和时间';\n                }\n            },\n            immediate: true\n        },\n        start: {\n            handler(newVal = null) {\n                this.parseDatetimeRange(fixIosDateFormat(newVal), 'start');\n            },\n            immediate: true\n        },\n        end: {\n            handler(newVal = null) {\n                this.parseDatetimeRange(fixIosDateFormat(newVal), 'end');\n            },\n            immediate: true\n        },\n        // 月、日、时、分、秒可选范围变化后，检查当前值是否在范围内，不在则当前值重置为可选范围第一项\n        months(newVal = null) {\n            this.checkValue('month', this.month, newVal);\n        },\n        days(newVal = null) {\n            this.checkValue('day', this.day, newVal);\n        },\n        hours(newVal = null) {\n            this.checkValue('hour', this.hour, newVal);\n        },\n        minutes(newVal = null) {\n            this.checkValue('minute', this.minute, newVal);\n        },\n        seconds(newVal = null) {\n            this.checkValue('second', this.second, newVal);\n        }\n    },\n    computed: {\n        // 当前年、月、日、时、分、秒选择范围\n        years() {\n            return this.getCurrentRange('year');\n        },\n        months() {\n            return this.getCurrentRange('month');\n        },\n        days() {\n            return this.getCurrentRange('day');\n        },\n        hours() {\n            return this.getCurrentRange('hour');\n        },\n        minutes() {\n            return this.getCurrentRange('minute');\n        },\n        seconds() {\n            return this.getCurrentRange('second');\n        },\n        // picker 当前值数组\n        ymd() {\n            return [this.year - this.minYear, this.month - this.minMonth, this.day - this.minDay];\n        },\n        hms() {\n            return [this.hour - this.minHour, this.minute - this.minMinute, this.second - this.minSecond];\n        },\n        // 当前 date 是 start\n        currentDateIsStart() {\n            return this.year === this.startYear && this.month === this.startMonth && this.day === this.startDay;\n        },\n        // 当前 date 是 end\n        currentDateIsEnd() {\n            return this.year === this.endYear && this.month === this.endMonth && this.day === this.endDay;\n        },\n        // 当前年、月、日、时、分、秒的最小值和最大值\n        minYear() {\n            return this.startYear;\n        },\n        maxYear() {\n            return this.endYear;\n        },\n        minMonth() {\n            if (this.year === this.startYear) {\n                return this.startMonth;\n            }\n            else {\n                return 1;\n            }\n        },\n        maxMonth() {\n            if (this.year === this.endYear) {\n                return this.endMonth;\n            }\n            else {\n                return 12;\n            }\n        },\n        minDay() {\n            if (this.year === this.startYear && this.month === this.startMonth) {\n                return this.startDay;\n            }\n            else {\n                return 1;\n            }\n        },\n        maxDay() {\n            if (this.year === this.endYear && this.month === this.endMonth) {\n                return this.endDay;\n            }\n            else {\n                return this.daysInMonth(this.year, this.month);\n            }\n        },\n        minHour() {\n            if (this.type === 'datetime') {\n                if (this.currentDateIsStart) {\n                    return this.startHour;\n                }\n                else {\n                    return 0;\n                }\n            }\n            if (this.type === 'time') {\n                return this.startHour;\n            }\n        },\n        maxHour() {\n            if (this.type === 'datetime') {\n                if (this.currentDateIsEnd) {\n                    return this.endHour;\n                }\n                else {\n                    return 23;\n                }\n            }\n            if (this.type === 'time') {\n                return this.endHour;\n            }\n        },\n        minMinute() {\n            if (this.type === 'datetime') {\n                if (this.currentDateIsStart && this.hour === this.startHour) {\n                    return this.startMinute;\n                }\n                else {\n                    return 0;\n                }\n            }\n            if (this.type === 'time') {\n                if (this.hour === this.startHour) {\n                    return this.startMinute;\n                }\n                else {\n                    return 0;\n                }\n            }\n        },\n        maxMinute() {\n            if (this.type === 'datetime') {\n                if (this.currentDateIsEnd && this.hour === this.endHour) {\n                    return this.endMinute;\n                }\n                else {\n                    return 59;\n                }\n            }\n            if (this.type === 'time') {\n                if (this.hour === this.endHour) {\n                    return this.endMinute;\n                }\n                else {\n                    return 59;\n                }\n            }\n        },\n        minSecond() {\n            if (this.type === 'datetime') {\n                if (this.currentDateIsStart && this.hour === this.startHour && this.minute === this.startMinute) {\n                    return this.startSecond;\n                }\n                else {\n                    return 0;\n                }\n            }\n            if (this.type === 'time') {\n                if (this.hour === this.startHour && this.minute === this.startMinute) {\n                    return this.startSecond;\n                }\n                else {\n                    return 0;\n                }\n            }\n        },\n        maxSecond() {\n            if (this.type === 'datetime') {\n                if (this.currentDateIsEnd && this.hour === this.endHour && this.minute === this.endMinute) {\n                    return this.endSecond;\n                }\n                else {\n                    return 59;\n                }\n            }\n            if (this.type === 'time') {\n                if (this.hour === this.endHour && this.minute === this.endMinute) {\n                    return this.endSecond;\n                }\n                else {\n                    return 59;\n                }\n            }\n        },\n        /**\n         * for i18n\n         */\n        selectTimeText() {\n            return t(\"uni-datetime-picker.selectTime\");\n        },\n        okText() {\n            return t(\"uni-datetime-picker.ok\");\n        },\n        clearText() {\n            return t(\"uni-datetime-picker.clear\");\n        },\n        cancelText() {\n            return t(\"uni-datetime-picker.cancel\");\n        }\n    },\n    mounted() {\n    },\n    methods: {\n        /**\n         * @param {Object} item\n         * 小于 10 在前面加个 0\n         */\n        lessThanTen(item = null) {\n            return item < 10 ? '0' + item : item;\n        },\n        /**\n         * 解析时分秒字符串，例如：00:00:00\n         * @param {String} timeString\n         */\n        parseTimeType(timeString = null) {\n            if (timeString) {\n                let timeArr = timeString.split(':');\n                this.hour = Number(timeArr[0]);\n                this.minute = Number(timeArr[1]);\n                this.second = Number(timeArr[2]);\n            }\n        },\n        /**\n         * 解析选择器初始值，类型可以是字符串、时间戳，例如：2000-10-02、'08:30:00'、 1610695109000\n         * @param {String | Number} datetime\n         */\n        initPickerValue(datetime = null) {\n            let defaultValue = null;\n            if (datetime) {\n                defaultValue = this.compareValueWithStartAndEnd(datetime, this.start, this.end);\n            }\n            else {\n                defaultValue = Date.now();\n                defaultValue = this.compareValueWithStartAndEnd(defaultValue, this.start, this.end);\n            }\n            this.parseValue(defaultValue);\n        },\n        /**\n         * 初始值规则：\n         * - 用户设置初始值 value\n         * \t- 设置了起始时间 start、终止时间 end，并 start < value < end，初始值为 value， 否则初始值为 start\n         * \t- 只设置了起始时间 start，并 start < value，初始值为 value，否则初始值为 start\n         * \t- 只设置了终止时间 end，并 value < end，初始值为 value，否则初始值为 end\n         * \t- 无起始终止时间，则初始值为 value\n         * - 无初始值 value，则初始值为当前本地时间 Date.now()\n         * @param {Object} value\n         * @param {Object} dateBase\n         */\n        compareValueWithStartAndEnd(value = null, start = null, end = null) {\n            let winner = null;\n            value = this.superTimeStamp(value);\n            start = this.superTimeStamp(start);\n            end = this.superTimeStamp(end);\n            if (start && end) {\n                if (value < start) {\n                    winner = new Date(start);\n                }\n                else if (value > end) {\n                    winner = new Date(end);\n                }\n                else {\n                    winner = new Date(value);\n                }\n            }\n            else if (start && !end) {\n                winner = start <= value ? new Date(value) : new Date(start);\n            }\n            else if (!start && end) {\n                winner = value <= end ? new Date(value) : new Date(end);\n            }\n            else {\n                winner = new Date(value);\n            }\n            return winner;\n        },\n        /**\n         * 转换为可比较的时间戳，接受日期、时分秒、时间戳\n         * @param {Object} value\n         */\n        superTimeStamp(value = null) {\n            let dateBase = '';\n            if (this.type === 'time' && value && typeof value === 'string') {\n                const now = new Date();\n                const year = now.getFullYear();\n                const month = now.getMonth() + 1;\n                const day = now.getDate();\n                dateBase = year + '/' + month + '/' + day + ' ';\n            }\n            if (Number(value)) {\n                value = parseInt(value);\n                dateBase = 0;\n            }\n            return this.createTimeStamp(dateBase + value);\n        },\n        /**\n         * 解析默认值 value，字符串、时间戳\n         * @param {Object} defaultTime\n         */\n        parseValue(value = null) {\n            if (!value) {\n                return null;\n            }\n            if (this.type === 'time' && typeof value === \"string\") {\n                this.parseTimeType(value);\n            }\n            else {\n                let defaultDate = null;\n                defaultDate = new Date(value);\n                if (this.type !== 'time') {\n                    this.year = defaultDate.getFullYear();\n                    this.month = defaultDate.getMonth() + 1;\n                    this.day = defaultDate.getDate();\n                }\n                if (this.type !== 'date') {\n                    this.hour = defaultDate.getHours();\n                    this.minute = defaultDate.getMinutes();\n                    this.second = defaultDate.getSeconds();\n                }\n            }\n            if (this.hideSecond) {\n                this.second = 0;\n            }\n        },\n        /**\n         * 解析可选择时间范围 start、end，年月日字符串、时间戳\n         * @param {Object} defaultTime\n         */\n        parseDatetimeRange(point = null, pointType = null) {\n            // 时间为空，则重置为初始值\n            if (!point) {\n                if (pointType === 'start') {\n                    this.startYear = 1920;\n                    this.startMonth = 1;\n                    this.startDay = 1;\n                    this.startHour = 0;\n                    this.startMinute = 0;\n                    this.startSecond = 0;\n                }\n                if (pointType === 'end') {\n                    this.endYear = 2120;\n                    this.endMonth = 12;\n                    this.endDay = 31;\n                    this.endHour = 23;\n                    this.endMinute = 59;\n                    this.endSecond = 59;\n                }\n                return null;\n            }\n            if (this.type === 'time') {\n                const pointArr = point.split(':');\n                this[pointType + 'Hour'] = Number(pointArr[0]);\n                this[pointType + 'Minute'] = Number(pointArr[1]);\n                this[pointType + 'Second'] = Number(pointArr[2]);\n            }\n            else {\n                if (!point) {\n                    pointType === 'start' ? this.startYear = this.year - 60 : this.endYear = this.year + 60;\n                    return null;\n                }\n                if (Number(point)) {\n                    point = parseInt(point);\n                }\n                // datetime 的 end 没有时分秒, 则不限制\n                const hasTime = /[0-9]:[0-9]/;\n                if (this.type === 'datetime' && pointType === 'end' && typeof point === 'string' && !hasTime.test(point)) {\n                    point = point + ' 23:59:59';\n                }\n                const pointDate = new Date(point);\n                this[pointType + 'Year'] = pointDate.getFullYear();\n                this[pointType + 'Month'] = pointDate.getMonth() + 1;\n                this[pointType + 'Day'] = pointDate.getDate();\n                if (this.type === 'datetime') {\n                    this[pointType + 'Hour'] = pointDate.getHours();\n                    this[pointType + 'Minute'] = pointDate.getMinutes();\n                    this[pointType + 'Second'] = pointDate.getSeconds();\n                }\n            }\n        },\n        // 获取 年、月、日、时、分、秒 当前可选范围\n        getCurrentRange(value = null) {\n            const range = [];\n            for (let i = this['min' + this.capitalize(value)]; i <= this['max' + this.capitalize(value)]; i++) {\n                range.push(i);\n            }\n            return range;\n        },\n        // 字符串首字母大写\n        capitalize(str = null) {\n            return str.charAt(0).toUpperCase() + str.slice(1);\n        },\n        // 检查当前值是否在范围内，不在则当前值重置为可选范围第一项\n        checkValue(name = null, value = null, values = null) {\n            if (values.indexOf(value) === -1) {\n                this[name] = values[0];\n            }\n        },\n        // 每个月的实际天数\n        daysInMonth(year = null, month = null) {\n            return new Date(year, month, 0).getDate();\n        },\n        /**\n         * 生成时间戳\n         * @param {Object} time\n         */\n        createTimeStamp(time = null) {\n            if (!time)\n                return null;\n            if (typeof time === \"number\") {\n                return time;\n            }\n            else {\n                time = time.replace(/-/g, '/');\n                if (this.type === 'date') {\n                    time = time + ' ' + '00:00:00';\n                }\n                return Date.parse(time);\n            }\n        },\n        /**\n         * 生成日期或时间的字符串\n         */\n        createDomSting() {\n            const yymmdd = this.year +\n                '-' +\n                this.lessThanTen(this.month) +\n                '-' +\n                this.lessThanTen(this.day);\n            let hhmmss = this.lessThanTen(this.hour) +\n                ':' +\n                this.lessThanTen(this.minute);\n            if (!this.hideSecond) {\n                hhmmss = hhmmss + ':' + this.lessThanTen(this.second);\n            }\n            if (this.type === 'date') {\n                return yymmdd;\n            }\n            else if (this.type === 'time') {\n                return hhmmss;\n            }\n            else {\n                return yymmdd + ' ' + hhmmss;\n            }\n        },\n        /**\n         * 初始化返回值，并抛出 change 事件\n         */\n        initTime(emit = true) {\n            this.time = this.createDomSting();\n            if (!emit)\n                return null;\n            if (this.returnType === 'timestamp' && this.type !== 'time') {\n                this.$emit('change', this.createTimeStamp(this.time));\n                this.$emit('input', this.createTimeStamp(this.time));\n                this.$emit('update:modelValue', this.createTimeStamp(this.time));\n            }\n            else {\n                this.$emit('change', this.time);\n                this.$emit('input', this.time);\n                this.$emit('update:modelValue', this.time);\n            }\n        },\n        /**\n         * 用户选择日期或时间更新 data\n         * @param {Object} e\n         */\n        bindDateChange(e = null) {\n            const val = e.detail.value;\n            this.year = this.years[val[0]];\n            this.month = this.months[val[1]];\n            this.day = this.days[val[2]];\n        },\n        bindTimeChange(e = null) {\n            const val = e.detail.value;\n            this.hour = this.hours[val[0]];\n            this.minute = this.minutes[val[1]];\n            this.second = this.seconds[val[2]];\n        },\n        /**\n         * 初始化弹出层\n         */\n        initTimePicker() {\n            if (this.disabled)\n                return null;\n            const value = fixIosDateFormat(this.time);\n            this.initPickerValue(value);\n            this.visible = !this.visible;\n        },\n        /**\n         * 触发或关闭弹框\n         */\n        tiggerTimePicker(e = null) {\n            this.visible = !this.visible;\n        },\n        /**\n         * 用户点击“清空”按钮，清空当前值\n         */\n        clearTime() {\n            this.time = '';\n            this.$emit('change', this.time);\n            this.$emit('input', this.time);\n            this.$emit('update:modelValue', this.time);\n            this.tiggerTimePicker();\n        },\n        /**\n         * 用户点击“确定”按钮\n         */\n        setTime() {\n            this.initTime();\n            this.tiggerTimePicker();\n        }\n    }\n});\n//# sourceMappingURL=E:/%E7%A0%94%E5%B8%88%E5%BD%95%E4%B8%8E%E5%85%B6%E4%BB%96%E4%BA%BA%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6/teacherDirectory/vue%E5%AE%9E%E7%8E%B0Lottie%E5%8A%A8%E7%94%BB%E4%BB%A3%E7%A0%81/uni_modules/uni-datetime-picker/components/uni-datetime-picker/time-picker.vue?vue&type=script&lang.uts.js.map","references":["E:/研师录与其他人共享文件/teacherDirectory/vue实现Lottie动画代码/uni_modules/uni-datetime-picker/components/uni-datetime-picker/i18n/index.js","E:/研师录与其他人共享文件/teacherDirectory/vue实现Lottie动画代码/uni_modules/uni-datetime-picker/components/uni-datetime-picker/util.js"],"uniExtApis":[],"map":"{\"version\":3,\"file\":\"time-picker.vue?vue&type=script&lang.uts.js\",\"sourceRoot\":\"\",\"sources\":[\"time-picker.vue?vue&type=script&lang.uts\"],\"names\":[],\"mappings\":\"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\"}"}
