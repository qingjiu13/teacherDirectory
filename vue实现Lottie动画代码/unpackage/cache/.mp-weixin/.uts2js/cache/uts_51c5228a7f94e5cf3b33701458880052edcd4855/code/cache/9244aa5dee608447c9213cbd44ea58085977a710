{"code":"import { defineComponent } from \"vue\";\nlet dropdownInstances = [];\nexport default defineComponent({\n    name: \"ChoiceSelected\",\n    components: {},\n    data() {\n        return {\n            isShowChoice: false,\n            dropdownTop: 0,\n            dropdownLeft: 0,\n            dropdownWidth: 0,\n            displayContent: this.defaultText,\n            searchKeyword: this.defaultSearchValue || '',\n            searchTimer: null,\n            isFocused: false,\n            lastSelectedValue: null,\n            // 分页相关\n            pageSize: 10,\n            currentPage: 1,\n            isLoadingMore: false,\n            hasMoreItems: true,\n            // 滚动监听\n            pageScrollListener: null // 页面滚动监听器\n        };\n    },\n    props: {\n        choiceIndex: {\n            type: Number,\n            default: -1 // 默认-1表示未选择\n        },\n        choiceList: {\n            type: Array,\n            default: () => { return []; }\n        },\n        defaultText: {\n            type: String,\n            default: '请选择'\n        },\n        mode: {\n            type: String,\n            default: 'select',\n            validator: (value = null) => { return ['select', 'search'].includes(value); }\n        },\n        debounce: {\n            type: Number,\n            default: 300\n        },\n        searchPlaceholder: {\n            type: String,\n            default: '请输入关键词'\n        },\n        // 新增属性：组件类型，用于区分不同数据模式\n        componentType: {\n            type: String,\n            default: 'default',\n            validator: (value = null) => { return ['default', 'undergraduate', 'graduateSchool', 'graduateMajor'].includes(value); }\n        },\n        // 新增属性：父级选择的值，用于联动模式\n        parentValue: {\n            type: [String, Object, Number],\n            default: null\n        },\n        // 新增属性：是否属于联动模式\n        isLinkage: {\n            type: Boolean,\n            default: false\n        },\n        // 新增属性：是否自动关闭其他下拉框\n        autoCloseOthers: {\n            type: Boolean,\n            default: true\n        },\n        // 新增属性：是否启用分页加载功能\n        enablePagination: {\n            type: Boolean,\n            default: true\n        },\n        // 新增属性：默认搜索值，当有值时直接显示但保持搜索功能\n        defaultSearchValue: {\n            type: String,\n            default: ''\n        }\n    },\n    created() {\n        // 将当前实例添加到实例数组，便于全局管理\n        dropdownInstances.push(this);\n        // 注册全局触摸开始事件用于检测滚动\n        uni.$on('page-scroll', this.handlePageScroll);\n    },\n    beforeUnmount() {\n        // 解绑全局事件\n        uni.$off('page-scroll', this.handlePageScroll);\n        // 移除当前实例\n        const index = dropdownInstances.indexOf(this);\n        if (index > -1) {\n            dropdownInstances.splice(index, 1);\n        }\n        // 清除防抖定时器\n        if (this.searchTimer) {\n            clearTimeout(this.searchTimer);\n        }\n    },\n    computed: {\n        /**\n         * @description 获取当前页的选项列表\n         * @returns {Array} 分页后的选项列表\n         */\n        pagedChoiceList() {\n            if (!this.enablePagination) {\n                return this.choiceList;\n            }\n            const startIndex = 0;\n            const endIndex = this.currentPage * this.pageSize;\n            return this.choiceList.slice(startIndex, endIndex);\n        }\n    },\n    watch: {\n        choiceIndex(newVal = null) {\n            // 当choiceIndex变化时更新显示内容\n            if (newVal >= 0 && newVal < this.choiceList.length) {\n                const selectedItem = this.choiceList[newVal];\n                this.displayContent = typeof selectedItem === 'string' ? selectedItem : selectedItem.choiceItemContent;\n                // 保存上次选中的值\n                this.lastSelectedValue = selectedItem;\n                // 在搜索模式下，设置搜索关键词为选中项\n                if (this.mode === 'search') {\n                    this.searchKeyword = typeof selectedItem === 'string' ? selectedItem : selectedItem.choiceItemContent;\n                }\n                // 如果是联动模式的父级组件，触发联动事件\n                if (this.componentType === 'graduateSchool') {\n                    this.$emit('linkage-change', selectedItem);\n                }\n            }\n            else {\n                this.displayContent = this.defaultText;\n                this.lastSelectedValue = null;\n                if (this.mode === 'search') {\n                    this.searchKeyword = this.defaultSearchValue || '';\n                }\n                // 如果是联动模式的父级组件，触发联动事件（清空）\n                if (this.componentType === 'graduateSchool') {\n                    this.$emit('linkage-change', null);\n                }\n            }\n        },\n        defaultText(newVal = null) {\n            // 如果当前没有选择任何选项，更新默认文本\n            if (this.choiceIndex < 0 || this.choiceIndex >= this.choiceList.length) {\n                this.displayContent = newVal;\n            }\n        },\n        // 监听父级选择变化，适用于联动模式\n        parentValue(newVal = null) {\n            if (this.isLinkage && this.componentType === 'graduateMajor') {\n                // 父级值变化，清空当前选择\n                this.searchKeyword = this.defaultSearchValue || '';\n                this.displayContent = this.defaultText;\n                this.$emit('reset-selection');\n            }\n        },\n        // 监听选项列表变化，重新计算显示内容\n        choiceList() {\n            // 如果选项列表变化，且当前有选中项，更新显示内容\n            this.updateDisplayContent();\n        },\n        // 监听搜索关键词变化，重置分页\n        searchKeyword() {\n            this.resetPagination();\n        },\n        // 监听defaultSearchValue变化\n        defaultSearchValue(newVal = null) {\n            // 仅当没有选中项或搜索关键词为空时更新搜索关键词\n            if ((this.choiceIndex < 0 || this.choiceIndex >= this.choiceList.length) && !this.searchKeyword) {\n                this.searchKeyword = newVal || '';\n                // 如果有新的默认值，并且当前下拉列表已打开，则触发一次搜索\n                if (newVal && this.isShowChoice) {\n                    this.onSearchInput(new UTSJSONObject({}));\n                }\n            }\n        }\n    },\n    methods: {\n        /**\n         * @description 处理页面滚动事件\n         * 当页面滚动时关闭下拉框\n         */\n        handlePageScroll() {\n            if (this.isShowChoice) {\n                this.closeDropdown();\n            }\n        },\n        /**\n         * @description 重置分页状态\n         */\n        resetPagination() {\n            this.currentPage = 1;\n            this.isLoadingMore = false;\n            this.hasMoreItems = this.choiceList.length > this.pageSize;\n        },\n        /**\n         * @description 加载更多数据\n         */\n        loadMore() {\n            if (!this.hasMoreItems || this.isLoadingMore)\n                return null;\n            this.isLoadingMore = true;\n            // 模拟异步加载更多数据\n            setTimeout(() => {\n                this.currentPage++;\n                this.isLoadingMore = false;\n                // 更新是否还有更多数据的状态\n                this.hasMoreItems = this.choiceList.length > this.currentPage * this.pageSize;\n            }, 300);\n        },\n        /**\n         * @description 处理滚动到底部事件\n         */\n        onScrollToBottom() {\n            if (this.enablePagination) {\n                this.loadMore();\n            }\n        },\n        /**\n         * @description 查找选项在原始列表中的索引\n         * @param {*} item - 选项项\n         * @returns {Number} 原始索引位置\n         */\n        findOriginalIndex(item = null) {\n            if (typeof item === 'string') {\n                return this.choiceList.findIndex((originalItem = null) => {\n                    return typeof originalItem === 'string' && originalItem === item;\n                });\n            }\n            else if (item && item.choiceItemId) {\n                return this.choiceList.findIndex((originalItem = null) => {\n                    return originalItem && originalItem.choiceItemId && originalItem.choiceItemId === item.choiceItemId;\n                });\n            }\n            return -1;\n        },\n        /**\n         * @description 更新显示内容，在选项列表变化时调用\n         */\n        updateDisplayContent() {\n            if (this.choiceIndex >= 0 && this.choiceIndex < this.choiceList.length) {\n                const selectedItem = this.choiceList[this.choiceIndex];\n                this.displayContent = typeof selectedItem === 'string' ? selectedItem : selectedItem.choiceItemContent;\n            }\n            else {\n                this.displayContent = this.defaultText;\n            }\n        },\n        /**\n         * @description 处理选项点击事件，关闭下拉框并触发选择事件\n         * @param {Number} position - 选中项的索引位置\n         */\n        btnChoiceClick: function (position = null) {\n            var _this = this;\n            _this.isShowChoice = false;\n            const selectedItem = _this.pagedChoiceList[position];\n            // 在搜索模式下，我们需要找出在原始列表中的实际位置\n            if (_this.mode === 'search' && _this.searchKeyword) {\n                if (typeof selectedItem === 'string') {\n                    // 字符串项，直接查找原始列表中的匹配项\n                    const originalIndex = _this.choiceList.findIndex((item = null) => {\n                        return typeof item === 'string' && item === selectedItem;\n                    });\n                    if (originalIndex !== -1) {\n                        _this.$emit(\"onChoiceClick\", originalIndex, selectedItem);\n                        return null;\n                    }\n                }\n                else if (selectedItem && selectedItem.choiceItemId) {\n                    // 对象项，通过ID查找\n                    const originalIndex = _this.choiceList.findIndex((item = null) => {\n                        return item && item.choiceItemId && item.choiceItemId === selectedItem.choiceItemId;\n                    });\n                    if (originalIndex !== -1) {\n                        _this.$emit(\"onChoiceClick\", originalIndex, selectedItem);\n                        return null;\n                    }\n                }\n            }\n            // 对于普通模式或未找到匹配项，使用当前位置\n            _this.$emit(\"onChoiceClick\", position, selectedItem);\n        },\n        /**\n         * @description 切换下拉框的显示与隐藏状态\n         * @param {Event} event - 点击事件对象\n         */\n        btnShowHideClick: function (event = null) {\n            // 阻止事件冒泡\n            event.stopPropagation();\n            var _this = this;\n            if (_this.isShowChoice) {\n                _this.isShowChoice = false;\n            }\n            else {\n                // 关闭其他所有下拉框（如果启用了自动关闭）\n                if (this.autoCloseOthers) {\n                    this.closeOtherDropdowns();\n                }\n                // 重置分页状态\n                this.resetPagination();\n                // 使用uni.createSelectorQuery获取触发按钮的位置和尺寸\n                const query = uni.createSelectorQuery().in(this);\n                query.select('.drop-down-box, .drop-down-box-selected').boundingClientRect((data = null) => {\n                    if (data) {\n                        _this.dropdownTop = data.top + data.height;\n                        _this.dropdownLeft = data.left;\n                        _this.dropdownWidth = data.width;\n                        _this.isShowChoice = true;\n                        // 如果有默认搜索值并且当前没有搜索关键词，则立即触发一次搜索\n                        if (_this.defaultSearchValue && !_this.searchKeyword) {\n                            _this.searchKeyword = _this.defaultSearchValue;\n                            _this.onSearchInput(event);\n                        }\n                    }\n                }).exec();\n            }\n        },\n        /**\n         * @description 关闭其他下拉框，只保留当前实例的下拉框\n         */\n        closeOtherDropdowns() {\n            dropdownInstances.forEach(instance => {\n                if (instance !== this && instance.isShowChoice) {\n                    instance.isShowChoice = false;\n                }\n            });\n        },\n        /**\n         * @description 处理搜索输入事件，带防抖\n         * @param {Event} event - 输入事件对象\n         */\n        onSearchInput(event = null) {\n            const _this = this;\n            // 清除之前的定时器\n            if (_this.searchTimer) {\n                clearTimeout(_this.searchTimer);\n            }\n            // 设置防抖定时器\n            _this.searchTimer = setTimeout(() => {\n                uni.__f__('log', 'at pagesMine/components/combobox/combobox.vue:429', '发送搜索请求:', _this.searchKeyword);\n                // 触发搜索输入事件\n                _this.$emit('search-input', _this.searchKeyword);\n                // 确保下拉框处于打开状态\n                if (!_this.isShowChoice) {\n                    _this.btnShowHideClick(event);\n                }\n            }, _this.debounce);\n        },\n        /**\n         * @description 处理输入框聚焦事件\n         * @param {Event} event - 聚焦事件对象\n         */\n        onInputFocus(event = null) {\n            this.isFocused = true;\n            // 如果下拉框未显示，阻止下拉框被关闭\n            event.stopPropagation();\n            // 使用KeyboardWatcher的openWhenReady方法\n            if (!this.isShowChoice && this.$refs.keyboardWatcher) {\n                this.$refs.keyboardWatcher.openWhenReady(this);\n            }\n        },\n        /**\n         * @description 关闭当前下拉框\n         * @public 供外部调用\n         */\n        closeDropdown() {\n            if (this.isShowChoice) {\n                this.isShowChoice = false;\n            }\n        },\n        /**\n         * @description 重置组件状态\n         * @public 供外部调用\n         */\n        reset() {\n            this.searchKeyword = this.defaultSearchValue || '';\n            this.displayContent = this.defaultText;\n            this.isShowChoice = false;\n            this.lastSelectedValue = null;\n            this.resetPagination();\n            this.$emit('reset-selection');\n        },\n        /**\n         * @description 获取当前选中的值\n         * @returns {*} 当前选中的值\n         * @public 供外部调用\n         */\n        getSelectedValue() {\n            if (this.choiceIndex >= 0 && this.choiceIndex < this.choiceList.length) {\n                return this.choiceList[this.choiceIndex];\n            }\n            return null;\n        },\n        /**\n         * @description 公开方法，供KeyboardWatcher调用以打开下拉框\n         * @public\n         */\n        openDropdown() {\n            // 使用现有的按钮点击方法，但创建一个合成事件对象\n            const syntheticEvent = new UTSJSONObject({\n                stopPropagation: () => { }\n            });\n            this.btnShowHideClick(syntheticEvent);\n        }\n    }\n});\n//# sourceMappingURL=E:/%E7%A0%94%E5%B8%88%E5%BD%95%E4%B8%8E%E5%85%B6%E4%BB%96%E4%BA%BA%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6/teacherDirectory/vue%E5%AE%9E%E7%8E%B0Lottie%E5%8A%A8%E7%94%BB%E4%BB%A3%E7%A0%81/pagesMine/components/combobox/combobox.vue?vue&type=script&lang.uts.js.map","references":[],"uniExtApis":["uni.$on","uni.$off","uni.createSelectorQuery","uni.__f__"],"map":"{\"version\":3,\"file\":\"combobox.vue?vue&type=script&lang.uts.js\",\"sourceRoot\":\"\",\"sources\":[\"combobox.vue?vue&type=script&lang.uts\"],\"names\":[],\"mappings\":\"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\"}"}
