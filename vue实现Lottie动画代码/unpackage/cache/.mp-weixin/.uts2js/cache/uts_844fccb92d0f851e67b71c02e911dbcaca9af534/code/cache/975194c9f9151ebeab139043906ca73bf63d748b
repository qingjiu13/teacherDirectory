{"code":"import { defineComponent } from \"vue\";\nimport App from './App';\nimport http from './common/request';\nimport * as msgType from './common/messageType';\nimport * as enums from './common/enums';\nimport * as wsApi from './common/wssocket';\n// 直接引入UNI_APP，不从.env.js导入\nimport UNI_APP from './main.js';\n// 移除直接导入\n// import useChatStore from './store/chatStore.js'\n// import useFriendStore from './store/friendStore.js'\n// import useConfigStore from './store/configStore.js'\n// import useUserStore from './store/userStore.js'\nexport default defineComponent({\n    data() {\n        return {\n            isInit: false,\n            isExit: false,\n            audioTip: null,\n            reconnecting: false,\n            // store 引用会在created中初始化\n            chatStore: null,\n            friendStore: null,\n            configStore: null,\n            userStore: null,\n            groupStore: null\n        };\n    },\n    created() {\n        // 在created中初始化store引用\n        this.chatStore = this.$root.chatStore;\n        this.friendStore = this.$root.friendStore;\n        this.configStore = this.$root.configStore;\n        this.userStore = this.$root.userStore;\n        this.groupStore = this.$root.groupStore;\n        // 如果没有获取到store引用，尝试使用getChatStore等函数\n        if (!this.chatStore) {\n            try {\n                const _a = require('./main.js'), getChatStore = _a.getChatStore, getFriendStore = _a.getFriendStore, getConfigStore = _a.getConfigStore, getUserStore = _a.getUserStore, getGroupStore = _a.getGroupStore;\n                this.chatStore = getChatStore();\n                this.friendStore = getFriendStore();\n                this.configStore = getConfigStore();\n                this.userStore = getUserStore();\n                this.groupStore = getGroupStore();\n                uni.__f__('log', 'at pagesChat/App.vue:47', 'App.vue: 通过导入的函数获取到Store');\n            }\n            catch (error) {\n                uni.__f__('error', 'at pagesChat/App.vue:49', 'App.vue: 获取Store失败', error);\n            }\n        }\n        // 如果仍然无法获取，则从全局属性中获取\n        if (!this.chatStore && this.$) {\n            this.chatStore = this.$chatStore;\n            this.friendStore = this.$friendStore;\n            this.configStore = this.$configStore;\n            this.userStore = this.$userStore;\n            this.groupStore = this.$groupStore;\n            uni.__f__('log', 'at pagesChat/App.vue:60', 'App.vue: 从全局属性获取到Store');\n        }\n    },\n    methods: {\n        init() {\n            this.reconnecting = false;\n            this.isExit = false;\n            // 直接初始化模拟数据\n            this.initMockData();\n            this.isInit = true;\n        },\n        // 初始化模拟数据\n        initMockData() {\n            // 导入模拟数据\n            const _a = require('./common/mockData.js'), initMockChatData = _a.initMockChatData, getMockUserById = _a.getMockUserById, getMockGroupById = _a.getMockGroupById, getMockCurrentUser = _a.getMockCurrentUser;\n            // 初始化聊天数据\n            const chatData = initMockChatData();\n            this.chatStore.initChats(chatData);\n            // 初始化当前用户\n            const currentUser = getMockCurrentUser();\n            this.userStore.userInfo = currentUser;\n            uni.__f__('log', 'at pagesChat/App.vue:84', '已成功初始化模拟数据', chatData);\n        },\n        // 为外部组件提供 store 获取方法\n        getChatStore() {\n            return this.chatStore;\n        },\n        getFriendStore() {\n            return this.friendStore;\n        },\n        getConfigStore() {\n            return this.configStore;\n        },\n        getUserStore() {\n            return this.userStore;\n        },\n        getGroupStore() {\n            return this.groupStore;\n        },\n        initWebSocket() {\n            let loginInfo = uni.getStorageSync(\"loginInfo\");\n            wsApi.connect(UNI_APP.WS_URL, loginInfo.accessToken);\n            wsApi.onConnect(() => {\n                if (this.reconnecting) {\n                    // 重连成功\n                    this.onReconnectWs();\n                }\n                else {\n                    // 加载离线消息\n                    this.pullPrivateOfflineMessage(this.chatStore.privateMsgMaxId);\n                    this.pullGroupOfflineMessage(this.chatStore.groupMsgMaxId);\n                }\n            });\n            wsApi.onMessage((cmd = null, msgInfo = null) => {\n                if (cmd == 2) {\n                    // 异地登录，强制下线\n                    uni.showModal(new UTSJSONObject({\n                        content: '您已在其他地方登录，将被强制下线',\n                        showCancel: false,\n                    }));\n                    this.exit();\n                }\n                else if (cmd == 3) {\n                    // 私聊消息\n                    this.handlePrivateMessage(msgInfo);\n                }\n                else if (cmd == 4) {\n                    // 群聊消息\n                    this.handleGroupMessage(msgInfo);\n                }\n                else if (cmd == 5) {\n                    // 系统消息\n                    this.handleSystemMessage(msgInfo);\n                }\n            });\n            wsApi.onClose((res = null) => {\n                uni.__f__('log', 'at pagesChat/App.vue:136', \"ws断开\", res);\n                // 重新连接\n                this.reconnectWs();\n            });\n        },\n        loadStore() {\n            return this.userStore.loadUser().then(() => {\n                const promises = [];\n                promises.push(this.friendStore.loadFriend());\n                // promises.push(this.groupStore.loadGroup());\n                promises.push(this.chatStore.loadChat());\n                promises.push(this.configStore.loadConfig());\n                return Promise.all(promises);\n            });\n        },\n        unloadStore() {\n            this.friendStore.clear();\n            // this.groupStore.clear();\n            this.chatStore.clear();\n            this.configStore.clear();\n            this.userStore.clear();\n        },\n        pullPrivateOfflineMessage(minId = null) {\n            this.chatStore.setLoadingPrivateMsg(true);\n            http(new UTSJSONObject({\n                url: \"/message/private/pullOfflineMessage?minId=\" + minId,\n                method: 'GET'\n            })).catch(() => {\n                this.chatStore.setLoadingPrivateMsg(false);\n            });\n        },\n        pullGroupOfflineMessage(minId = null) {\n            this.chatStore.setLoadingGroupMsg(true);\n            http(new UTSJSONObject({\n                url: \"/message/group/pullOfflineMessage?minId=\" + minId,\n                method: 'GET'\n            })).catch(() => {\n                this.chatStore.setLoadingGroupMsg(false);\n            });\n        },\n        handlePrivateMessage(msg = null) {\n            // 标记这条消息是不是自己发的\n            msg.selfSend = msg.sendId == this.userStore.userInfo.id;\n            // 好友id\n            let friendId = msg.selfSend ? msg.recvId : msg.sendId;\n            // 会话信息\n            let chatInfo = new UTSJSONObject({\n                type: 'PRIVATE',\n                targetId: friendId\n            }\n            // 消息加载标志\n            );\n            // 消息加载标志\n            if (msg.type == enums.MESSAGE_TYPE.LOADING) {\n                this.chatStore.setLoadingPrivateMsg(UTS.JSON.parse(msg.content));\n                return null;\n            }\n            // 消息已读处理，清空已读数量\n            if (msg.type == enums.MESSAGE_TYPE.READED) {\n                this.chatStore.resetUnreadCount(chatInfo);\n                return null;\n            }\n            // 消息回执处理,改消息状态为已读\n            if (msg.type == enums.MESSAGE_TYPE.RECEIPT) {\n                this.chatStore.readedMessage(new UTSJSONObject({\n                    friendId: msg.sendId\n                }));\n                return null;\n            }\n            // 消息撤回\n            if (msg.type == enums.MESSAGE_TYPE.RECALL) {\n                this.chatStore.recallMessage(msg, chatInfo);\n                return null;\n            }\n            // 新增好友\n            if (msg.type == enums.MESSAGE_TYPE.FRIEND_NEW) {\n                this.friendStore.addFriend(UTS.JSON.parse(msg.content));\n                return null;\n            }\n            // 删除好友\n            if (msg.type == enums.MESSAGE_TYPE.FRIEND_DEL) {\n                this.friendStore.removeFriend(friendId);\n                return null;\n            }\n            // 消息插入\n            let friend = this.loadFriendInfo(friendId);\n            this.insertPrivateMessage(friend, msg);\n        },\n        insertPrivateMessage(friend = null, msg = null) {\n            // 单人视频信令\n            if (msgType.isRtcPrivate(msg.type)) {\n                // 小程序不支持音视频\n                return null;\n                // 被呼叫，弹出视频页面\n                let delayTime = 100;\n                if (msg.type == enums.MESSAGE_TYPE.RTC_CALL_VOICE ||\n                    msg.type == enums.MESSAGE_TYPE.RTC_CALL_VIDEO) {\n                    let mode = msg.type == enums.MESSAGE_TYPE.RTC_CALL_VIDEO ? \"video\" : \"voice\";\n                    let pages = getCurrentPages();\n                    let curPage = pages[pages.length - 1].route;\n                    if (curPage != \"pages/chat/chat-private-video\") {\n                        const friendInfo = encodeURIComponent(UTS.JSON.stringify(friend));\n                        uni.navigateTo({\n                            url: `/pages/chat/chat-private-video?mode=${mode}&friend=${friendInfo}&isHost=false`\n                        });\n                        delayTime = 500;\n                    }\n                }\n                setTimeout(() => {\n                    uni.$emit('WS_RTC_PRIVATE', msg);\n                }, delayTime);\n                return null;\n            }\n            // 插入消息\n            if (msgType.isNormal(msg.type) || msgType.isTip(msg.type) || msgType.isAction(msg.type)) {\n                let chatInfo = new UTSJSONObject({\n                    type: 'PRIVATE',\n                    targetId: friend.id,\n                    showName: friend.nickName,\n                    headImage: friend.headImage\n                });\n                // 打开会话\n                this.chatStore.openChat(chatInfo);\n                // 插入消息\n                this.chatStore.insertMessage(msg, chatInfo);\n                // 播放提示音\n                this.playAudioTip();\n            }\n        },\n        handleGroupMessage(msg = null) {\n            // 标记这条消息是不是自己发的\n            msg.selfSend = msg.sendId == this.userStore.userInfo.id;\n            let chatInfo = new UTSJSONObject({\n                type: 'GROUP',\n                targetId: msg.groupId\n            }\n            // 消息加载标志\n            );\n            // 消息加载标志\n            if (msg.type == enums.MESSAGE_TYPE.LOADING) {\n                this.chatStore.setLoadingGroupMsg(UTS.JSON.parse(msg.content));\n                return null;\n            }\n            // 消息已读处理\n            if (msg.type == enums.MESSAGE_TYPE.READED) {\n                // 我已读对方的消息，清空已读数量\n                this.chatStore.resetUnreadCount(chatInfo);\n                return null;\n            }\n            // 消息回执处理\n            if (msg.type == enums.MESSAGE_TYPE.RECEIPT) {\n                // 更新消息已读人数\n                let msgInfo = new UTSJSONObject({\n                    id: msg.id,\n                    groupId: msg.groupId,\n                    readedCount: msg.readedCount,\n                    receiptOk: msg.receiptOk\n                });\n                this.chatStore.updateMessage(msgInfo, chatInfo);\n                return null;\n            }\n            // 消息撤回\n            if (msg.type == enums.MESSAGE_TYPE.RECALL) {\n                this.chatStore.recallMessage(msg, chatInfo);\n                return null;\n            }\n            // 新增群\n            if (msg.type == enums.MESSAGE_TYPE.GROUP_NEW) {\n                this.groupStore.addGroup(UTS.JSON.parse(msg.content));\n                return null;\n            }\n            // 删除群\n            if (msg.type == enums.MESSAGE_TYPE.GROUP_DEL) {\n                this.groupStore.removeGroup(msg.groupId);\n                return null;\n            }\n            // 插入消息\n            let group = this.loadGroupInfo(msg.groupId);\n            this.insertGroupMessage(group, msg);\n        },\n        handleSystemMessage(msg = null) {\n            if (msg.type == enums.MESSAGE_TYPE.USER_BANNED) {\n                // 用户被封禁\n                wsApi.close(3099);\n                uni.showModal(new UTSJSONObject({\n                    content: '您的账号已被管理员封禁，原因:' + msg.content,\n                    showCancel: false,\n                }));\n                this.exit();\n            }\n        },\n        insertGroupMessage(group = null, msg = null) {\n            // 群视频信令\n            if (msgType.isRtcGroup(msg.type)) {\n                // 小程序不支持音视频\n                return null;\n                // 被呼叫，弹出视频页面\n                let delayTime = 100;\n                if (msg.type == enums.MESSAGE_TYPE.RTC_GROUP_SETUP) {\n                    let pages = getCurrentPages();\n                    let curPage = pages[pages.length - 1].route;\n                    if (curPage != \"pages/chat/chat-group-video\") {\n                        const userInfos = encodeURIComponent(msg.content);\n                        const inviterId = msg.sendId;\n                        const groupId = msg.groupId;\n                        uni.navigateTo({\n                            url: `/pages/chat/chat-group-video?groupId=${groupId}&isHost=false\n\t\t\t\t\t\t\t\t\t&inviterId=${inviterId}&userInfos=${userInfos}`\n                        });\n                        delayTime = 500;\n                    }\n                }\n                // 消息转发到chat-group-video页面进行处理\n                setTimeout(() => {\n                    uni.$emit('WS_RTC_GROUP', msg);\n                }, delayTime);\n                return null;\n            }\n            // 插入消息\n            if (msgType.isNormal(msg.type) || msgType.isTip(msg.type) || msgType.isAction(msg.type)) {\n                let chatInfo = new UTSJSONObject({\n                    type: 'GROUP',\n                    targetId: group.id,\n                    showName: group.showGroupName,\n                    headImage: group.headImageThumb\n                });\n                // 打开会话\n                this.chatStore.openChat(chatInfo);\n                // 插入消息\n                this.chatStore.insertMessage(msg, chatInfo);\n                // 播放提示音\n                this.playAudioTip();\n            }\n        },\n        loadFriendInfo(id = null, callback = null) {\n            let friend = this.friendStore.findFriend(id);\n            if (!friend) {\n                uni.__f__('log', 'at pagesChat/App.vue:378', \"未知用户:\", id);\n                friend = {\n                    id: id,\n                    showNickName: \"未知用户\",\n                    headImage: \"\"\n                };\n            }\n            return friend;\n        },\n        loadGroupInfo(id = null) {\n            let group = this.groupStore.findGroup(id);\n            if (!group) {\n                group = {\n                    id: id,\n                    showGroupName: \"未知群聊\",\n                    headImageThumb: \"\"\n                };\n            }\n            return group;\n        },\n        exit() {\n            uni.__f__('log', 'at pagesChat/App.vue:399', \"exit\");\n            this.isExit = true;\n            wsApi.close(3099);\n            uni.removeStorageSync(\"loginInfo\");\n            this.unloadStore();\n        },\n        playAudioTip() {\n            // 音频播放无法成功\n            // this.audioTip = uni.createInnerAudioContext();\n            // this.audioTip.src =  \"/static/audio/tip.wav\";\n            // this.audioTip.play();\n        },\n        refreshToken(loginInfo = null) {\n            return new Promise((resolve, reject) => {\n                if (!loginInfo || !loginInfo.refreshToken) {\n                    reject();\n                    return null;\n                }\n                http(new UTSJSONObject({\n                    url: '/refreshToken',\n                    method: 'PUT',\n                    header: new UTSJSONObject({\n                        refreshToken: loginInfo.refreshToken\n                    })\n                })).then((newLoginInfo = null) => {\n                    uni.setStorageSync(\"loginInfo\", newLoginInfo);\n                    resolve();\n                }).catch((e = null) => {\n                    reject(e);\n                });\n            });\n        },\n        reconnectWs() {\n            // 已退出则不再重连\n            if (this.isExit) {\n                return null;\n            }\n            // 记录标志\n            this.reconnecting = true;\n            // 重新加载一次个人信息，目的是为了保证网络已经正常且token有效\n            this.userStore.loadUser().then((userInfo = null) => {\n                uni.showToast({\n                    title: '连接已断开，尝试重新连接...',\n                    icon: 'none'\n                });\n                // 重新连接\n                let loginInfo = uni.getStorageSync(\"loginInfo\");\n                wsApi.reconnect(UNI_APP.WS_URL, loginInfo.accessToken);\n            }).catch(() => {\n                // 5s后重试\n                setTimeout(() => {\n                    this.reconnectWs();\n                }, 5000);\n            });\n        },\n        onReconnectWs() {\n            this.reconnecting = false;\n            // 重新加载好友和群聊\n            const promises = [];\n            promises.push(this.friendStore.loadFriend());\n            // promises.push(this.groupStore.loadGroup());\n            Promise.all(promises).then(() => {\n                uni.showToast({\n                    title: \"已重新连接\",\n                    icon: 'none'\n                });\n                // 加载离线消息\n                this.pullPrivateOfflineMessage(this.chatStore.privateMsgMaxId);\n                this.pullGroupOfflineMessage(this.chatStore.groupMsgMaxId);\n            }).catch((e = null) => {\n                uni.__f__('log', 'at pagesChat/App.vue:469', e);\n                this.exit();\n            });\n        },\n        closeSplashscreen(delay = null) {\n        },\n        initMockDataNow() {\n            uni.__f__('log', 'at pagesChat/App.vue:482', 'App.vue: 强制初始化模拟数据');\n            try {\n                // 导入模拟数据\n                const _a = require('./common/mockData.js'), initMockChatData = _a.initMockChatData, getMockUserById = _a.getMockUserById, getMockGroupById = _a.getMockGroupById, getMockCurrentUser = _a.getMockCurrentUser, mockChats = _a.mockChats;\n                // 确保chatStore可用\n                if (!this.chatStore) {\n                    uni.__f__('error', 'at pagesChat/App.vue:489', 'App.vue: chatStore不可用，无法初始化模拟数据');\n                    return null;\n                }\n                // 直接使用mockChats初始化\n                this.chatStore.initChats(new UTSJSONObject({\n                    chats: UTS.JSON.parse(UTS.JSON.stringify(mockChats)),\n                    privateMsgMaxId: 5000,\n                    groupMsgMaxId: 6000\n                }));\n                // 初始化当前用户\n                if (this.userStore) {\n                    this.userStore.userInfo = getMockCurrentUser();\n                }\n                this.isInit = true;\n                uni.__f__('log', 'at pagesChat/App.vue:506', 'App.vue: 模拟数据初始化成功，共', mockChats.length, '条会话');\n            }\n            catch (error) {\n                uni.__f__('error', 'at pagesChat/App.vue:508', 'App.vue: 初始化模拟数据失败', error);\n            }\n        }\n    },\n    onLaunch() {\n        // 直接初始化模拟数据\n        setTimeout(() => {\n            // 强制初始化\n            this.initMockDataNow();\n            // 跳转到聊天页\n            uni.switchTab({\n                url: \"/pages/chat/chat\"\n            });\n        }, 100);\n    }\n});\n//# sourceMappingURL=/Users/ghw/Documents/project/teacherDirectory/vue%E5%AE%9E%E7%8E%B0Lottie%E5%8A%A8%E7%94%BB%E4%BB%A3%E7%A0%81/pagesChat/App.vue?vue&type=script&lang.uts.js.map","references":["/Users/ghw/Documents/project/teacherDirectory/vue实现Lottie动画代码/pagesChat/App.vue.ts","/Users/ghw/Documents/project/teacherDirectory/vue实现Lottie动画代码/pagesChat/common/request.js","/Users/ghw/Documents/project/teacherDirectory/vue实现Lottie动画代码/pagesChat/common/messageType.js","/Users/ghw/Documents/project/teacherDirectory/vue实现Lottie动画代码/pagesChat/common/enums.js","/Users/ghw/Documents/project/teacherDirectory/vue实现Lottie动画代码/pagesChat/common/wssocket.js","/Users/ghw/Documents/project/teacherDirectory/vue实现Lottie动画代码/pagesChat/main.js","/Users/ghw/Documents/project/teacherDirectory/vue实现Lottie动画代码/pagesChat/main.js","/Users/ghw/Documents/project/teacherDirectory/vue实现Lottie动画代码/pagesChat/common/mockData.js","/Users/ghw/Documents/project/teacherDirectory/vue实现Lottie动画代码/pagesChat/common/mockData.js"],"uniExtApis":["uni.__f__","uni.getStorageSync","uni.showModal","uni.navigateTo","uni.$emit","uni.removeStorageSync","uni.setStorageSync","uni.showToast","uni.switchTab"],"map":"{\"version\":3,\"file\":\"App.vue?vue&type=script&lang.uts.js\",\"sourceRoot\":\"\",\"sources\":[\"App.vue?vue&type=script&lang.uts\"],\"names\":[],\"mappings\":\"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\"}"}
