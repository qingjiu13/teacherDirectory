{"version":3,"names":["_sfc_main","common_vendor","defineComponent","name","props","options","type","Array","default","validator","value","arguments","length","undefined","every","item","label","String","Number","Boolean","Object","placeholder","searchable","searchPlaceholder","emptyText","autoClose","multiple","maxSelections","grouped","displayFormatter","Function","collectFullData","data","isOpen","searchText","dropdownWidth","selectedValue","selectedItems","isArray","_toConsumableArray2","tempSelection","computed","displayValue","map","join","filteredOptions","toLowerCase","filter","includes","tags","some","tag","groupedOptions","reduce","groups","groupName","group","push","showEmpty","keys","watch","newVal","mounted","_this","document","addEventListener","closeDropdown","$nextTick","query","index","createSelectorQuery","in","select","boundingClientRect","concat","width","exec","beforeDestroy","removeEventListener","methods","toggleDropdown","isItemSelected","_this2","selected","compareItems","item1","item2","_typeof2","selectItem","handleMultipleSelection","handleSingleSelection","emitChanges","_this3","itemValue","findIndex","splice","showToast","title","icon","confirmSelection","cancelSelection","_this4","values","$emit","handleSearch","getSelectedData","getSearchCondition","getSelectedRawData","_this5","UTS","arrayFind","opt","getPayloadData","_this6","transformItemForBackend","UTSJSONObject","assign","id","metadata","reset","clearSearch","wx","createComponent","Component"],"sources":["combobox.uvue","RToveWFuc2hpbHXph43mlrDmnaXov4cv5YmN56uveWFuc2hpbHVfMS9jb21wb25lbnRzL2NvbWJvYm94L2NvbWJvYm94LnV2dWU"],"sourcesContent":["<template>\r\n  <view class=\"dropdown-container\">\r\n    <!-- 下拉框触发区域 -->\r\n    <view class=\"dropdown-trigger\" @click=\"toggleDropdown\">\r\n      <text class=\"selected-value\">{{ displayValue || placeholder }}</text>\r\n      <text class=\"dropdown-icon\">{{ isOpen ? '▲' : '▼' }}</text>\r\n    </view>\r\n    \r\n    <!-- 下拉菜单 -->\r\n    <view \r\n      class=\"dropdown-menu\" \r\n      v-if=\"isOpen\" \r\n      :style=\"{ width: dropdownWidth }\"\r\n      @click.stop\r\n    >\r\n      <!-- 搜索框 -->\r\n      <view class=\"dropdown-search\" v-if=\"searchable\">\r\n        <input \r\n          type=\"text\" \r\n          v-model=\"searchText\" \r\n          :placeholder=\"searchPlaceholder\"\r\n          @input=\"handleSearch\"\r\n          class=\"search-input\"\r\n        />\r\n      </view>\r\n      \r\n      <!-- 下拉选项 -->\r\n      <scroll-view scroll-y=\"true\" class=\"dropdown-options\">\r\n        <!-- 分组选项 -->\r\n        <template v-if=\"grouped\">\r\n          <view v-for=\"(group, groupName) in groupedOptions\" :key=\"groupName\">\r\n            <view class=\"dropdown-group\" v-if=\"groupName\">{{ groupName }}</view>\r\n            <view \r\n              v-for=\"(item, index) in group\" \r\n              :key=\"index\"\r\n              class=\"dropdown-item\"\r\n              @click=\"selectItem(item)\"\r\n            >\r\n              <view class=\"item-content\">\r\n                <text v-if=\"item.icon\" class=\"item-icon\">{{ item.icon }}</text>\r\n                <text class=\"item-label\">{{ item.label }}</text>\r\n                <view v-if=\"item.tags\" class=\"item-tags\">\r\n                  <text v-for=\"(tag, ti) in item.tags\" :key=\"ti\" class=\"tag\">{{ tag }}</text>\r\n                </view>\r\n              </view>\r\n              <view class=\"item-selection\">\r\n                <text v-if=\"isItemSelected(item)\" class=\"selected-icon\">✓</text>\r\n                <text v-else-if=\"multiple && item === tempSelection\" class=\"selected-icon\">+</text>\r\n              </view>\r\n            </view>\r\n          </view>\r\n        </template>\r\n        \r\n        <!-- 普通选项 -->\r\n        <template v-else>\r\n          <view \r\n            v-for=\"(item, index) in filteredOptions\" \r\n            :key=\"index\"\r\n            class=\"dropdown-item\"\r\n            @click=\"selectItem(item)\"\r\n          >\r\n            <view class=\"item-content\">\r\n              <text v-if=\"item.icon\" class=\"item-icon\">{{ item.icon }}</text>\r\n              <text class=\"item-label\">{{ item.label }}</text>\r\n              <view v-if=\"item.tags\" class=\"item-tags\">\r\n                <text v-for=\"(tag, ti) in item.tags\" :key=\"ti\" class=\"tag\">{{ tag }}</text>\r\n              </view>\r\n            </view>\r\n            <view class=\"item-selection\">\r\n              <text v-if=\"isItemSelected(item)\" class=\"selected-icon\">✓</text>\r\n              <text v-else-if=\"multiple && item === tempSelection\" class=\"selected-icon\">+</text>\r\n            </view>\r\n          </view>\r\n        </template>\r\n        \r\n        <view v-if=\"showEmpty\" class=\"dropdown-empty\">\r\n          <text>{{ emptyText }}</text>\r\n        </view>\r\n      </scroll-view>\r\n      \r\n      <!-- 多选操作栏 -->\r\n      <view v-if=\"multiple && selectedItems.length > 0\" class=\"dropdown-actions\">\r\n        <text class=\"action-text\">已选 {{ selectedItems.length }} 项</text>\r\n        <text class=\"action-btn\" @click=\"confirmSelection\">确认</text>\r\n        <text class=\"action-btn\" @click=\"cancelSelection\">取消</text>\r\n      </view>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script lang=\"uts\">\r\n/**\r\n * @description 增强版下拉框组件\r\n * @property {Array} options - 选项列表，每项需包含label和value属性\r\n * @property {Any} value - 当前值，可以是单个值或数组（多选模式）\r\n * @property {String} placeholder - 占位文本\r\n * @property {Boolean} searchable - 是否可搜索\r\n * @property {String} searchPlaceholder - 搜索框占位文本\r\n * @property {String} emptyText - 无数据时显示的文本\r\n * @property {Boolean} autoClose - 是否自动关闭下拉菜单\r\n * @property {Boolean} multiple - 是否多选\r\n * @property {Number} maxSelections - 多选时最大选择数量\r\n * @property {Boolean} grouped - 是否分组显示\r\n * @property {Function} displayFormatter - 自定义显示值的格式化函数\r\n * @property {Boolean} collectFullData - 是否收集完整数据\r\n */\r\nexport default {\r\n  name: 'EnhancedDropdown',\r\n  props: {\r\n    // 选项列表\r\n    options: {\r\n      type: Array,\r\n      default: () => [],\r\n      validator: value => {\r\n        return value.every(item => item.label && item.value !== undefined)\r\n      }\r\n    },\r\n    // 当前值（支持多选）\r\n    value: {\r\n      type: [String, Number, Boolean, Object, Array],\r\n      default: null\r\n    },\r\n    // 占位文本\r\n    placeholder: {\r\n      type: String,\r\n      default: '请选择'\r\n    },\r\n    // 是否可搜索\r\n    searchable: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    // 搜索框占位文本\r\n    searchPlaceholder: {\r\n      type: String,\r\n      default: '搜索...'\r\n    },\r\n    // 无数据时显示的文本\r\n    emptyText: {\r\n      type: String,\r\n      default: '无匹配数据'\r\n    },\r\n    // 是否自动关闭下拉菜单\r\n    autoClose: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    // 是否多选\r\n    multiple: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    // 多选时最大选择数量\r\n    maxSelections: {\r\n      type: Number,\r\n      default: null\r\n    },\r\n    // 是否分组显示\r\n    grouped: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    // 自定义显示值的格式化函数\r\n    displayFormatter: {\r\n      type: Function,\r\n      default: null\r\n    },\r\n    // 是否收集完整数据（而不仅仅是value）\r\n    collectFullData: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      isOpen: false,\r\n      searchText: '',\r\n      dropdownWidth: 'auto',\r\n      selectedValue: this.value,\r\n      selectedItems: Array.isArray(this.value) ? [...this.value] : this.value ? [this.value] : [],\r\n      tempSelection: null\r\n    }\r\n  },\r\n  computed: {\r\n    /**\r\n     * @description 显示的值（支持自定义格式化）\r\n     * @returns {String} 格式化后的显示文本\r\n     */\r\n    displayValue() {\r\n      if (this.displayFormatter) {\r\n        return this.displayFormatter(this.selectedItems)\r\n      }\r\n      \r\n      if (this.multiple) {\r\n        return this.selectedItems.length > 0 \r\n          ? this.selectedItems.map(item => item.label).join(', ') \r\n          : ''\r\n      }\r\n      \r\n      return this.selectedItems.length > 0 ? this.selectedItems[0].label : ''\r\n    },\r\n    \r\n    /**\r\n     * @description 过滤后的选项\r\n     * @returns {Array} 过滤后的选项列表\r\n     */\r\n    filteredOptions() {\r\n      if (!this.searchText) return this.options\r\n      const searchText = this.searchText.toLowerCase()\r\n      return this.options.filter(item => \r\n        item.label.toLowerCase().includes(searchText) ||\r\n        (item.tags && item.tags.some(tag => tag.toLowerCase().includes(searchText)))\r\n      )\r\n    },\r\n    \r\n    /**\r\n     * @description 分组后的选项\r\n     * @returns {Object} 分组后的选项对象\r\n     */\r\n    groupedOptions() {\r\n      if (!this.grouped) return {}\r\n      return this.filteredOptions.reduce((groups, item) => {\r\n        const groupName = item.group || ''\r\n        if (!groups[groupName]) {\r\n          groups[groupName] = []\r\n        }\r\n        groups[groupName].push(item)\r\n        return groups\r\n      }, {})\r\n    },\r\n    \r\n    /**\r\n     * @description 是否显示空状态\r\n     * @returns {Boolean} 是否显示空状态\r\n     */\r\n    showEmpty() {\r\n      if (this.grouped) {\r\n        return Object.keys(this.groupedOptions).length === 0\r\n      }\r\n      return this.filteredOptions.length === 0\r\n    }\r\n  },\r\n  watch: {\r\n    value(newVal) {\r\n      if (this.multiple) {\r\n        this.selectedItems = Array.isArray(newVal) ? [...newVal] : []\r\n      } else {\r\n        this.selectedItems = newVal ? [newVal] : []\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    document.addEventListener('click', this.closeDropdown)\r\n    this.$nextTick(() => {\r\n      const query = uni.createSelectorQuery().in(this)\r\n      query.select('.dropdown-trigger').boundingClientRect(data => {\r\n        if (data) {\r\n          this.dropdownWidth = `${data.width}px`\r\n        }\r\n      }).exec()\r\n    })\r\n  },\r\n  beforeDestroy() {\r\n    document.removeEventListener('click', this.closeDropdown)\r\n  },\r\n  methods: {\r\n    /**\r\n     * @description 切换下拉框状态\r\n     */\r\n    toggleDropdown() {\r\n      this.isOpen = !this.isOpen\r\n      if (this.isOpen) {\r\n        this.searchText = ''\r\n        this.tempSelection = null\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * @description 关闭下拉框\r\n     */\r\n    closeDropdown() {\r\n      this.isOpen = false\r\n    },\r\n    \r\n    /**\r\n     * @description 判断项目是否被选中\r\n     * @param {Object} item - 需要判断的选项\r\n     * @returns {Boolean} 是否选中\r\n     */\r\n    isItemSelected(item) {\r\n      return this.selectedItems.some(selected => \r\n        this.compareItems(selected, item)\r\n      )\r\n    },\r\n    \r\n    /**\r\n     * @description 比较两个项目是否相同\r\n     * @param {Object} item1 - 第一个项目\r\n     * @param {Object} item2 - 第二个项目\r\n     * @returns {Boolean} 是否相同\r\n     */\r\n    compareItems(item1, item2) {\r\n      if (typeof item1 === 'object' && typeof item2 === 'object') {\r\n        return item1.value === item2.value\r\n      }\r\n      return item1 === item2\r\n    },\r\n    \r\n    /**\r\n     * @description 选择项目\r\n     * @param {Object} item - 选择的项目\r\n     */\r\n    selectItem(item) {\r\n      if (this.multiple) {\r\n        this.handleMultipleSelection(item)\r\n      } else {\r\n        this.handleSingleSelection(item)\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * @description 处理单选\r\n     * @param {Object} item - 选择的项目\r\n     */\r\n    handleSingleSelection(item) {\r\n      this.selectedItems = [this.collectFullData ? item : item.value]\r\n      this.emitChanges()\r\n      \r\n      if (this.autoClose) {\r\n        this.closeDropdown()\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * @description 处理多选\r\n     * @param {Object} item - 选择的项目\r\n     */\r\n    handleMultipleSelection(item) {\r\n      const itemValue = this.collectFullData ? item : item.value\r\n      const index = this.selectedItems.findIndex(selected => \r\n        this.compareItems(selected, itemValue)\r\n      )\r\n      \r\n      if (index >= 0) {\r\n        // 已选中则取消\r\n        this.selectedItems.splice(index, 1)\r\n      } else {\r\n        // 检查是否超过最大选择数量\r\n        if (this.maxSelections && this.selectedItems.length >= this.maxSelections) {\r\n          uni.showToast({\r\n            title: `最多选择 ${this.maxSelections} 项`,\r\n            icon: 'none'\r\n          })\r\n          return\r\n        }\r\n        this.tempSelection = item\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * @description 确认多选\r\n     */\r\n    confirmSelection() {\r\n      if (this.tempSelection) {\r\n        const itemValue = this.collectFullData ? this.tempSelection : this.tempSelection.value\r\n        this.selectedItems.push(itemValue)\r\n        this.tempSelection = null\r\n        this.emitChanges()\r\n      }\r\n      \r\n      if (this.autoClose) {\r\n        this.closeDropdown()\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * @description 取消多选\r\n     */\r\n    cancelSelection() {\r\n      this.tempSelection = null\r\n    },\r\n    \r\n    /**\r\n     * @description 触发变更事件\r\n     */\r\n    emitChanges() {\r\n      if (this.multiple) {\r\n        const values = this.selectedItems.map(item => \r\n          this.collectFullData ? item : item.value\r\n        )\r\n        this.$emit('input', values)\r\n        this.$emit('change', this.selectedItems)\r\n      } else {\r\n        const value = this.selectedItems.length > 0 \r\n          ? (this.collectFullData ? this.selectedItems[0] : this.selectedItems[0].value)\r\n          : null\r\n        this.$emit('input', value)\r\n        this.$emit('change', this.selectedItems[0] || null)\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * @description 处理搜索\r\n     */\r\n    handleSearch() {\r\n      // 可以在这里添加防抖逻辑\r\n    },\r\n    \r\n    /**\r\n     * @description 获取当前选中的数据（完整对象或值）\r\n     * @returns {Any} 选中的数据\r\n     */\r\n    getSelectedData() {\r\n      if (this.multiple) {\r\n        return this.collectFullData \r\n          ? this.selectedItems \r\n          : this.selectedItems.map(item => item.value)\r\n      }\r\n      return this.selectedItems.length > 0 \r\n        ? (this.collectFullData ? this.selectedItems[0] : this.selectedItems[0].value)\r\n        : null\r\n    },\r\n    \r\n    /**\r\n     * @description 获取当前搜索条件\r\n     * @returns {String} 搜索条件\r\n     */\r\n    getSearchCondition() {\r\n      return this.searchable ? this.searchText : ''\r\n    },\r\n    \r\n    /**\r\n     * @description 获取选中的原始数据（总是返回完整对象）\r\n     * @returns {Any} 选中的原始数据\r\n     */\r\n    getSelectedRawData() {\r\n      if (this.multiple) {\r\n        return this.selectedItems.map(item => \r\n          typeof item === 'object' ? item : this.options.find(opt => opt.value === item)\r\n        ).filter(Boolean)\r\n      }\r\n      return this.selectedItems.length > 0 \r\n        ? (typeof this.selectedItems[0] === 'object' \r\n            ? this.selectedItems[0] \r\n            : this.options.find(opt => opt.value === this.selectedItems[0]))\r\n        : null\r\n    },\r\n    \r\n    /**\r\n     * @description 获取可用于提交给后端的数据\r\n     * @returns {Any} 后端数据\r\n     */\r\n    getPayloadData() {\r\n      const data = this.getSelectedRawData()\r\n      \r\n      if (data === null) return null\r\n      if (Array.isArray(data)) {\r\n        return data.map(item => this.transformItemForBackend(item))\r\n      }\r\n      return this.transformItemForBackend(data)\r\n    },\r\n    \r\n    /**\r\n     * @description 转换单个项目为后端需要的格式\r\n     * @param {Object} item - 项目对象\r\n     * @returns {Object} 转换后的对象\r\n     */\r\n    transformItemForBackend(item) {\r\n      if (!item) return null\r\n      \r\n      return {\r\n        id: item.value, // 通常作为主键\r\n        name: item.label, // 显示名称\r\n        ...item.metadata // 包含任何额外的元数据\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * @description 重置选择\r\n     */\r\n    reset() {\r\n      this.selectedItems = []\r\n      this.searchText = ''\r\n      this.emitChanges()\r\n    },\r\n    \r\n    /**\r\n     * @description 清空搜索\r\n     */\r\n    clearSearch() {\r\n      this.searchText = ''\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.dropdown-container {\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 100%;\r\n}\r\n\r\n.dropdown-trigger {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 12px 16px;\r\n  border: 1px solid #dcdfe6;\r\n  border-radius: 4px;\r\n  background-color: #fff;\r\n  cursor: pointer;\r\n  transition: border-color 0.3s;\r\n  min-height: 40px;\r\n}\r\n\r\n.dropdown-trigger:hover {\r\n  border-color: #c0c4cc;\r\n}\r\n\r\n.selected-value {\r\n  flex: 1;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  color: #606266;\r\n}\r\n\r\n.dropdown-icon {\r\n  margin-left: 8px;\r\n  color: #c0c4cc;\r\n  font-size: 12px;\r\n}\r\n\r\n.dropdown-menu {\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  z-index: 1000;\r\n  margin-top: 4px;\r\n  border: 1px solid #dcdfe6;\r\n  border-radius: 4px;\r\n  background-color: #fff;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n  max-height: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.dropdown-search {\r\n  padding: 8px;\r\n  border-bottom: 1px solid #e4e7ed;\r\n}\r\n\r\n.search-input {\r\n  width: 100%;\r\n  padding: 8px;\r\n  border: 1px solid #dcdfe6;\r\n  border-radius: 4px;\r\n  outline: none;\r\n}\r\n\r\n.search-input:focus {\r\n  border-color: #409eff;\r\n}\r\n\r\n.dropdown-options {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  max-height: 300px;\r\n}\r\n\r\n.dropdown-group {\r\n  padding: 8px 16px;\r\n  font-size: 12px;\r\n  color: #909399;\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.dropdown-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px 16px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n  border-bottom: 1px solid #f0f0f0;\r\n}\r\n\r\n.dropdown-item:hover {\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.item-content {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.item-icon {\r\n  margin-right: 8px;\r\n  font-size: 16px;\r\n}\r\n\r\n.item-label {\r\n  font-size: 14px;\r\n  color: #606266;\r\n}\r\n\r\n.item-tags {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-top: 4px;\r\n}\r\n\r\n.tag {\r\n  font-size: 10px;\r\n  padding: 2px 6px;\r\n  background-color: #f0f0f0;\r\n  border-radius: 3px;\r\n  margin-right: 4px;\r\n  margin-bottom: 4px;\r\n  color: #909399;\r\n}\r\n\r\n.item-selection {\r\n  width: 20px;\r\n  text-align: right;\r\n}\r\n\r\n.selected-icon {\r\n  color: #409eff;\r\n  font-weight: bold;\r\n}\r\n\r\n.dropdown-empty {\r\n  padding: 20px 16px;\r\n  color: #c0c4cc;\r\n  text-align: center;\r\n}\r\n\r\n.dropdown-actions {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 8px 16px;\r\n  border-top: 1px solid #e4e7ed;\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.action-text {\r\n  font-size: 12px;\r\n  color: #909399;\r\n}\r\n\r\n.action-btn {\r\n  padding: 4px 12px;\r\n  margin-left: 8px;\r\n  border-radius: 4px;\r\n  font-size: 12px;\r\n  cursor: pointer;\r\n}\r\n\r\n.action-btn:first-child {\r\n  color: #fff;\r\n  background-color: #409eff;\r\n}\r\n\r\n.action-btn:last-child {\r\n  color: #606266;\r\n  background-color: #fff;\r\n  border: 1px solid #dcdfe6;\r\n}\r\n</style>\r\n","import Component from 'E:/yanshilu重新来过/前端yanshilu_1/components/combobox/combobox.uvue'\nwx.createComponent(Component)"],"mappings":"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","ignoreList":[]}