{"version":3,"file":"teacher.api.js","sources":["store/services/teacher.api.js"],"sourcesContent":["/**\n * @description 老师匹配相关API服务\n */\n\n/**\n * @description 获取老师列表\n * @param {Object} params - 查询参数\n * @param {string} [params.subject] - 科目\n * @param {string} [params.level] - 级别\n * @param {number} [params.page=1] - 页码\n * @param {number} [params.pageSize=10] - 每页数量\n * @returns {Promise<Object>} 老师列表\n */\nexport const getTeachers = (params = {}) => {\n  const { subject, level, page = 1, pageSize = 10 } = params;\n  \n  return new Promise((resolve) => {\n    setTimeout(() => {\n      // 模拟从服务器获取数据\n      const totalCount = 100;\n      const teachers = Array.from({ length: Math.min(pageSize, totalCount - (page - 1) * pageSize) }, (_, index) => {\n        const id = (page - 1) * pageSize + index + 1;\n        return {\n          id: `t${id}`,\n          name: `老师${id}`,\n          avatar: `https://example.com/avatars/teacher${id}.png`,\n          subject: subject || ['数学', '英语', '物理', '化学', '生物'][id % 5],\n          level: level || ['小学', '初中', '高中', '大学'][id % 4],\n          rating: 4 + (id % 10) / 10,\n          price: 100 + (id % 20) * 5,\n          intro: `我是一名有着多年教学经验的${['数学', '英语', '物理', '化学', '生物'][id % 5]}老师，擅长${['小学', '初中', '高中', '大学'][id % 4]}课程辅导。`,\n          tags: ['耐心', '专业', '经验丰富'].slice(0, 1 + id % 3),\n          availableTime: [\n            { day: '周一', slots: ['9:00-11:00', '14:00-16:00'] },\n            { day: '周三', slots: ['9:00-11:00', '14:00-16:00'] },\n            { day: '周五', slots: ['9:00-11:00', '14:00-16:00'] }\n          ]\n        };\n      });\n      \n      resolve({\n        success: true,\n        data: {\n          list: teachers,\n          pagination: {\n            page,\n            pageSize,\n            total: totalCount,\n            totalPages: Math.ceil(totalCount / pageSize)\n          }\n        }\n      });\n    }, 500);\n  });\n};\n\n/**\n * @description 获取老师详情\n * @param {string} teacherId - 老师ID\n * @returns {Promise<Object>} 老师详情\n */\nexport const getTeacherDetail = (teacherId) => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      const id = parseInt(teacherId.replace('t', ''));\n      \n      // 返回符合teacher.js期望的数据结构\n      resolve({\n        success: true,\n        data: {\n          teacher: {\n            id: teacherId,\n            nickname: `老师${id}`, // 从name改为nickname\n            avatar: `https://example.com/avatars/teacher${id}.png`,\n            school: '北京大学', // 新增字段\n            major: ['数学', '英语', '物理', '化学', '生物'][id % 5], // 新增字段\n            score: (4 + (id % 10) / 10).toFixed(1), // 评分\n            tags: ['耐心', '专业', '经验丰富'].slice(0, 1 + id % 3),\n            introduction: `我是一名有着多年教学经验的${['数学', '英语', '物理', '化学', '生物'][id % 5]}老师，擅长${['小学', '初中', '高中', '大学'][id % 4]}课程辅导。` // 从intro改为introduction\n          },\n          services: [\n            { \n              id: `s${id}1`, \n              title: '数学提高班', \n              price: 200, \n              duration: '10课时',\n              description: '适合需要提高数学成绩的学生'\n            },\n            { \n              id: `s${id}2`, \n              title: '一对一辅导', \n              price: 300, \n              duration: '按需',\n              description: '根据学生需求定制的个性化辅导课程'\n            }\n          ]\n        }\n      });\n    }, 600);\n  });\n};\n\n/**\n * @description 预约老师\n * @param {Object} bookingInfo - 预约信息\n * @param {string} bookingInfo.teacherId - 老师ID\n * @param {string} bookingInfo.day - 预约日期\n * @param {string} bookingInfo.timeSlot - 预约时间段\n * @param {string} bookingInfo.subject - 科目\n * @param {string} bookingInfo.message - 留言\n * @returns {Promise<Object>} 预约结果\n */\nexport const bookTeacher = (bookingInfo) => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        success: true,\n        data: {\n          bookingId: `booking_${Date.now()}`,\n          teacherId: bookingInfo.teacherId,\n          studentId: 's1', // 假设当前学生ID\n          status: 'pending',\n          day: bookingInfo.day,\n          timeSlot: bookingInfo.timeSlot,\n          subject: bookingInfo.subject,\n          message: bookingInfo.message,\n          createdAt: new Date().toISOString()\n        },\n        message: '预约请求已发送，等待老师确认'\n      });\n    }, 800);\n  });\n};\n\n/**\n * @description 获取预约列表\n * @param {Object} params - 查询参数\n * @param {string} [params.role='student'] - 角色(student/teacher)\n * @param {string} [params.status] - 状态(pending/confirmed/cancelled/completed)\n * @returns {Promise<Object>} 预约列表\n */\nexport const getBookings = (params = {}) => {\n  const { role = 'student', status } = params;\n  \n  return new Promise((resolve) => {\n    setTimeout(() => {\n      const bookings = Array.from({ length: 5 }, (_, index) => {\n        const statuses = ['pending', 'confirmed', 'cancelled', 'completed'];\n        const currentStatus = status || statuses[index % statuses.length];\n        \n        return {\n          id: `booking_${Date.now() - index * 86400000}`,\n          teacherId: `t${index + 1}`,\n          teacherName: `老师${index + 1}`,\n          teacherAvatar: `https://example.com/avatars/teacher${index + 1}.png`,\n          studentId: 's1',\n          studentName: '当前学生',\n          studentAvatar: 'https://example.com/avatars/student1.png',\n          status: currentStatus,\n          day: ['周一', '周三', '周五'][index % 3],\n          timeSlot: ['9:00-11:00', '14:00-16:00'][index % 2],\n          subject: ['数学', '英语', '物理'][index % 3],\n          message: `我想学习${['数学', '英语', '物理'][index % 3]}中的难点问题`,\n          createdAt: new Date(Date.now() - index * 86400000).toISOString()\n        };\n      });\n      \n      resolve({\n        success: true,\n        data: bookings\n      });\n    }, 500);\n  });\n}; "],"names":[],"mappings":"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"}