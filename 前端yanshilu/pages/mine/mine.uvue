<template>
	<view class="container">
		<!-- 用户信息区 -->
		<view class="user-info">
			<view class="user-info-row">
				<image class="avatar" :src="userInfo ? userInfo.avatarUrl || '/static/image/default_avatar.png' : '/static/image/default_avatar.png'" mode="aspectFill" @click="handleAvatarClick"></image>
				<view class="login-tag-container">
					<text class="login-text" @click="handleLoginClick">{{ userInfo ? userInfo.nickname || '用户' : '登录' }}</text>
					<view class="tag-btn" v-if="userInfo">
						<text>{{ userInfo.tag || '标签' }}</text>
					</view>
					<view class="tag-btn" v-else>
						<text>标签</text>
					</view>
				</view>
			</view>
		</view>
		
		<!-- 用户数据 -->
		<view class="user-stats">
			<view class="stats-row" @click="goToMyPosts">
				<text class="stats-num">{{ userInfo ? userInfo.postCount || '0' : '0' }}</text>
				<text class="stats-label">动态</text>
			</view>
			<view class="stats-row" @click="goToFansList">
				<text class="stats-num">{{ userInfo ? userInfo.fansCount || '0' : '0' }}</text>
				<text class="stats-label">粉丝</text>
			</view>
			<view class="stats-row" @click="goToFollowList">
				<text class="stats-num">{{ userInfo ? userInfo.followCount || '0' : '0' }}</text>
				<text class="stats-label">关注</text>
			</view>
			<view class="stats-row" @click="goToFavorites">
				<text class="stats-num">{{ userInfo ? userInfo.favoriteCount || '0' : '0' }}</text>
				<text class="stats-label">收藏</text>
			</view>
		</view>
		
		<!-- 功能菜单列表 -->
		<view class="menu-list">
			<view class="menu-item" @click="navigateTo('/pages/order/order')">
				<view class="icon-circle success">
					<text class="icon-text">✓</text>
				</view>
				<text class="menu-text">我的订单</text>
			</view>
			<view class="menu-item" @click="navigateTo('/pages/wallet/wallet')">
				<view class="icon-circle warning">
					<text class="icon-text">!</text>
				</view>
				<text class="menu-text">我的钱包</text>
			</view>
			<view class="menu-item" @click="navigateTo('/pages/certification/certification')">
				<view class="icon-circle info">
					<text class="icon-text">i</text>
				</view>
				<text class="menu-text">学长学姐认证</text>
			</view>
			<view class="menu-item" @click="navigateTo('/pages/service/service')">
				<view class="icon-circle info">
					<text class="icon-text">⏱</text>
				</view>
				<text class="menu-text">我的服务</text>
			</view>
			<view class="menu-item" @click="navigateTo('/pages/subscribe/subscribe')">
				<view class="icon-circle info">
					<text class="icon-text">i</text>
				</view>
				<text class="menu-text">关注公众号</text>
			</view>
			<view class="menu-item" @click="navigateTo('/pages/contact/contact')">
				<view class="icon-circle success">
					<text class="icon-text">✓</text>
				</view>
				<text class="menu-text">联系我们</text>
			</view>
			<view class="menu-item" @click="handleLogout" v-if="userInfo">
				<view class="icon-circle warning">
					<text class="icon-text">⚠</text>
				</view>
				<text class="menu-text">退出登录</text>
			</view>
		</view>
		
		<!-- 底部导航栏 -->
		<tab-bar pageName="mine"></tab-bar>
	</view>
</template>

<script>
	/**
	 * @description 个人中心页面
	 */
	import TabBar from '../../components/tab-bar/tab-bar.uvue';
	import { Navigator, CommonRoutes } from '../../utils/routes.js';
	import { isLoggedIn, getUserInfo, checkLogin, logout } from '../../utils/checkload.js';
	
	export default {
		components: {
			TabBar
		},
		data() {
			return {
				userInfo: null
			}
		},
		onLoad() {
			/**
			 * 页面加载时执行
			 */
			this.checkLoginStatus();
		},
		onShow() {
			/**
			 * 确保系统tabBar被隐藏
			 */
			uni.hideTabBar();
			
			// 每次显示页面时检查登录状态，以便更新页面显示
			this.checkLoginStatus();
		},
		methods: {
			/**
			 * @description 检查登录状态
			 */
			checkLoginStatus() {
				// 检查是否已登录
				if (isLoggedIn()) {
					// 获取用户信息
					this.userInfo = getUserInfo();
				} else {
					this.userInfo = null;
				}
			},
			
			/**
			 * @description 处理头像点击
			 */
			handleAvatarClick() {
				if (!this.userInfo) {
					// 未登录，跳转到登录页
					Navigator.toLogin('/pages/mine/mine');
				} else {
					// 已登录，跳转到个人资料页
					this.navigateTo('/pages/mine/profile/profile');
				}
			},
			
			/**
			 * @description 处理登录文本点击
			 */
			handleLoginClick() {
				if (!this.userInfo) {
					// 未登录，跳转到登录页
					Navigator.toLogin('/pages/mine/mine');
				} else {
					// 已登录，跳转到个人资料页
					this.navigateTo('/pages/mine/profile/profile');
				}
			},
			
			/**
			 * @description 处理退出登录
			 */
			handleLogout() {
				uni.showModal({
					title: '提示',
					content: '确定要退出登录吗？',
					success: (res) => {
						if (res.confirm) {
							// 调用退出登录方法
							logout();
							// 更新页面显示
							this.userInfo = null;
						}
					}
				});
			},
			
			/**
			 * 页面跳转方法
			 * @param {string} url - 目标页面路径
			 */
			navigateTo(url) {
				// 有些页面需要登录才能访问
				const requiresLogin = [
					'/pages/order/order',
					'/pages/wallet/wallet',
					'/pages/certification/certification',
					'/pages/service/service',
					'/pages/mine/profile/profile'
				];
				
				// 如果需要登录的页面且未登录，则先检查登录状态
				if (requiresLogin.includes(url) && !isLoggedIn()) {
					// 检查登录状态，未登录会自动跳转到登录页
					checkLogin({
						redirect: url
					});
					return;
				}
				
				// 正常跳转
				uni.navigateTo({
					url: url
				});
			},
			
			/**
			 * @description 跳转到我的帖子页面
			 */
			goToMyPosts() {
				// 检查是否已登录
				if (!checkLogin({ redirect: '/pages/mine/minepost' })) {
					return;
				}
				
				try {
					// 使用主包标准路径格式
					uni.navigateTo({
						url: '/pages/mine/minepost',
						fail: (err) => {
							console.error('跳转失败:', err);
							uni.showToast({
								title: '页面跳转失败',
								icon: 'none'
							});
						}
					});
				} catch (e) {
					console.error('跳转异常:', e);
				}
			},
			
			/**
			 * @description 跳转到粉丝列表页面
			 */
			goToFansList() {
				if (!checkLogin({ redirect: '/pages/mine/fans/fans' })) {
					return;
				}
				
				uni.navigateTo({
					url: '/pages/mine/fans/fans'
				});
			},
			
			/**
			 * @description 跳转到关注列表页面
			 */
			goToFollowList() {
				if (!checkLogin({ redirect: '/pages/mine/follow/follow' })) {
					return;
				}
				
				uni.navigateTo({
					url: '/pages/mine/follow/follow'
				});
			},
			
			/**
			 * @description 跳转到收藏页面
			 */
			goToFavorites() {
				if (!checkLogin({ redirect: '/pages/mine/favorites/favorites' })) {
					return;
				}
				
				uni.navigateTo({
					url: '/pages/mine/favorites/favorites'
				});
			}
		}
	}
</script>

<style>
	page {
		background-color: #ffffff;
	}
	
	.container {
		min-height: 100vh;
		display: flex;
		flex-direction: column;
		box-sizing: border-box;
		padding-bottom: 50px;
	}
	
	/* 用户信息区样式 */
	.user-info {
		display: flex;
		flex-direction: column;
		align-items: flex-start;
		padding: 30rpx;
	}
	
	.user-info-row {
		display: flex;
		flex-direction: row;
		align-items: center;
		width: 100%;
	}
	
	.avatar {
		width: 120rpx;
		height: 120rpx;
		border-radius: 50%;
		margin-right: 20rpx;
	}
	
	.login-tag-container {
		display: flex;
		flex-direction: row;
		align-items: center;
	}
	
	.login-text {
		font-size: 32rpx;
		font-weight: bold;
		margin-right: 20rpx;
	}
	
	.tag-btn {
		background-color: #f5f5f5;
		border-radius: 30rpx;
		padding: 8rpx 30rpx;
	}
	
	.tag-btn text {
		font-size: 26rpx;
		color: #666;
	}
	
	/* 用户数据统计 */
	.user-stats {
		display: flex;
		flex-direction: row;
		justify-content: space-around;
		padding: 20rpx 0;
		border-bottom: 1px solid #f0f0f0;
	}
	
	.stats-row {
		display: flex;
		flex-direction: column;
		align-items: center;
	}
	
	.stats-num {
		font-size: 32rpx;
		font-weight: bold;
		color: #333;
		margin-bottom: 5rpx;
	}
	
	.stats-label {
		font-size: 26rpx;
		color: #666;
	}
	
	/* 菜单列表 */
	.menu-list {
		width: 100%;
	}
	
	.menu-item {
		display: flex;
		flex-direction: row;
		align-items: center;
		justify-content: flex-start;
		padding: 30rpx 0;
		border-bottom: 1px solid #f0f0f0;
	}
	
	.icon-circle {
		width: 60rpx;
		height: 60rpx;
		border-radius: 50%;
		display: flex;
		justify-content: center;
		align-items: center;
		margin: 0 30rpx;
		flex-shrink: 0;
	}
	
	.success {
		background-color: rgba(76, 175, 80, 0.1);
	}
	
	.warning {
		background-color: rgba(255, 82, 82, 0.1);
	}
	
	.info {
		background-color: rgba(33, 150, 243, 0.1);
	}
	
	.icon-text {
		font-size: 30rpx;
		font-weight: bold;
	}
	
	.success .icon-text {
		color: #4CAF50;
	}
	
	.warning .icon-text {
		color: #FF5252;
	}
	
	.info .icon-text {
		color: #2196F3;
	}
	
	.menu-text {
		font-size: 30rpx;
		color: #333;
		text-align: left;
	}
</style>
