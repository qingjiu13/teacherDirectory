<template>
  <view class="container">
    <view class="header">
      <view class="back-button" @tap="goBack">
        <text>←</text>
      </view>
      <text class="title">帖子详情</text>
      <view class="more-button" @tap="showMoreOptions">
        <text>⋮</text>
      </view>
    </view>
    
    <scroll-view class="content" scroll-y="true" @scrolltolower="loadMoreComments">
      <!-- 帖子主体 -->
      <view class="post-card">
        <view class="post-header">
          <view class="user-info">
            <image class="avatar" :src="post.avatar || '/static/image/default_avatar.png'" mode="aspectFill"></image>
            <view class="user-detail">
              <text class="username">{{post.nickname}}</text>
              <text class="school">{{post.school}}</text>
              <text class="major">{{post.major}}</text>
            </view>
          </view>
          <button class="follow-btn" :class="{ followed: post.isFollowed }" @tap="toggleFollow">
            {{post.isFollowed ? '已关注' : '关注'}}
          </button>
        </view>
        
        <view class="post-content">
          <text class="post-title">{{post.title || '无标题'}}</text>
          <text class="post-text">{{post.content}}</text>
          
          <!-- 帖子图片 -->
          <view class="post-images" v-if="post.images && post.images.length > 0">
            <view class="image-grid" :class="'grid-' + (post.images.length > 4 ? 'multi' : post.images.length)">
              <view class="image-item" v-for="(image, index) in post.images" :key="index" @tap="previewImage(index)">
                <image class="post-image" :src="image" mode="aspectFill"></image>
              </view>
            </view>
          </view>
          
          <view class="post-tags" v-if="post.tags && post.tags.length > 0">
            <view class="post-tag" v-for="(tag, index) in post.tags" :key="index">
              #{{tag}}
            </view>
          </view>
        </view>
        
        <view class="post-footer">
          <view class="post-time">{{post.createTime}}</view>
          <view class="stat-item">
            <text class="stat-count">{{post.viewCount}} · 浏览</text>
          </view>
          <view class="action-bar">
            <view class="action-item" @tap="likePost">
              <image class="action-icon" :src="post.isLiked ? '/static/image/like_filled.svg' : '/static/image/like.svg'" mode="aspectFit"></image>
              <text class="action-count">{{post.likeCount}}</text>
            </view>
            <view class="action-item" @tap="focusCommentInput">
              <image class="action-icon" src="/static/image/comment.svg" mode="aspectFit"></image>
              <text class="action-count">{{post.commentCount}}</text>
            </view>
            <view class="action-item" @tap="collectPost">
              <image class="action-icon" :src="post.isCollected ? '/static/image/star_filled.svg' : '/static/image/star.svg'" mode="aspectFit"></image>
              <text class="action-count">{{post.collectCount}}</text>
            </view>
            <view class="action-item" @tap="sharePost">
              <image class="action-icon" src="/static/image/share.svg" mode="aspectFit"></image>
              <text class="action-count">{{post.shareCount}}</text>
            </view>
          </view>
        </view>
      </view>
      
      <!-- 评论区 -->
      <view class="comment-section">
        <view class="section-title">评论 ({{comments.length}})</view>
        
        <view class="comment-list">
          <view class="comment-item" v-for="(comment, index) in comments" :key="index">
            <image class="comment-avatar" :src="comment.avatar || '/static/image/default_avatar.png'" mode="aspectFill"></image>
            <view class="comment-content">
              <view class="comment-user">
                <text class="comment-username">{{comment.nickname}}</text>
                <text class="comment-time">{{comment.createTime}}</text>
              </view>
              <text class="comment-text">{{comment.content}}</text>
              <view class="comment-actions">
                <view class="comment-like" @tap="likeComment(comment)">
                  <image class="comment-like-icon" :src="comment.isLiked ? '/static/image/like_small_filled.svg' : '/static/image/like_small.svg'" mode="aspectFit"></image>
                  <text class="comment-like-count">{{comment.likeCount || 0}}</text>
                </view>
                <view class="comment-reply" @tap="replyComment(comment)">
                  <text>回复</text>
                </view>
              </view>
              
              <!-- 回复列表 -->
              <view class="reply-list" v-if="comment.replies && comment.replies.length > 0">
                <view class="reply-item" v-for="(reply, replyIndex) in comment.replies" :key="replyIndex">
                  <view class="reply-user">
                    <text class="reply-username">{{reply.nickname}}</text>
                    <text v-if="reply.replyTo" class="reply-to">回复</text>
                    <text v-if="reply.replyTo" class="reply-to-username">{{reply.replyToName}}</text>
                    <text class="reply-text">: {{reply.content}}</text>
                  </view>
                </view>
                <view class="more-replies" v-if="comment.replyCount > comment.replies.length" @tap="loadMoreReplies(comment)">
                  <text>查看更多回复</text>
                </view>
              </view>
            </view>
          </view>
          
          <!-- 加载更多评论 -->
          <view class="load-more" v-if="hasMoreComments && comments.length > 0" @tap="loadMoreComments">
            <text>加载更多</text>
          </view>
          
          <!-- 无评论提示 -->
          <view class="no-comment" v-if="comments.length === 0">
            <text>暂无评论，快来发表你的看法吧</text>
          </view>
        </view>
      </view>
    </scroll-view>
    
    <!-- 评论输入区域 -->
    <view class="comment-input-section">
      <input 
        class="comment-input" 
        :placeholder="replyTarget ? `回复 ${replyTarget.nickname}` : '说点什么...'" 
        v-model="commentContent"
        :focus="inputFocus"
        confirm-type="send"
        @confirm="submitComment"
      />
      <view class="send-btn" :class="{ active: commentContent }" @tap="submitComment">
        <text>发送</text>
      </view>
    </view>
  </view>
</template>

<script>
  export default {
    data() {
      return {
        postId: null,
        post: {
          id: null,
          userId: null,
          nickname: '',
          avatar: '',
          school: '',
          major: '',
          title: '',
          content: '',
          images: [],
          tags: [],
          createTime: '',
          viewCount: 0,
          likeCount: 0,
          commentCount: 0,
          collectCount: 0,
          shareCount: 0,
          isLiked: false,
          isCollected: false,
          isFollowed: false
        },
        comments: [],
        commentPage: 1,
        hasMoreComments: true,
        commentContent: '',
        inputFocus: false,
        replyTarget: null,
        isLoadingComments: false
      }
    },
    onLoad(options) {
      if (options.id) {
        this.postId = options.id;
        this.loadPostDetail();
        this.loadComments();
        
        // 如果需要直接显示评论区
        if (options.showComment) {
          this.inputFocus = true;
        }
      } else {
        // 使用模拟数据
        this.loadMockData();
      }
    },
    methods: {
      /**
       * @description 加载模拟数据
       */
      loadMockData() {
        // 模拟帖子详情
        this.post = {
          id: 1,
          userId: 101,
          nickname: '研究生活小助手',
          avatar: '/static/image/default_avatar.png',
          school: '北京大学',
          major: '计算机科学',
          title: '考研复习经验分享',
          content: '今天分享一下考研复习经验，希望对大家有帮助！数学部分要注重基础，多做真题。考研复习是一场持久战，要合理规划时间，保持良好心态。英语阅读需要每天坚持，政治要理解记忆结合。',
          images: [],
          tags: ['考研', '复习经验', '时间规划'],
          createTime: '2023-06-15 14:30',
          viewCount: 256,
          likeCount: 42,
          commentCount: 8,
          collectCount: 15,
          shareCount: 3,
          isLiked: false,
          isCollected: false,
          isFollowed: false
        };
        
        // 模拟评论
        this.comments = [
          {
            id: 101,
            nickname: '考研学子',
            avatar: '/static/image/default_avatar.png',
            content: '感谢分享，对我帮助很大！',
            createTime: '2023-06-15 15:20',
            likeCount: 5,
            isLiked: false,
            replies: [
              {
                id: 201,
                nickname: '研究生活小助手',
                content: '不客气，希望对你有帮助~',
                createTime: '2023-06-15 15:30',
                replyTo: 101,
                replyToName: '考研学子'
              }
            ],
            replyCount: 1
          },
          {
            id: 102,
            nickname: '未来研究生',
            avatar: '/static/image/default_avatar.png',
            content: '请问数学复习有什么具体建议吗？',
            createTime: '2023-06-15 16:45',
            likeCount: 3,
            isLiked: false,
            replies: [],
            replyCount: 0
          }
        ];
      },
      
      /**
       * @description 加载帖子详情
       */
      loadPostDetail() {
        // 实际开发中应调用API
        // 此处使用模拟数据
        this.loadMockData();
        
        // API调用示例
        /*
        uni.request({
          url: `YOUR_API_URL/post/detail/${this.postId}`,
          method: 'GET',
          success: (res) => {
            if (res.statusCode === 200 && res.data) {
              this.post = res.data;
              
              // 记录浏览量
              this.recordView();
            }
          },
          fail: () => {
            uni.showToast({
              title: '加载失败',
              icon: 'none'
            });
          }
        });
        */
      },
      
      /**
       * @description 记录浏览量
       */
      recordView() {
        // 模拟记录浏览量
        this.post.viewCount++;
        
        // API调用示例
        /*
        uni.request({
          url: `YOUR_API_URL/post/view`,
          method: 'POST',
          data: { postId: this.postId },
          success: () => {
            // 浏览量+1
            this.post.viewCount++;
          }
        });
        */
      },
      
      /**
       * @description 加载评论
       */
      loadComments() {
        if (this.isLoadingComments) return;
        
        this.isLoadingComments = true;
        
        // 模拟加载评论的延迟
        setTimeout(() => {
          // 这里已经在loadMockData中设置了模拟评论
          // 如果是加载更多，模拟没有更多数据
          if (this.commentPage > 1) {
            this.hasMoreComments = false;
          }
          
          this.isLoadingComments = false;
        }, 500);
        
        // API调用示例
        /*
        uni.request({
          url: `YOUR_API_URL/post/comments`,
          method: 'GET',
          data: {
            postId: this.postId,
            page: this.commentPage,
            pageSize: 10
          },
          success: (res) => {
            if (res.statusCode === 200 && res.data) {
              if (this.commentPage === 1) {
                this.comments = res.data.comments || [];
              } else {
                this.comments = [...this.comments, ...(res.data.comments || [])];
              }
              
              this.hasMoreComments = res.data.hasMore || false;
            }
          },
          complete: () => {
            this.isLoadingComments = false;
          }
        });
        */
      },
      
      /**
       * @description 加载更多评论
       */
      loadMoreComments() {
        if (!this.hasMoreComments || this.isLoadingComments) return;
        
        this.commentPage++;
        this.loadComments();
      },
      
      /**
       * @description 加载更多回复
       */
      loadMoreReplies(comment) {
        // 模拟加载更多回复
        uni.showToast({
          title: '已加载全部回复',
          icon: 'none'
        });
      },
      
      /**
       * @description 预览图片
       */
      previewImage(index) {
        uni.previewImage({
          urls: this.post.images,
          current: this.post.images[index]
        });
      },
      
      /**
       * @description 返回上一页
       */
      goBack() {
        uni.navigateBack();
      },
      
      /**
       * @description 显示更多选项
       */
      showMoreOptions() {
        uni.showActionSheet({
          itemList: ['举报', '不感兴趣', '分享'],
          success: (res) => {
            switch(res.tapIndex) {
              case 0: // 举报
                this.reportPost();
                break;
              case 1: // 不感兴趣
                this.markNotInterested();
                break;
              case 2: // 分享
                this.sharePost();
                break;
            }
          }
        });
      },
      
      /**
       * @description 关注/取消关注用户
       */
      toggleFollow() {
        this.post.isFollowed = !this.post.isFollowed;
        
        uni.showToast({
          title: this.post.isFollowed ? '已关注' : '已取消关注',
          icon: 'none'
        });
      },
      
      /**
       * @description 点赞帖子
       */
      likePost() {
        this.post.isLiked = !this.post.isLiked;
        this.post.likeCount += this.post.isLiked ? 1 : -1;
      },
      
      /**
       * @description 收藏帖子
       */
      collectPost() {
        this.post.isCollected = !this.post.isCollected;
        this.post.collectCount += this.post.isCollected ? 1 : -1;
        
        uni.showToast({
          title: this.post.isCollected ? '已收藏' : '已取消收藏',
          icon: 'none'
        });
      },
      
      /**
       * @description 分享帖子
       */
      sharePost() {
        uni.showActionSheet({
          itemList: ['分享给好友', '分享到微信好友', '分享到微信群聊', '分享到朋友圈'],
          success: (res) => {
            // 更新分享计数
            this.post.shareCount++;
            
            uni.showToast({
              title: '分享成功',
              icon: 'success'
            });
          }
        });
      },
      
      /**
       * @description 举报帖子
       */
      reportPost() {
        uni.showToast({
          title: '举报已提交',
          icon: 'success'
        });
      },
      
      /**
       * @description 标记为不感兴趣
       */
      markNotInterested() {
        uni.showToast({
          title: '已减少此类内容推送',
          icon: 'none'
        });
        
        // 延迟返回上一页
        setTimeout(() => {
          uni.navigateBack();
        }, 1500);
      },
      
      /**
       * @description 点赞评论
       */
      likeComment(comment) {
        comment.isLiked = !comment.isLiked;
        comment.likeCount += comment.isLiked ? 1 : -1;
      },
      
      /**
       * @description 回复评论
       */
      replyComment(comment) {
        this.replyTarget = {
          id: comment.id,
          nickname: comment.nickname,
          type: 'comment'
        };
        this.inputFocus = true;
      },
      
      /**
       * @description 聚焦评论输入框
       */
      focusCommentInput() {
        this.replyTarget = null;
        this.inputFocus = true;
      },
      
      /**
       * @description 提交评论或回复
       */
      submitComment() {
        if (!this.commentContent.trim()) {
          return;
        }
        
        // 构建新评论对象
        const newComment = {
          id: Date.now(),
          nickname: '当前用户',
          avatar: '/static/image/default_avatar.png',
          content: this.commentContent,
          createTime: '刚刚',
          likeCount: 0,
          isLiked: false,
          replies: [],
          replyCount: 0
        };
        
        // 如果是回复，添加到对应评论的回复列表中
        if (this.replyTarget) {
          const targetComment = this.comments.find(c => c.id === this.replyTarget.id);
          if (targetComment) {
            const newReply = {
              id: Date.now(),
              nickname: '当前用户',
              content: this.commentContent,
              createTime: '刚刚',
              replyTo: this.replyTarget.id,
              replyToName: this.replyTarget.nickname
            };
            
            targetComment.replies.push(newReply);
            targetComment.replyCount++;
          }
        } else {
          // 如果是新评论，添加到评论列表开头
          this.comments.unshift(newComment);
        }
        
        // 清空输入框并更新评论计数
        this.commentContent = '';
        this.replyTarget = null;
        this.post.commentCount++;
        
        uni.showToast({
          title: '评论成功',
          icon: 'success'
        });
      }
    }
  }
</script>

<style>
  .container {
    display: flex;
    flex-direction: column;
    height: 100vh;
    background-color: #f5f5f5;
  }
  
  .header {
    display: flex;
    flex-direction: row;
    align-items: center;
    padding: 10px 15px;
    background-color: #ffffff;
    border-bottom: 1px solid #eeeeee;
  }
  
  .back-button, .more-button {
    padding: 5px 10px;
    font-size: 18px;
  }
  
  .title {
    flex: 1;
    text-align: center;
    font-size: 16px;
    font-weight: bold;
  }
  
  .content {
    flex: 1;
    padding-bottom: 50px;
  }
  
  .post-card {
    background-color: #ffffff;
    padding: 15px;
    margin-bottom: 10px;
  }
  
  .post-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 15px;
  }
  
  .user-info {
    display: flex;
    align-items: center;
  }
  
  .avatar {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    margin-right: 10px;
    border: 1px solid #f0f0f0;
  }
  
  .user-detail {
    display: flex;
    flex-direction: column;
  }
  
  .username {
    font-size: 16px;
    font-weight: bold;
    margin-bottom: 2px;
  }
  
  .school, .major {
    font-size: 12px;
    color: #666666;
    margin-bottom: 2px;
  }
  
  .follow-btn {
    padding: 5px 15px;
    background-color: #ffffff;
    border: 1px solid #007aff;
    border-radius: 15px;
    color: #007aff;
    font-size: 12px;
    line-height: 1.5;
    min-width: 60px;
  }
  
  .follow-btn.followed {
    background-color: #f0f0f0;
    border-color: #f0f0f0;
    color: #666666;
  }
  
  .post-content {
    margin-bottom: 15px;
  }
  
  .post-title {
    font-size: 18px;
    font-weight: bold;
    margin-bottom: 10px;
    display: block;
  }
  
  .post-text {
    font-size: 15px;
    line-height: 1.6;
    color: #333333;
    margin-bottom: 10px;
    display: block;
  }
  
  .post-images {
    margin-bottom: 10px;
  }
  
  .image-grid {
    display: flex;
    flex-wrap: wrap;
  }
  
  .grid-1 .image-item {
    width: 100%;
    height: 200px;
  }
  
  .grid-2 .image-item, .grid-4 .image-item {
    width: 50%;
    height: 150px;
    padding: 2px;
    box-sizing: border-box;
  }
  
  .grid-3 .image-item, .grid-multi .image-item {
    width: 33.33%;
    height: 120px;
    padding: 2px;
    box-sizing: border-box;
  }
  
  .post-image {
    width: 100%;
    height: 100%;
    border-radius: 4px;
  }
  
  .post-tags {
    display: flex;
    flex-wrap: wrap;
    margin-bottom: 10px;
  }
  
  .post-tag {
    padding: 4px 8px;
    background-color: #f0f0f0;
    border-radius: 4px;
    font-size: 12px;
    color: #666666;
    margin-right: 8px;
    margin-bottom: 8px;
  }
  
  .post-footer {
    display: flex;
    flex-direction: column;
    border-top: 1px solid #f5f5f5;
    padding-top: 10px;
  }
  
  .post-time {
    font-size: 12px;
    color: #999999;
    margin-bottom: 5px;
  }
  
  .stat-item {
    font-size: 12px;
    color: #999999;
    margin-bottom: 8px;
  }
  
  .action-bar {
    display: flex;
    flex-direction: row;
    width: 100%;
    box-sizing: border-box;
    padding: 10px 0;
  }
  
  .action-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 5px 0;
    transition: background-color 0.2s ease;
  }
  
  .action-item:active {
    background-color: #f5f5f5;
  }
  
  .action-icon {
    width: 20px;
    height: 20px;
    margin-bottom: 3px;
    margin-right: 0;
  }
  
  .action-count {
    font-size: 12px;
    color: #666666;
    text-align: center;
  }
  
  .comment-section {
    background-color: #ffffff;
    padding: 15px;
  }
  
  .section-title {
    font-size: 16px;
    font-weight: bold;
    margin-bottom: 15px;
  }
  
  .comment-item {
    display: flex;
    margin-bottom: 15px;
    padding-bottom: 15px;
    border-bottom: 1px solid #f5f5f5;
  }
  
  .comment-avatar {
    width: 36px;
    height: 36px;
    border-radius: 50%;
    margin-right: 10px;
  }
  
  .comment-content {
    flex: 1;
  }
  
  .comment-user {
    display: flex;
    justify-content: space-between;
    margin-bottom: 5px;
  }
  
  .comment-username {
    font-size: 14px;
    font-weight: bold;
  }
  
  .comment-time {
    font-size: 12px;
    color: #999999;
  }
  
  .comment-text {
    font-size: 14px;
    line-height: 1.5;
    color: #333333;
    margin-bottom: 8px;
  }
  
  .comment-actions {
    display: flex;
    align-items: center;
    margin-bottom: 8px;
  }
  
  .comment-like {
    display: flex;
    align-items: center;
    margin-right: 15px;
  }
  
  .comment-like-icon {
    width: 16px;
    height: 16px;
    margin-right: 3px;
  }
  
  .comment-like-count {
    font-size: 12px;
    color: #999999;
  }
  
  .comment-reply {
    font-size: 12px;
    color: #666666;
  }
  
  .reply-list {
    background-color: #f9f9f9;
    padding: 8px;
    border-radius: 4px;
  }
  
  .reply-item {
    margin-bottom: 8px;
  }
  
  .reply-user {
    display: flex;
    flex-wrap: wrap;
    font-size: 12px;
    line-height: 1.5;
  }
  
  .reply-username {
    color: #007aff;
    font-weight: bold;
  }
  
  .reply-to {
    margin: 0 3px;
    color: #999999;
  }
  
  .reply-to-username {
    color: #007aff;
  }
  
  .reply-text {
    color: #333333;
  }
  
  .more-replies {
    font-size: 12px;
    color: #007aff;
    margin-top: 5px;
  }
  
  .load-more {
    text-align: center;
    padding: 10px 0;
    font-size: 14px;
    color: #999999;
  }
  
  .no-comment {
    text-align: center;
    padding: 20px 0;
    font-size: 14px;
    color: #999999;
  }
  
  .comment-input-section {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    display: flex;
    align-items: center;
    padding: 10px 15px;
    background-color: #ffffff;
    border-top: 1px solid #eeeeee;
    z-index: 100;
  }
  
  .comment-input {
    flex: 1;
    height: 36px;
    line-height: 36px;
    padding: 0 10px;
    border: 1px solid #eeeeee;
    border-radius: 18px;
    font-size: 14px;
    background-color: #f5f5f5;
  }
  
  .send-btn {
    padding: 0 15px;
    height: 36px;
    line-height: 36px;
    margin-left: 10px;
    border-radius: 18px;
    font-size: 14px;
    color: #999999;
  }
  
  .send-btn.active {
    color: #007aff;
  }
</style>