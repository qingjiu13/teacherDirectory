{"version":3,"file":"OnboardingFlow.js","sources":["components/OnboardingFlow/OnboardingFlow.uvue","../../HBuilderX/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/uniComponent:/RToveWFuc2hpbHXlsI_nqIvluo_liY3nq68v5YmN56uveWFuc2hpbHUvY29tcG9uZW50cy9PbmJvYXJkaW5nRmxvdy9PbmJvYXJkaW5nRmxvdy51dnVl"],"sourcesContent":["<template>\r\n  <view v-if=\"showContent\">\r\n    <!-- 引导蒙层 -->\r\n    <view v-if=\"showGuide\" class=\"guide-mask\" :style=\"{ backgroundColor: maskColor }\">\r\n      <view class=\"highlight-box\" :style=\"highlightStyle\"></view>\r\n      \r\n      <view class=\"guide-content\" :style=\"guidePosition\">\r\n        <view class=\"guide-title\">{{ currentStep.title || '' }}</view>\r\n        <view class=\"guide-text\">{{ currentStep.content }}</view>\r\n        <view class=\"guide-buttons\">\r\n          <button size=\"mini\" @click=\"prevStep\" v-if=\"currentStepIndex > 0\">上一步</button>\r\n          <button size=\"mini\" type=\"primary\" :style=\"{ backgroundColor: primaryColor }\" @click=\"nextStep\">\r\n            {{ isLastStep ? '完成' : '下一步' }}\r\n          </button>\r\n        </view>\r\n      </view>\r\n    </view>\r\n    \r\n    <!-- 卡片布局 -->\r\n    <view v-if=\"showCards\" class=\"cards-container\">\r\n      <view class=\"cards-grid\">\r\n        <view \r\n          v-for=\"(card, index) in cards\" \r\n          :key=\"card.id || index\" \r\n          class=\"card-item\"\r\n          @click=\"handleCardClick(card)\"\r\n        >\r\n          <image class=\"card-icon\" :src=\"card.icon\" mode=\"aspectFit\"></image>\r\n          <view class=\"card-title\">{{ card.title }}</view>\r\n          <view class=\"card-rating\">\r\n            <text v-for=\"i in 5\" :key=\"i\" class=\"rating-star\" \r\n                 :class=\"{ active: i <= card.rating }\">★</text>\r\n          </view>\r\n          <view class=\"card-description\">{{ card.description }}</view>\r\n          <button \r\n            class=\"card-button\" \r\n            :style=\"{ backgroundColor: primaryColor }\"\r\n            v-if=\"card.buttonText\"\r\n          >{{ card.buttonText }}</button>\r\n        </view>\r\n      </view>\r\n    </view>\r\n    \r\n    <!-- 卡片详情弹窗 -->\r\n    <view v-if=\"showCardDetail\" class=\"card-detail-modal\">\r\n      <view class=\"card-detail-content\">\r\n        <view class=\"card-detail-close\" @click=\"closeCardDetail\">×</view>\r\n        <image class=\"card-detail-icon\" :src=\"selectedCard.icon\" mode=\"aspectFit\"></image>\r\n        <view class=\"card-detail-title\">{{ selectedCard.title }}</view>\r\n        <view class=\"card-detail-rating\">\r\n          <text v-for=\"i in 5\" :key=\"i\" class=\"rating-star\"\r\n               :class=\"{ active: i <= selectedCard.rating }\">★</text>\r\n        </view>\r\n        <view class=\"card-detail-description\">{{ selectedCard.description }}</view>\r\n        <button \r\n          class=\"card-detail-button\" \r\n          :style=\"{ backgroundColor: primaryColor }\"\r\n          v-if=\"selectedCard.buttonText\"\r\n        >{{ selectedCard.buttonText }}</button>\r\n      </view>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script lang=\"uts\">\r\nimport { ref, computed, onMounted, onUnmounted } from 'vue';\r\n\r\n/**\r\n * @description 可复用新手引导组件\r\n */\r\nexport default {\r\n  props: {\r\n    // 引导步骤配置\r\n    steps: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    // 完成引导后显示的卡片数据\r\n    cards: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    // 遮罩颜色\r\n    maskColor: {\r\n      type: String,\r\n      default: 'rgba(0,0,0,0.5)'\r\n    },\r\n    // 主题色\r\n    primaryColor: {\r\n      type: String,\r\n      default: '#2563eb'\r\n    },\r\n    // 引导标识符，用于localStorage存储\r\n    guideKey: {\r\n      type: String,\r\n      default: 'guideCompleted'\r\n    }\r\n  },\r\n  \r\n  setup(props, { emit }) {\r\n    const showContent = ref(true);\r\n    const showGuide = ref(false);\r\n    const showCards = ref(false);\r\n    const showCardDetail = ref(false);\r\n    const selectedCard = ref({});\r\n    const currentStepIndex = ref(0);\r\n    const highlightStyle = ref({});\r\n    const guidePosition = ref({});\r\n    \r\n    // 计算属性\r\n    const currentStep = computed(() => {\r\n      return props.steps[currentStepIndex.value] || {};\r\n    });\r\n    \r\n    const isLastStep = computed(() => {\r\n      return currentStepIndex.value === props.steps.length - 1;\r\n    });\r\n    \r\n    // 检查引导是否已完成\r\n    function checkGuideCompleted() {\r\n      try {\r\n        return uni.getStorageSync(props.guideKey) === 'true';\r\n      } catch (e) {\r\n        uni.__f__('error','at components/OnboardingFlow/OnboardingFlow.uvue:124','获取引导状态失败', e);\r\n        return false;\r\n      }\r\n    }\r\n    \r\n    // 初始化引导\r\n    function initGuide() {\r\n      if (props.steps && props.steps.length > 0) {\r\n        if (!checkGuideCompleted()) {\r\n          currentStepIndex.value = 0;\r\n          showGuide.value = true;\r\n          showCards.value = false;\r\n          \r\n          // 确保DOM更新后再计算位置\r\n          setTimeout(() => {\r\n            updateHighlight();\r\n          }, 300);\r\n        } else if (props.cards && props.cards.length > 0) {\r\n          // 如果引导已完成且有卡片数据，直接显示卡片\r\n          showGuide.value = false;\r\n          showCards.value = true;\r\n        } else {\r\n          // 如果既没有引导也没有卡片，不显示任何内容\r\n          showContent.value = false;\r\n        }\r\n      }\r\n    }\r\n    \r\n    // 更新高亮区域\r\n    function updateHighlight() {\r\n      if (!currentStep.value || !currentStep.value.target) return;\r\n      \r\n      const query = uni.createSelectorQuery();\r\n      query.select(`#${currentStep.value.target}`).boundingClientRect(data => {\r\n        if (!data) {\r\n          uni.__f__('warn','at components/OnboardingFlow/OnboardingFlow.uvue:159',`目标元素 #${currentStep.value.target} 不存在，自动跳过`);\r\n          \r\n          // 如果目标元素不存在，自动进入下一步\r\n          if (isLastStep.value) {\r\n            completeGuide();\r\n          } else {\r\n            currentStepIndex.value++;\r\n            setTimeout(() => updateHighlight(), 100);\r\n          }\r\n          return;\r\n        }\r\n        \r\n        // 设置高亮区域样式\r\n        highlightStyle.value = {\r\n          width: `${data.width}px`,\r\n          height: `${data.height}px`,\r\n          left: `${data.left}px`,\r\n          top: `${data.top}px`\r\n        };\r\n        \r\n        // 计算引导内容位置\r\n        const placement = currentStep.value.placement || 'bottom';\r\n        const guidePos = calculateGuidePosition(data, placement);\r\n        \r\n        // 应用位置\r\n        guidePosition.value = {\r\n          left: `${guidePos.x}px`,\r\n          top: `${guidePos.y}px`\r\n        };\r\n      }).exec();\r\n    }\r\n    \r\n    // 计算引导内容位置\r\n    function calculateGuidePosition(targetRect, placement) {\r\n      const offset = 20;\r\n      const viewportWidth = uni.getSystemInfoSync().windowWidth;\r\n      const viewportHeight = uni.getSystemInfoSync().windowHeight;\r\n      const contentWidth = 300; // 估计的内容宽度\r\n      const contentHeight = 150; // 估计的内容高度\r\n      \r\n      let position = { x: 0, y: 0 };\r\n      \r\n      switch(placement) {\r\n        case 'bottom':\r\n          position = {\r\n            x: targetRect.left + (targetRect.width / 2) - (contentWidth / 2),\r\n            y: targetRect.top + targetRect.height + offset\r\n          };\r\n          break;\r\n        case 'top':\r\n          position = {\r\n            x: targetRect.left + (targetRect.width / 2) - (contentWidth / 2),\r\n            y: targetRect.top - contentHeight - offset\r\n          };\r\n          break;\r\n        case 'left':\r\n          position = {\r\n            x: targetRect.left - contentWidth - offset,\r\n            y: targetRect.top + (targetRect.height / 2) - (contentHeight / 2)\r\n          };\r\n          break;\r\n        case 'right':\r\n          position = {\r\n            x: targetRect.left + targetRect.width + offset,\r\n            y: targetRect.top + (targetRect.height / 2) - (contentHeight / 2)\r\n          };\r\n          break;\r\n        default:\r\n          position = {\r\n            x: targetRect.left + (targetRect.width / 2) - (contentWidth / 2),\r\n            y: targetRect.top + targetRect.height + offset\r\n          };\r\n      }\r\n      \r\n      // 防止内容超出视口\r\n      position.x = Math.max(10, Math.min(position.x, viewportWidth - contentWidth - 10));\r\n      position.y = Math.max(10, Math.min(position.y, viewportHeight - contentHeight - 10));\r\n      \r\n      return position;\r\n    }\r\n    \r\n    // 下一步\r\n    function nextStep() {\r\n      if (isLastStep.value) {\r\n        completeGuide();\r\n      } else {\r\n        currentStepIndex.value++;\r\n        setTimeout(() => {\r\n          updateHighlight();\r\n        }, 100);\r\n      }\r\n    }\r\n    \r\n    // 上一步\r\n    function prevStep() {\r\n      if (currentStepIndex.value > 0) {\r\n        currentStepIndex.value--;\r\n        setTimeout(() => {\r\n          updateHighlight();\r\n        }, 100);\r\n      }\r\n    }\r\n    \r\n    // 完成引导\r\n    function completeGuide() {\r\n      showGuide.value = false;\r\n      try {\r\n        uni.setStorageSync(props.guideKey, 'true');\r\n      } catch (e) {\r\n        uni.__f__('error','at components/OnboardingFlow/OnboardingFlow.uvue:268','保存引导状态失败', e);\r\n      }\r\n      \r\n      // 触发完成事件\r\n      emit('complete');\r\n      \r\n      // 如果有卡片数据，显示卡片布局\r\n      if (props.cards && props.cards.length > 0) {\r\n        showCards.value = true;\r\n      } else {\r\n        showContent.value = false;\r\n      }\r\n    }\r\n    \r\n    // 处理卡片点击\r\n    function handleCardClick(card) {\r\n      selectedCard.value = card;\r\n      showCardDetail.value = true;\r\n      emit('card-click', card);\r\n    }\r\n    \r\n    // 关闭卡片详情\r\n    function closeCardDetail() {\r\n      showCardDetail.value = false;\r\n    }\r\n    \r\n    // 手动重启引导\r\n    function restartGuide() {\r\n      try {\r\n        uni.removeStorageSync(props.guideKey);\r\n      } catch (e) {\r\n        uni.__f__('error','at components/OnboardingFlow/OnboardingFlow.uvue:299','清除引导状态失败', e);\r\n      }\r\n      \r\n      currentStepIndex.value = 0;\r\n      showGuide.value = true;\r\n      showCards.value = false;\r\n      showCardDetail.value = false;\r\n      showContent.value = true;\r\n      \r\n      setTimeout(() => {\r\n        updateHighlight();\r\n      }, 300);\r\n    }\r\n    \r\n    // uni-app环境不支持window，改用页面生命周期钩子\r\n    let resizeTimer = null;\r\n    \r\n    // 生命周期：组件挂载完成时初始化\r\n    onMounted(() => {\r\n      initGuide();\r\n    });\r\n    \r\n    return {\r\n      // 状态\r\n      showContent,\r\n      showGuide,\r\n      showCards,\r\n      showCardDetail,\r\n      currentStepIndex,\r\n      highlightStyle,\r\n      guidePosition,\r\n      selectedCard,\r\n      \r\n      // 计算属性\r\n      currentStep,\r\n      isLastStep,\r\n      \r\n      // 方法\r\n      nextStep,\r\n      prevStep,\r\n      handleCardClick,\r\n      closeCardDetail,\r\n      restartGuide\r\n    };\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n/* 引导部分样式 */\r\n.guide-mask {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: 9999;\r\n}\r\n\r\n.highlight-box {\r\n  position: absolute;\r\n  box-shadow: 0 0 0 9999px rgba(0, 0, 0, 0.5), 0 0 15px rgba(255, 255, 255, 0.5);\r\n  border-radius: 4px;\r\n  z-index: 10000;\r\n}\r\n\r\n.guide-content {\r\n  position: absolute;\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 12px;\r\n  min-width: 300px;\r\n  max-width: 350px;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\r\n  z-index: 10001;\r\n}\r\n\r\n.guide-title {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  margin-bottom: 8px;\r\n  color: #333;\r\n}\r\n\r\n.guide-text {\r\n  margin-bottom: 15px;\r\n  font-size: 14px;\r\n  color: #555;\r\n  line-height: 1.5;\r\n}\r\n\r\n.guide-buttons {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.guide-buttons button {\r\n  margin-left: 10px;\r\n}\r\n\r\n/* 卡片部分样式 */\r\n.cards-container {\r\n  width: 100%;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.cards-grid {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: 0 -10px;\r\n}\r\n\r\n.card-item {\r\n  width: calc(33.33% - 20px);\r\n  margin: 10px;\r\n  background-color: #fff;\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\r\n  transition: all 0.3s ease;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.card-item:active {\r\n  transform: scale(1.02);\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.card-icon {\r\n  width: 60px;\r\n  height: 60px;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.card-title {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n  color: #333;\r\n}\r\n\r\n.card-rating {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.rating-star {\r\n  font-size: 16px;\r\n  color: #ddd;\r\n}\r\n\r\n.rating-star.active {\r\n  color: #FFCC00;\r\n}\r\n\r\n.card-description {\r\n  font-size: 14px;\r\n  color: #666;\r\n  margin-bottom: 15px;\r\n  line-height: 1.4;\r\n}\r\n\r\n.card-button {\r\n  width: 100%;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 6px;\r\n  padding: 8px;\r\n  font-size: 14px;\r\n}\r\n\r\n/* 卡片详情弹窗 */\r\n.card-detail-modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: rgba(0, 0, 0, 0.6);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 10010;\r\n}\r\n\r\n.card-detail-content {\r\n  width: 80%;\r\n  max-width: 400px;\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 30px;\r\n  position: relative;\r\n  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.card-detail-close {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 15px;\r\n  font-size: 24px;\r\n  color: #999;\r\n  cursor: pointer;\r\n}\r\n\r\n.card-detail-icon {\r\n  width: 80px;\r\n  height: 80px;\r\n  margin: 0 auto 20px;\r\n  display: block;\r\n}\r\n\r\n.card-detail-title {\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.card-detail-rating {\r\n  text-align: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.card-detail-description {\r\n  font-size: 15px;\r\n  color: #444;\r\n  line-height: 1.5;\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.card-detail-button {\r\n  width: 100%;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 6px;\r\n  padding: 12px;\r\n  font-size: 16px;\r\n}\r\n\r\n/* 响应式布局 */\r\n@media screen and (max-width: 768px) {\r\n  .card-item {\r\n    width: calc(50% - 20px);\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 480px) {\r\n  .card-item {\r\n    width: 100%;\r\n  }\r\n  \r\n  .guide-content {\r\n    min-width: 250px;\r\n    max-width: 300px;\r\n  }\r\n}\r\n</style> ","import Component from 'E:/yanshilu小程序前端/前端yanshilu/components/OnboardingFlow/OnboardingFlow.uvue'\nwx.createComponent(Component)"],"names":["defineComponent","ref","computed","uni","onMounted"],"mappings":"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"}