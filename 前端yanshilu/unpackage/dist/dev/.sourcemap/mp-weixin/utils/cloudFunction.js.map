{"version":3,"file":"cloudFunction.js","sources":["utils/cloudFunction.js"],"sourcesContent":["/**\r\n * @description 云函数调用工具\r\n * @module cloudFunction\r\n */\r\n\r\nimport { CLOUD_FUNCTION_MODE, CUSTOM_API_URL } from '../config.js';\r\n\r\n/**\r\n * @description 调用云函数\r\n * @param {Object} options - 调用选项\r\n * @param {String} options.name - 云函数名称\r\n * @param {Object} options.data - 请求数据\r\n * @param {Number} options.timeout - 超时时间\r\n * @returns {Promise<Object>} 云函数执行结果\r\n */\r\nexport default function callCloudFunction(options) {\r\n  const { name, data, timeout = 5000 } = options;\r\n  \r\n  // 检查参数\r\n  if (!name) {\r\n    return Promise.reject(new Error('云函数名称不能为空'));\r\n  }\r\n  \r\n  // 根据模式执行不同的调用方式\r\n  if (CLOUD_FUNCTION_MODE === 'unicloud') {\r\n    // 使用原生uniCloud调用\r\n    return uniCloud.callFunction({\r\n      name,\r\n      data,\r\n      timeout\r\n    });\r\n  } else if (CLOUD_FUNCTION_MODE === 'custom') {\r\n    // 使用自定义API调用\r\n    return new Promise((resolve, reject) => {\r\n      uni.request({\r\n        url: `${CUSTOM_API_URL}/call/${name}`,\r\n        method: 'POST',\r\n        data: { data },\r\n        timeout,\r\n        header: {\r\n          'Content-Type': 'application/json',\r\n          'X-Platform': uni.getSystemInfoSync().platform,\r\n          'X-AppId': process.env.UNI_APP_ID || '',\r\n        },\r\n        success: (res) => {\r\n          if (res.statusCode === 200) {\r\n            // 模拟uniCloud.callFunction的返回格式\r\n            resolve({\r\n              result: res.data,\r\n              requestId: res.header['x-request-id'] || '',\r\n              success: true,\r\n              errCode: 0\r\n            });\r\n          } else {\r\n            reject(new Error(`HTTP错误: ${res.statusCode}`));\r\n          }\r\n        },\r\n        fail: (err) => {\r\n          reject(new Error(`请求失败: ${err.errMsg}`));\r\n        }\r\n      });\r\n    });\r\n  } else {\r\n    return Promise.reject(new Error(`不支持的云函数调用模式: ${CLOUD_FUNCTION_MODE}`));\r\n  }\r\n} "],"names":["options","name","data","timeout","Promise","resolve","reject","uni","request","url","CUSTOM_API_URL","method","header","getSystemInfoSync","platform","success","res","statusCode","result","requestId","errCode","Error","fail","err","errMsg"],"mappings":"wGAeA,SAA0CA,GACxC,MAAMC,KAAEA,EAAAC,KAAMA,EAAMC,QAAAA,EAAU,KAASH,EAGvC,OAAKC,EAcI,IAAIG,SAAQ,CAACC,EAASC,KAC3BC,EAAAA,MAAIC,QAAQ,CACVC,IAAK,GAAGC,EAAAA,uBAAuBT,IAC/BU,OAAQ,OACRT,KAAM,CAAEA,QACRC,UACAS,OAAQ,CACN,eAAgB,mBAChB,aAAcL,EAAAA,MAAIM,oBAAoBC,SACtC,UAAW,kBAEbC,QAAUC,IACe,MAAnBA,EAAIC,WAEEZ,EAAA,CACNa,OAAQF,EAAId,KACZiB,UAAWH,EAAIJ,OAAO,iBAAmB,GACzCG,SAAS,EACTK,QAAS,IAGXd,EAAO,IAAIe,MAAM,WAAWL,EAAIC,cAClC,EAEFK,KAAOC,IACLjB,EAAO,IAAIe,MAAM,SAASE,EAAIC,UAAS,GAE1C,IAxCIpB,QAAQE,OAAO,IAAIe,MAAM,aA6CpC"}